<Type Name="XmlSchemaSet" FullName="System.Xml.Schema.XmlSchemaSet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95c84a65dda349c44d2625e4bd881d75ecddf107" /><Meta Name="ms.sourcegitcommit" Value="0de246131f8a87c71d008d055adec7bf72470c4f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/29/2019" /><Meta Name="ms.locfileid" Value="66301816" /></Metadata><TypeSignature Language="C#" Value="public class XmlSchemaSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaSet" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaSet" />
  <TypeSignature Language="F#" Value="type XmlSchemaSet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="93a46-101">包含 XML 結構描述定義語言 (XSD) 結構描述的快取。</span><span class="sxs-lookup"><span data-stu-id="93a46-101">Contains a cache of XML Schema definition language (XSD) schemas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   <span data-ttu-id="93a46-102">請勿使用從未知或未受信任的來源或位置的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-102">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="93a46-103">如此一來會危及您的程式碼的安全性。</span><span class="sxs-lookup"><span data-stu-id="93a46-103">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="93a46-104">XML 結構描述 （包括內嵌結構描述） 是本質上容易遭到阻絕服務攻擊;不接受這些未受信任的案例中。</span><span class="sxs-lookup"><span data-stu-id="93a46-104">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="93a46-105">結構描述驗證錯誤訊息和例外狀況可能會公開機密資訊的內容模型或結構描述檔案的 URI 路徑。</span><span class="sxs-lookup"><span data-stu-id="93a46-105">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="93a46-106">請小心，不要公開 （expose） 給未受信任的呼叫端的這項資訊。</span><span class="sxs-lookup"><span data-stu-id="93a46-106">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="93a46-107">其他安全性考量事項涵蓋在 < 安全性考量 > 一節。</span><span class="sxs-lookup"><span data-stu-id="93a46-107">Additional security considerations are covered in the "Security Considerations" section.</span></span>  
  
 <span data-ttu-id="93a46-108"><xref:System.Xml.Schema.XmlSchemaSet> 快取或程式庫，您可以在其中儲存的 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-108"><xref:System.Xml.Schema.XmlSchemaSet> is a cache or library where you can store XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="93a46-109"><xref:System.Xml.Schema.XmlSchemaSet> 會藉由在記憶體中快取結構描述，而不是從檔案或 URL 來存取它們，來增加效能。</span><span class="sxs-lookup"><span data-stu-id="93a46-109"><xref:System.Xml.Schema.XmlSchemaSet> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</span></span> <span data-ttu-id="93a46-110">每個結構描述由命名空間 URI，且位置為可讓您指定結構描述加入至集合時。</span><span class="sxs-lookup"><span data-stu-id="93a46-110">Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</span></span> <span data-ttu-id="93a46-111">您使用<xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType>屬性來指派<xref:System.Xml.Schema.XmlSchemaSet>物件的 XML 讀取器應該用來驗證資料。</span><span class="sxs-lookup"><span data-stu-id="93a46-111">You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> property to assign the <xref:System.Xml.Schema.XmlSchemaSet> object an XML reader should use for data validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="93a46-112">安全性考量</span><span class="sxs-lookup"><span data-stu-id="93a46-112">Security Considerations</span></span>  
  
-   <span data-ttu-id="93a46-113">請勿使用來源不明或不受信任來源的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-113">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="93a46-114">如此一來會危及您的程式碼的安全性。</span><span class="sxs-lookup"><span data-stu-id="93a46-114">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="93a46-115">外部命名空間或位置中參考包含，匯入和重新定義結構描述項目的解決相關的結構描述併入或匯入它們的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="93a46-115">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="93a46-116">例如，如果併入或匯入結構描述的基底 URI 是空的或`null`，外部的位置會相對於目前的目錄解析。</span><span class="sxs-lookup"><span data-stu-id="93a46-116">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="93a46-117"><xref:System.Xml.XmlUrlResolver>類別預設用來解析外部結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-117">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="93a46-118">若要停用解析的 include，匯入，並重新定義結構描述的項目，設定<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType>屬性設`null`。</span><span class="sxs-lookup"><span data-stu-id="93a46-118">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="93a46-119"><xref:System.Xml.Schema.XmlSchemaSet>類別會使用<xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>類別來剖析和比對規則運算式中的 XML 結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-119">The <xref:System.Xml.Schema.XmlSchemaSet> class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> class to parse and match regular expressions in an XML schema.</span></span> <span data-ttu-id="93a46-120">使用 XML 結構描述中的規則運算式的模式 facet 的驗證可能會增加的 CPU 使用量和高可用性案例中應避免使用。</span><span class="sxs-lookup"><span data-stu-id="93a46-120">Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</span></span>  
  
-   <span data-ttu-id="93a46-121">使用所引發的例外狀況<xref:System.Xml.Schema.XmlSchemaSet>類別，例如<xref:System.Xml.Schema.XmlSchemaException>類別可能包含不應公開受信任的案例中的機密資訊。</span><span class="sxs-lookup"><span data-stu-id="93a46-121">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93a46-122">例如，<xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性<xref:System.Xml.Schema.XmlSchemaException>傳回至造成例外狀況的結構描述檔案的 URI 路徑。</span><span class="sxs-lookup"><span data-stu-id="93a46-122">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="93a46-123"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>屬性不應公開受信任的案例中。</span><span class="sxs-lookup"><span data-stu-id="93a46-123">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="93a46-124">使機密資訊不會暴露在不受信任的情況下，就應該正確處理例外狀況。</span><span class="sxs-lookup"><span data-stu-id="93a46-124">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-125">下列範例會使用儲存在 <xref:System.Xml.Schema.XmlSchemaSet> 中的結構描述，來驗證 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="93a46-125">The following example validates an XML file using schemas stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-126">XML 檔案中的命名空間 (`urn:bookstore-schema`)，會識別 <xref:System.Xml.Schema.XmlSchemaSet> 中用於驗證的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-126">The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span> <span data-ttu-id="93a46-127">範例輸出所顯示的 XML 檔有兩個結構描述違規：</span><span class="sxs-lookup"><span data-stu-id="93a46-127">Output from the example shows that the XML file has two schema violations:</span></span>

 - <span data-ttu-id="93a46-128">第一個\<書籍 > 項目包含\<作者 > 項目，但沒有\<標題 > 或\<價格 > 項目。</span><span class="sxs-lookup"><span data-stu-id="93a46-128">The first \<book> element contains an \<author> element but no \<title> or \<price> element.</span></span>

 - <span data-ttu-id="93a46-129">\<作者 > 中最後一個項目\<活頁簿 > 遺漏項目\<名字 > 並\<-n > 項目並改為具有無效的\<名稱 > 項目。</span><span class="sxs-lookup"><span data-stu-id="93a46-129">The \<author> element in the last \<book> element is missing a \<first-name> and \<last-name> element and instead has an invalid \<name> element.</span></span>   
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="93a46-130">輸入</span><span class="sxs-lookup"><span data-stu-id="93a46-130">Input</span></span>  
 <span data-ttu-id="93a46-131">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="93a46-131">The sample uses the following two input files.</span></span>  
  
 <span data-ttu-id="93a46-132">**booksSchemaFail.xml:**</span><span class="sxs-lookup"><span data-stu-id="93a46-132">**booksSchemaFail.xml:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 <span data-ttu-id="93a46-133">**books.xsd:**</span><span class="sxs-lookup"><span data-stu-id="93a46-133">**books.xsd:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93a46-134">初始化 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="93a46-134">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93a46-135">初始化 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="93a46-135">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="new System.Xml.Schema.XmlSchemaSet : System.Xml.XmlNameTable -&gt; System.Xml.Schema.XmlSchemaSet" Usage="new System.Xml.Schema.XmlSchemaSet nameTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="93a46-136">要使用的 <see cref="T:System.Xml.XmlNameTable" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-136">The <see cref="T:System.Xml.XmlNameTable" /> object to use.</span></span></param>
        <summary><span data-ttu-id="93a46-137">使用指定的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 初始化 <see cref="T:System.Xml.XmlNameTable" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="93a46-137">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-138">做為參數傳遞的 <see cref="T:System.Xml.XmlNameTable" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-138">The <see cref="T:System.Xml.XmlNameTable" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93a46-139">將指定的 XML 結構描述定義語言 (XSD) 結構描述加入 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-139">Adds the given XML Schema definition language (XSD) schema to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="93a46-140">要加入 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-140">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="93a46-141">將指定的 <see cref="T:System.Xml.Schema.XmlSchema" /> 加入 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-141">Adds the given <see cref="T:System.Xml.Schema.XmlSchema" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-142"><see cref="T:System.Xml.Schema.XmlSchema" /> 物件 (如果結構描述有效)。</span><span class="sxs-lookup"><span data-stu-id="93a46-142">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="93a46-143">如果結構描述無效，且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，則會傳回 <see langword="null" />，並會引發適當的驗證事件。</span><span class="sxs-lookup"><span data-stu-id="93a46-143">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="93a46-144">否則會擲回 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-144">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-145">如果<xref:System.Xml.Schema.XmlSchema>物件已經存在於<xref:System.Xml.Schema.XmlSchemaSet>，則<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法不做任何動作。</span><span class="sxs-lookup"><span data-stu-id="93a46-145">If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method does nothing.</span></span>  
  
 <span data-ttu-id="93a46-146">此方法的功能等同於<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-146">The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-147">此結構描述無效。</span><span class="sxs-lookup"><span data-stu-id="93a46-147">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-148">做為參數傳遞的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-148">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Xml.Schema.XmlSchemaSet -&gt; unit" Usage="xmlSchemaSet.Add schemas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="93a46-149"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-149">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></param>
        <summary><span data-ttu-id="93a46-150">將指定 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的所有 XML 結構描述定義語言 (XSD) 結構描述加入 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-150">Adds all the XML Schema definition language (XSD) schemas in the given <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-151">結構描述可以新增至之前<xref:System.Xml.Schema.XmlSchemaSet>，它必須成功地前置處理。</span><span class="sxs-lookup"><span data-stu-id="93a46-151">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="93a46-152">前置處理，就會執行下列基本工作。</span><span class="sxs-lookup"><span data-stu-id="93a46-152">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="93a46-153">結構化的有效性，根據 W3C XML 結構描述，規則會檢查結構描述，但不是完全驗證的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-153">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="93a46-154">內部和外部結構描述元件的參考會解析。</span><span class="sxs-lookup"><span data-stu-id="93a46-154">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="93a46-155">已成功擷取任何匯入或包含結構描述也會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-155">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-156">匯入結構描述會新增為個別<xref:System.Xml.Schema.XmlSchema>物件和包含的結構描述進行的部分包括<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="93a46-156">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="93a46-157">如果<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性<xref:System.Xml.Schema.XmlSchemaSet>若要加入`true`中, 所有結構描述<xref:System.Xml.Schema.XmlSchemaSet>將會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-157">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-158">如果<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>的屬性<xref:System.Xml.Schema.XmlSchemaSet>若要將`false`，才能新增的每個加入的結構描述會經過前置處理。</span><span class="sxs-lookup"><span data-stu-id="93a46-158">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added.</span></span> <span data-ttu-id="93a46-159">如果有任何新加入的結構描述<xref:System.Xml.Schema.XmlSchemaSet>無法會前置處理結構描述會加入; 相反地，<xref:System.Xml.Schema.XmlSchemaException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="93a46-159">If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown.</span></span> <span data-ttu-id="93a46-160">如此一來，下列兩個程式碼範例並不相同。</span><span class="sxs-lookup"><span data-stu-id="93a46-160">As a result, the following two code example are not equivalent.</span></span>  
  
```vb  
' First example  
schemaSet.Add(schemaSet1)  
  
' Second example  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    schemaSet.Add(schema)  
  
Next  
```  
  
```csharp  
// First example  
schemaSet.Add(schemaSet1);  
  
// Second example  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    schemaSet.Add(schema);  
}  
```  
  
 <span data-ttu-id="93a46-161">先前的兩個程式碼範例並不相同。</span><span class="sxs-lookup"><span data-stu-id="93a46-161">The previous two code examples are not equivalent.</span></span> <span data-ttu-id="93a46-162">在第一個範例中，如果無效的結構描述存在於`schemaSet1`並將其<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設定為`false`，沒有結構描述會新增至`schemaSet`。</span><span class="sxs-lookup"><span data-stu-id="93a46-162">In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`.</span></span> <span data-ttu-id="93a46-163">在第二個範例中，結構描述數目可以新增至`schemaSet`遇到無效的結構描述，並擲回例外狀況之前。</span><span class="sxs-lookup"><span data-stu-id="93a46-163">In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-164">下列程式碼範例說明如何將結構描述新增至<xref:System.Xml.Schema.XmlSchemaSet>，然後加入<xref:System.Xml.Schema.XmlSchemaSet>新<xref:System.Xml.Schema.XmlSchemaSet>使用<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-164">The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
```vb  
Dim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  
schemaSet2.Add(schemaSet1)  
```  
  
```csharp  
XmlSchemaSet schemaSet1 = new XmlSchemaSet();  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchemaSet schemaSet2 = new XmlSchemaSet();  
schemaSet2.Add(schemaSet1);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-165"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的結構描述無效。</span><span class="sxs-lookup"><span data-stu-id="93a46-165">A schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-166">做為參數傳遞的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-166">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, string schemaUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaUri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::String ^ schemaUri);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add (targetNamespace, schemaUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="93a46-167">結構描述 <paramref name="targetNamespace" /> 屬性，如果使用結構描述中指定的 <paramref name="targetNamespace" /> 則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-167">The schema <paramref name="targetNamespace" /> property, or <see langword="null" /> to use the <paramref name="targetNamespace" /> specified in the schema.</span></span></param>
        <param name="schemaUri"><span data-ttu-id="93a46-168">指定要載入之結構描述的 URL。</span><span class="sxs-lookup"><span data-stu-id="93a46-168">The URL that specifies the schema to load.</span></span></param>
        <summary><span data-ttu-id="93a46-169">將指定 URL 處的 XML 結構描述定義語言 (XSD) 結構描述加入 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-169">Adds the XML Schema definition language (XSD) schema at the URL specified to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-170"><see cref="T:System.Xml.Schema.XmlSchema" /> 物件 (如果結構描述有效)。</span><span class="sxs-lookup"><span data-stu-id="93a46-170">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="93a46-171">如果結構描述無效，且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，則會傳回 <see langword="null" />，並會引發適當的驗證事件。</span><span class="sxs-lookup"><span data-stu-id="93a46-171">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="93a46-172">否則會擲回 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-172">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-173">結構描述可以新增至之前<xref:System.Xml.Schema.XmlSchemaSet>，它必須成功地前置處理。</span><span class="sxs-lookup"><span data-stu-id="93a46-173">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="93a46-174">前置處理，就會執行下列基本工作。</span><span class="sxs-lookup"><span data-stu-id="93a46-174">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="93a46-175">結構化的有效性，根據 W3C XML 結構描述，規則會檢查結構描述，但不是完全驗證的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-175">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="93a46-176">內部和外部結構描述元件的參考會解析。</span><span class="sxs-lookup"><span data-stu-id="93a46-176">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="93a46-177">已成功擷取任何匯入或包含結構描述也會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-177">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-178">匯入結構描述會新增為個別<xref:System.Xml.Schema.XmlSchema>物件和包含的結構描述進行的部分包括<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="93a46-178">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="93a46-179">以下是使用時要考慮的重要注意事項<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-179">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="93a46-180">新增至結構描述<xref:System.Xml.Schema.XmlSchemaSet>具有相同目標命名空間和結構描述位置 URL 做為已包含在結構描述<xref:System.Xml.Schema.XmlSchemaSet>會傳回原始的結構描述物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-180">Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.</span></span>  
  
-   <span data-ttu-id="93a46-181">當新的結構描述已成功新增至<xref:System.Xml.Schema.XmlSchemaSet>，則<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性<xref:System.Xml.Schema.XmlSchemaSet>設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="93a46-181">When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.</span></span>  
  
-   <span data-ttu-id="93a46-182">在 XML 結構描述中遇到任何包含 」 或 「 匯入項目時，都會在解析<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-182">Any include or import elements encountered in an XML schema are resolved when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="93a46-183">若要解決失敗 include 和 import 項目產生結構描述驗證警告如果沒有<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>尚未指定<xref:System.Xml.Schema.XmlSchemaSet>物件，這些警告將不會報告。</span><span class="sxs-lookup"><span data-stu-id="93a46-183">Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.</span></span>  
  
-   <span data-ttu-id="93a46-184">如果具有相同的目標命名空間中現有的結構描述的結構描述<xref:System.Xml.Schema.XmlSchemaSet>新增至<xref:System.Xml.Schema.XmlSchemaSet>，新增兩個結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-184">If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="93a46-185">此行為不同於過時<xref:System.Xml.Schema.XmlSchemaCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-185">This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.</span></span>  
  
-   <span data-ttu-id="93a46-186"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法<xref:System.Xml.Schema.XmlSchemaSet>能夠使用的目標命名空間的結構描述中定義，而不需要做為參數指定的目標命名空間時<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-186">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="93a46-187">指定`null`中`targetNamespace`的參數<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法會指示<xref:System.Xml.Schema.XmlSchemaSet>若要使用的結構描述中定義的目標命名空間，如下列程式碼範例所示。</span><span class="sxs-lookup"><span data-stu-id="93a46-187">Specifying `null` in the `targetNamespace` parameter of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "books.xsd")  
  
Dim schema As XmlSchema  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
    schema.Write(Console.Out)  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "books.xsd");  
  
foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 <span data-ttu-id="93a46-188">在上述程式碼範例`null`指定為`targetNamespace`參數來<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-188">In the code example above, `null` is specified as the `targetNamespace` parameter to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span> <span data-ttu-id="93a46-189">如此一來，`targetNamespace`定義在 books.xml 檔案會使用。</span><span class="sxs-lookup"><span data-stu-id="93a46-189">As a result, the `targetNamespace` defined in the books.xml file is used.</span></span> <span data-ttu-id="93a46-190">在此情況下，呼叫<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法，可與相同如果http://www.contoso.com/books有已指定為`targetNamespace`參數。</span><span class="sxs-lookup"><span data-stu-id="93a46-190">In this case, the result of calling the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter.</span></span>  
  
-   <span data-ttu-id="93a46-191">W3C XML 結構描述可讓沒有目標命名空間包含結構描述中定義的目標命名空間與結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-191">W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</span></span> <span data-ttu-id="93a46-192">在此情況下，沒有目標命名空間定義的結構描述會強制轉型成包含的結構描述的目標命名空間。</span><span class="sxs-lookup"><span data-stu-id="93a46-192">In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</span></span> <span data-ttu-id="93a46-193">包含的結構描述會被視為它已有定義該目標命名空間。</span><span class="sxs-lookup"><span data-stu-id="93a46-193">The included schema is treated as if it had that target namespace defined.</span></span> <span data-ttu-id="93a46-194">同樣地，沒有目標命名空間的結構描述可以加入<xref:System.Xml.Schema.XmlSchemaSet>強制轉型成所指定的目標命名空間和<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="93a46-194">Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method, as illustrated in the following example.</span></span>  
  
```  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="A" type="xs:string" />  
</xs:schema>  
```  
  
 <span data-ttu-id="93a46-195">如果上述的結構描述加入<xref:System.Xml.Schema.XmlSchemaSet>具有目標命名空間http://www.contoso.com/new/targetnamespace（如所示在下列程式碼中），它會被視為宣告結構描述中的目標命名空間是`http://www.contoso.com/new/targetnamespace`。</span><span class="sxs-lookup"><span data-stu-id="93a46-195">If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    Console.WriteLine(schema.TargetNamespace)     
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    Console.WriteLine(schema.TargetNamespace);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="93a46-196">下列程式碼範例會將http://www.contoso.com/books.xsd具有目標命名空間的結構描述http://www.contoso.com/books至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-196">The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
```  
  
 <span data-ttu-id="93a46-197">該範例使用 `books.xsd` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93a46-197">The example uses the `books.xsd` file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-198">此結構描述無效。</span><span class="sxs-lookup"><span data-stu-id="93a46-198">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-199">以參數形式傳遞的 URL 為 <see langword="null" /> 或 <see cref="F:System.String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-199">The URL passed as a parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, class System.Xml.XmlReader schemaDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaDocument As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::Xml::XmlReader ^ schemaDocument);" />
      <MemberSignature Language="F#" Value="member this.Add : string * System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Add (targetNamespace, schemaDocument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="93a46-200">結構描述 <paramref name="targetNamespace" /> 屬性，如果使用結構描述中指定的 <paramref name="targetNamespace" /> 則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-200">The schema <paramref name="targetNamespace" /> property, or <see langword="null" /> to use the <paramref name="targetNamespace" /> specified in the schema.</span></span></param>
        <param name="schemaDocument"><span data-ttu-id="93a46-201"><see cref="T:System.Xml.XmlReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-201">The <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="93a46-202">將 <see cref="T:System.Xml.XmlReader" /> 中包含的 XML 結構描述定義語言 (XSD) 結構描述加入 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-202">Adds the XML Schema definition language (XSD) schema contained in the <see cref="T:System.Xml.XmlReader" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-203"><see cref="T:System.Xml.Schema.XmlSchema" /> 物件 (如果結構描述有效)。</span><span class="sxs-lookup"><span data-stu-id="93a46-203">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="93a46-204">如果結構描述無效，且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，則會傳回 <see langword="null" />，並會引發適當的驗證事件。</span><span class="sxs-lookup"><span data-stu-id="93a46-204">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="93a46-205">否則會擲回 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-205">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-206">結構描述可以新增至之前<xref:System.Xml.Schema.XmlSchemaSet>，它必須成功地前置處理。</span><span class="sxs-lookup"><span data-stu-id="93a46-206">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="93a46-207">前置處理，就會執行下列基本工作。</span><span class="sxs-lookup"><span data-stu-id="93a46-207">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="93a46-208">結構化的有效性，根據 W3C XML 結構描述，規則會檢查結構描述，但不是完全驗證的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-208">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="93a46-209">內部和外部結構描述元件的參考會解析。</span><span class="sxs-lookup"><span data-stu-id="93a46-209">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="93a46-210">已成功擷取任何匯入或包含結構描述也會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-210">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-211">匯入結構描述會新增為個別<xref:System.Xml.Schema.XmlSchema>物件和包含的結構描述進行的部分包括<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="93a46-211">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="93a46-212">以下是使用時要考慮的重要注意事項<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-212">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="93a46-213">已成功擷取匯入或包含在結構描述所包含的結構描述<xref:System.Xml.XmlReader>也會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-213">Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
-   <span data-ttu-id="93a46-214">如果<xref:System.Xml.XmlReader>並非位於根項目<xref:System.Xml.Schema.XmlSchemaException>除非目前的項目是項目，否則會擲回。</span><span class="sxs-lookup"><span data-stu-id="93a46-214">If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element.</span></span> <span data-ttu-id="93a46-215">如果目前的項目`xs:schema`項目中，結構描述文件讀入<xref:System.Xml.Schema.XmlSchemaSet>; 否則即為<xref:System.Xml.Schema.XmlSchemaException>因為無效的結構描述會擲回。</span><span class="sxs-lookup"><span data-stu-id="93a46-215">If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.</span></span>  
  
-   <span data-ttu-id="93a46-216">如果<xref:System.Xml.XmlReader>位於 XML 節點的序列，會加入只在序列中的第一個節點。</span><span class="sxs-lookup"><span data-stu-id="93a46-216">If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</span></span>  
  
-   <span data-ttu-id="93a46-217">如果從已建立的結構描述<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>方法呼叫、 值<xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>屬性會被忽略，因為內嵌結構描述處理不會套用為 W3C XML 結構描述文件。</span><span class="sxs-lookup"><span data-stu-id="93a46-217">If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</span></span>  
  
-   <span data-ttu-id="93a46-218"><xref:System.Xml.XmlResolver>屬性<xref:System.Xml.XmlReader>不會用來解析命名空間或結構描述中的位置參考 include 和 import 項目。</span><span class="sxs-lookup"><span data-stu-id="93a46-218">The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements.</span></span> <span data-ttu-id="93a46-219">相反地，<xref:System.Xml.XmlResolver>屬性<xref:System.Xml.Schema.XmlSchemaSet>用。</span><span class="sxs-lookup"><span data-stu-id="93a46-219">Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.</span></span>  
  
-   <span data-ttu-id="93a46-220"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法<xref:System.Xml.Schema.XmlSchemaSet>能夠使用的目標命名空間的結構描述中定義，而不需要做為參數指定的目標命名空間時<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-220">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="93a46-221">指定`null`或是<xref:System.String.Empty?displayProperty=nameWithType>要<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法會指示<xref:System.Xml.Schema.XmlSchemaSet>使用結構描述中定義的目標命名空間。</span><span class="sxs-lookup"><span data-stu-id="93a46-221">Specifying `null` or <xref:System.String.Empty?displayProperty=nameWithType> to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema.</span></span> <span data-ttu-id="93a46-222">如需此行為的範例，請參閱<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-222">For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 <span data-ttu-id="93a46-223">此方法的其餘功能完全相同的<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-223">The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-224">下列程式碼範例會將 books.xsd 結構描述中包含<xref:System.Xml.XmlTextReader>使用的目標命名空間http://www.contoso.com/books至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-224">The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", New XmlTextReader("books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", new XmlTextReader("books.xsd");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-225">此結構描述無效。</span><span class="sxs-lookup"><span data-stu-id="93a46-225">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-226">做為參數傳遞的 <see cref="T:System.Xml.XmlReader" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-226">The <see cref="T:System.Xml.XmlReader" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompilationSettings">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationSettings As XmlSchemaCompilationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCompilationSettings ^ CompilationSettings { System::Xml::Schema::XmlSchemaCompilationSettings ^ get(); void set(System::Xml::Schema::XmlSchemaCompilationSettings ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CompilationSettings : System.Xml.Schema.XmlSchemaCompilationSettings with get, set" Usage="System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCompilationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-227">取得或設定 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-227">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="93a46-228"><see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 的 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-228">The <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="93a46-229">預設為將 <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> 屬性設為 <see langword="true" /> 的 <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="93a46-229">The default is an <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> instance with the <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> property set to <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-230"><xref:System.Xml.Schema.XmlSchemaCompilationSettings>類別會指定 Unique Particle Attribution (UPA) 的驗證選項<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-230">The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-231">如需啟用 UPA 驗證檢查的詳細資訊，請參閱<xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="93a46-231">For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile();" />
      <MemberSignature Language="F#" Value="member this.Compile : unit -&gt; unit" Usage="xmlSchemaSet.Compile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93a46-232">將加入至 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的 XML 結構描述定義語言 (XSD) 結構描述，編譯為一個邏輯結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-232">Compiles the XML Schema definition language (XSD) schemas added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into one logical schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-233">當需要驗證時自動呼叫這個方法和<xref:System.Xml.Schema.XmlSchemaSet>尚未被先前編譯-例如，當<xref:System.Xml.Schema.XmlSchemaSet>做為輸入來建立<xref:System.Xml.XmlReader>物件<xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>屬性<xref:System.Xml.XmlReaderSettings>物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-233">This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled - for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="93a46-234">如果<xref:System.Xml.Schema.XmlSchemaSet>是已編譯的狀態，這個方法將不重新編譯的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-234">If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas.</span></span> <span data-ttu-id="93a46-235">如果這個方法執行成功，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="93a46-235">If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="93a46-236">先前編譯的結構描述<xref:System.Xml.Schema.XmlSchemaSet>不會重新編譯。</span><span class="sxs-lookup"><span data-stu-id="93a46-236">Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled.</span></span> <span data-ttu-id="93a46-237">不過，使用編譯的結構描述<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法的<xref:System.Xml.Schema.XmlSchema>會重新編譯。</span><span class="sxs-lookup"><span data-stu-id="93a46-237">However, schemas that were compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93a46-238">您必須呼叫<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法，如果您已變更的結構描述 （或其中一個包含/匯入） 之後將它新增至, <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-238">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-239"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法會檢查結構描述的結構化的有效性，根據 W3C XML 結構描述的規則。</span><span class="sxs-lookup"><span data-stu-id="93a46-239">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="93a46-240">不過，它不會執行完整的驗證檢查。</span><span class="sxs-lookup"><span data-stu-id="93a46-240">However, it will not perform a full validation check.</span></span> <span data-ttu-id="93a46-241">它也會解析內部和外部結構描述元件的參考。</span><span class="sxs-lookup"><span data-stu-id="93a46-241">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="93a46-242">已成功擷取任何匯入或包含結構描述也會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-242">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-243">匯入結構描述會新增為個別<xref:System.Xml.Schema.XmlSchema>物件時包含結構描述進行一部分包括<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="93a46-243">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="93a46-244">如果重新處理呼叫成功，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設定為 false。</span><span class="sxs-lookup"><span data-stu-id="93a46-244">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-245">錯誤發生於驗證和編譯 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的結構描述時。</span><span class="sxs-lookup"><span data-stu-id="93a46-245">An error occurred when validating and compiling the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93a46-246">指出 XML 結構描述定義語言 (XSD) 結構描述是否位於 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="93a46-246">Indicates whether an XML Schema definition language (XSD) schema is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (targetNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ targetNamespace);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="xmlSchemaSet.Contains targetNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="93a46-247">結構描述 <paramref name="targetNamespace" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="93a46-247">The schema <paramref name="targetNamespace" /> property.</span></span></param>
        <summary><span data-ttu-id="93a46-248">指出具有指定目標命名空間 URI 的 XML 結構描述定義語言 (XSD) 結構描述是否位於 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="93a46-248">Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-249">如果具有指定的目標命名空間 URI 的結構描述位於 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-249"><see langword="true" /> if a schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-250">間接加入的結構描述<xref:System.Xml.Schema.XmlSchemaSet>偵測到的<xref:System.Xml.Schema.XmlSchemaSet.Contains%2A>方法; 例如，匯入結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-250">Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> method; for example, imported schemas.</span></span> <span data-ttu-id="93a46-251">如此一來，如果結構描述http://www.contoso.com/retail它會匯入的結構描述的命名空間http://www.contoso.com/books命名空間加入至<xref:System.Xml.Schema.XmlSchemaSet>，則呼叫<xref:System.Xml.Schema.XmlSchemaSet.Contains%2A>具有`http://www.contoso.com/books`做為參數，它會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="93a46-251">As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> with `http://www.contoso.com/books` as a parameter, it returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaSet.Contains schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="93a46-252"><see cref="T:System.Xml.Schema.XmlSchema" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-252">The <see cref="T:System.Xml.Schema.XmlSchema" /> object.</span></span></param>
        <summary><span data-ttu-id="93a46-253">指出指定的 XML 結構描述定義語言 (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> 物件是否位於 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="93a46-253">Indicates whether the specified XML Schema definition language (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-254">如果 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-254"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-255">以參數形式傳遞的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-255">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] schemas, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (schemas As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ schemas, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Xml.Schema.XmlSchema[] * int -&gt; unit" Usage="xmlSchemaSet.CopyTo (schemas, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="93a46-256">將物件複製到其中的陣列。</span><span class="sxs-lookup"><span data-stu-id="93a46-256">The array to copy the objects to.</span></span></param>
        <param name="index"><span data-ttu-id="93a46-257">在陣列中開始複製的索引。</span><span class="sxs-lookup"><span data-stu-id="93a46-257">The index in the array where copying will begin.</span></span></param>
        <summary><span data-ttu-id="93a46-258">複製 <see cref="T:System.Xml.Schema.XmlSchema" /> 中的所有 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件至指定陣列，開始於指定的索引處。</span><span class="sxs-lookup"><span data-stu-id="93a46-258">Copies all the <see cref="T:System.Xml.Schema.XmlSchema" /> objects from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the given array, starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="93a46-259">下列範例會複製全部<xref:System.Xml.Schema.XmlSchema>中的物件<xref:System.Xml.Schema.XmlSchemaSet>陣列<xref:System.Xml.Schema.XmlSchema>物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-259">The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemas(schemaSet.Count) As XmlSchema  
schemaSet.CopyTo(schemas, 0)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchema[] schemas = new XmlSchema[schemaSet.Count];  
schemaSet.CopyTo(schemas, 0);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-260">取得 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的邏輯 XML 結構描述定義語言 (XSD) 結構描述數目。</span><span class="sxs-lookup"><span data-stu-id="93a46-260">Gets the number of logical XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="93a46-261"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的邏輯結構描述數目。</span><span class="sxs-lookup"><span data-stu-id="93a46-261">The number of logical schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-262">如果有兩個結構描述命名空間`http://www.contoso.com`中<xref:System.Xml.Schema.XmlSchemaSet>，則<xref:System.Xml.Schema.XmlSchemaSet.Count%2A>屬性會傳回 1，因為結構描述會被視為單一的邏輯結構描述進行驗證。</span><span class="sxs-lookup"><span data-stu-id="93a46-262">If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</span></span> <span data-ttu-id="93a46-263">不過，如果命名空間的結構描述`http://www.contoso.com/retail`匯入的結構描述`http://www.contoso.com/books`命名空間的值<xref:System.Xml.Schema.XmlSchemaSet.Count%2A>屬性將會是 2。</span><span class="sxs-lookup"><span data-stu-id="93a46-263">However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would be 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAttributes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalAttributes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAttributes : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-264">取得 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 結構描述定義語言 (XSD) 結構描述的所有全域屬性。</span><span class="sxs-lookup"><span data-stu-id="93a46-264">Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="93a46-265">全域屬性的集合。</span><span class="sxs-lookup"><span data-stu-id="93a46-265">The collection of global attributes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalElements">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalElements As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalElements { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalElements : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-266">取得 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 結構描述定義語言 (XSD) 結構描述的所有全域項目。</span><span class="sxs-lookup"><span data-stu-id="93a46-266">Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="93a46-267">全域項目的集合。</span><span class="sxs-lookup"><span data-stu-id="93a46-267">The collection of global elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalTypes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalTypes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalTypes : System.Xml.Schema.XmlSchemaObjectTable" Usage="System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-268">取得 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 結構描述定義語言 (XSD) 結構描述的所有全域簡單和複雜型別。</span><span class="sxs-lookup"><span data-stu-id="93a46-268">Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="93a46-269">全域簡單和複雜型別的集合。</span><span class="sxs-lookup"><span data-stu-id="93a46-269">The collection of global simple and complex types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-270"><xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A>屬性一律會傳回此類型代表`xs:anyType`複雜型別。</span><span class="sxs-lookup"><span data-stu-id="93a46-270">The <xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A> property always returns a type that represents the `xs:anyType` complex type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompiled : bool" Usage="System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-271">取得值，指出是否已編譯 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-271">Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled.</span></span></summary>
        <value><span data-ttu-id="93a46-272">如果上次從 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 加入或移除結構描述之後，已編譯 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的結構描述，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-272"><see langword="true" /> if the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled since the last time a schema was added or removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-273">如果結構描述是在 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 時編輯的，則 <xref:System.Xml.Schema.XmlSchemaSet> 屬性不受影響。</span><span class="sxs-lookup"><span data-stu-id="93a46-273">The <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-274">也不會追蹤 <xref:System.Xml.Schema.XmlSchemaSet> 中個別結構描述的更新。</span><span class="sxs-lookup"><span data-stu-id="93a46-274">Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked.</span></span> <span data-ttu-id="93a46-275">因此，即使 <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> 中的其中一個結構描述已變更，只要未在 `true` 中加入或移除結構描述，<xref:System.Xml.Schema.XmlSchemaSet> 屬性就可為 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-275">As a result, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-276">如需<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性，請參閱<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-276">For an example of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Compile" />
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-277">當載入新的 XML 結構描述定義語言 (XSD) 結構描述時，取得 <see cref="T:System.Xml.XmlNameTable" /> 所使用的預設 <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-277">Gets the default <see cref="T:System.Xml.XmlNameTable" /> used by the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> when loading new XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="93a46-278">原子化字串物件的資料表。</span><span class="sxs-lookup"><span data-stu-id="93a46-278">A table of atomized string objects.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Remove(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Remove(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Remove schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="93a46-279">要從 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-279">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="93a46-280">移除 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的指定 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-280">Removes the specified XML Schema definition language (XSD) schema from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-281">從 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件，如果在 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中找不到結構描述則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-281">The <see cref="T:System.Xml.Schema.XmlSchema" /> object removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> or <see langword="null" /> if the schema was not found in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-282">移除從結構描述<xref:System.Xml.Schema.XmlSchemaSet>設定<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="93a46-282">Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-283">下列範例說明新增至多個結構描述<xref:System.Xml.Schema.XmlSchemaSet>，然後移除其中一個使用的結構描述<xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-283">The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.Remove(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.Remove(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-284">結構描述不是有效的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-284">The schema is not a valid schema.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-285">以參數形式傳遞的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-285">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRecursive">
      <MemberSignature Language="C#" Value="public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveRecursive(class System.Xml.Schema.XmlSchema schemaToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRecursive (schemaToRemove As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveRecursive(System::Xml::Schema::XmlSchema ^ schemaToRemove);" />
      <MemberSignature Language="F#" Value="member this.RemoveRecursive : System.Xml.Schema.XmlSchema -&gt; bool" Usage="xmlSchemaSet.RemoveRecursive schemaToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaToRemove" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schemaToRemove"><span data-ttu-id="93a46-286">要從 <see cref="T:System.Xml.Schema.XmlSchema" /> 中移除的 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-286">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="93a46-287">移除 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中指定的 XML 結構描述定義語言 (XSD) 結構描述及其匯入的所有結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-287">Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-288">如果成功移除 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件及其匯入的所有結構描述，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-288"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object and all its imports were successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-289"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法會移除指定的結構描述及其匯入的所有結構描述<xref:System.Xml.Schema.XmlSchemaSet>，只要不有任何相依性的結構描述或其匯入的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-289">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas.</span></span> <span data-ttu-id="93a46-290">如果有相依性的結構描述或在其匯入結構描述<xref:System.Xml.Schema.XmlSchemaSet>，不會移除並<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="93a46-290">If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> returns `false`.</span></span> <span data-ttu-id="93a46-291">如果`false`會傳回和<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>是定義，會傳送警告給事件處理常式描述相依性。</span><span class="sxs-lookup"><span data-stu-id="93a46-291">If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.</span></span>  
  
 <span data-ttu-id="93a46-292">如果指定的結構描述匯入的其他結構描述，而且先前已移除指定的結構描述<xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>方法中，<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法將不會移除匯入的結構描述，並將傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="93a46-292">If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method will not remove the imported schemas and will return `false`.</span></span> <span data-ttu-id="93a46-293">例如，如果`parentSchema`匯入`childSchema1`並`childSchema2`只會移除下列程式碼`parentSchema`，但不是匯入`childSchema1`和`childSchema2`結構描述：</span><span class="sxs-lookup"><span data-stu-id="93a46-293">For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.Remove(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="93a46-294">下列程式碼將會移除`parentSchema`和匯入的結構描述：</span><span class="sxs-lookup"><span data-stu-id="93a46-294">The following code will remove the `parentSchema` and the imported schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="93a46-295"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法沒有任何作用狀態的<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="93a46-295">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-296">下列程式碼範例說明新增至多個結構描述<xref:System.Xml.Schema.XmlSchemaSet>，然後移除其中一個結構描述和匯入使用的所有結構描述<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-296">The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.RemoveRecursive(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.RemoveRecursive(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-297">以參數形式傳遞的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-297">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reprocess">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Reprocess(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reprocess (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Reprocess(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberSignature Language="F#" Value="member this.Reprocess : System.Xml.Schema.XmlSchema -&gt; System.Xml.Schema.XmlSchema" Usage="xmlSchemaSet.Reprocess schema" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="93a46-298">要重新處理的結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-298">The schema to reprocess.</span></span></param>
        <summary><span data-ttu-id="93a46-299">重新處理已存在於 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中的 XML 結構描述定義語言 (XSD) 結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-299">Reprocesses an XML Schema definition language (XSD) schema that already exists in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-300"><see cref="T:System.Xml.Schema.XmlSchema" /> 物件 (如果結構描述是有效的結構描述)。</span><span class="sxs-lookup"><span data-stu-id="93a46-300">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is a valid schema.</span></span> <span data-ttu-id="93a46-301">如果結構描述無效，且指定了 <see cref="T:System.Xml.Schema.ValidationEventHandler" />，則會傳回 <see langword="null" />，並會引發適當的驗證事件。</span><span class="sxs-lookup"><span data-stu-id="93a46-301">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="93a46-302">否則會擲回 <see cref="T:System.Xml.Schema.XmlSchemaException" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-302">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-303">重新處理結構描述執行結構描述上執行的所有前置處理步驟時<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-303">Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="93a46-304">如果在呼叫<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>成功，請<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="93a46-304">If the call to <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="93a46-305">中的結構描述之後，就應該使用的重新處理方法<xref:System.Xml.Schema.XmlSchemaSet>之後已經修改<xref:System.Xml.Schema.XmlSchemaSet>執行編譯。</span><span class="sxs-lookup"><span data-stu-id="93a46-305">The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93a46-306">您必須呼叫<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法，如果您已變更的結構描述 （或其中一個包含/匯入） 之後將它新增至, <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-306">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-307"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法會檢查結構描述的結構化的有效性，根據 W3C XML 結構描述的規則。</span><span class="sxs-lookup"><span data-stu-id="93a46-307">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="93a46-308">不過，它不會執行完整的驗證檢查。</span><span class="sxs-lookup"><span data-stu-id="93a46-308">However, it will not perform a full validation check.</span></span> <span data-ttu-id="93a46-309">它也會解析內部和外部結構描述元件的參考。</span><span class="sxs-lookup"><span data-stu-id="93a46-309">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="93a46-310">已成功擷取任何匯入或包含結構描述也會新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-310">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-311">匯入結構描述會新增為個別<xref:System.Xml.Schema.XmlSchema>物件時包含結構描述進行一部分包括<xref:System.Xml.Schema.XmlSchema>。</span><span class="sxs-lookup"><span data-stu-id="93a46-311">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="93a46-312">如果重新處理呼叫成功，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設定為 false。</span><span class="sxs-lookup"><span data-stu-id="93a46-312">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-313">下列範例說明重新處理結構描述新增至<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-313">The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="93a46-314">之後<xref:System.Xml.Schema.XmlSchemaSet>使用編譯<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法，並新增至結構描述<xref:System.Xml.Schema.XmlSchemaSet>已經過修改，<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性會設定為`true`即使在結構描述、<xref:System.Xml.Schema.XmlSchemaSet>已經過修改。</span><span class="sxs-lookup"><span data-stu-id="93a46-314">After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified.</span></span> <span data-ttu-id="93a46-315">呼叫<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法所執行的所有前置處理由執行<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>方法，並將<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="93a46-315">Calling the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
Dim schema As XmlSchema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
  
Dim element As XmlSchemaElement = New XmlSchemaElement()  
schema.Items.Add(element)  
element.Name = "book"  
element.SchemaTypeName = New XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")  
  
schemaSet.Reprocess(schema)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
XmlSchema schema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
  
XmlSchemaElement element = new XmlSchemaElement();  
schema.Items.Add(element);  
element.Name = "book";  
element.SchemaTypeName = new XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema");  
  
schemaSet.Reprocess(schema);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="93a46-316">此結構描述無效。</span><span class="sxs-lookup"><span data-stu-id="93a46-316">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="93a46-317">做為參數傳遞的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="93a46-317">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="93a46-318">以參數形式傳遞的 <see cref="T:System.Xml.Schema.XmlSchema" /> 物件不存在於 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中。</span><span class="sxs-lookup"><span data-stu-id="93a46-318">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter does not already exist in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schemas">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="93a46-319">傳回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中 XML 結構描述定義語言 (XSD) 結構描述的集合。</span><span class="sxs-lookup"><span data-stu-id="93a46-319">Returns a collection of XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas();" />
      <MemberSignature Language="F#" Value="member this.Schemas : unit -&gt; System.Collections.ICollection" Usage="xmlSchemaSet.Schemas " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="93a46-320">傳回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中所有 XML 結構描述定義語言 (XSD) 結構描述的集合。</span><span class="sxs-lookup"><span data-stu-id="93a46-320">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="93a46-321"><see cref="T:System.Collections.ICollection" /> 物件，包含已加入至 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 的所有結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-321">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="93a46-322">如果結構描述尚未加入至 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，則會傳回空的 <see cref="T:System.Collections.ICollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-322">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-323">這個方法會傳回已加入間接的結構描述<xref:System.Xml.Schema.XmlSchemaSet>因為它們已匯入。</span><span class="sxs-lookup"><span data-stu-id="93a46-323">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93a46-324"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>方法就相當於<xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>方法的過時<xref:System.Xml.Schema.XmlSchemaCollection>。</span><span class="sxs-lookup"><span data-stu-id="93a46-324">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-325">下列範例說明如何逐一查看中的所有結構描述<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-325">The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas (targetNamespace As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas(System::String ^ targetNamespace);" />
      <MemberSignature Language="F#" Value="member this.Schemas : string -&gt; System.Collections.ICollection" Usage="xmlSchemaSet.Schemas targetNamespace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="93a46-326">結構描述 <paramref name="targetNamespace" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="93a46-326">The schema <paramref name="targetNamespace" /> property.</span></span></param>
        <summary><span data-ttu-id="93a46-327">傳回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 中屬於指定命名空間之所有 XML 結構描述定義語言 (XSD) 結構描述的集合。</span><span class="sxs-lookup"><span data-stu-id="93a46-327">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span></summary>
        <returns><span data-ttu-id="93a46-328"><see cref="T:System.Collections.ICollection" /> 物件，包含已加入至 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 之屬於指定命名空間的所有結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-328">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span> <span data-ttu-id="93a46-329">如果結構描述尚未加入至 <see cref="T:System.Xml.Schema.XmlSchemaSet" />，則會傳回空的 <see cref="T:System.Collections.ICollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="93a46-329">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-330">如果`targetNamespace`參數是`null`或<xref:System.String.Empty>，則會傳回沒有命名空間的所有結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-330">If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.</span></span>  
  
 <span data-ttu-id="93a46-331">這個方法會傳回已加入間接的結構描述<xref:System.Xml.Schema.XmlSchemaSet>因為它們已匯入。</span><span class="sxs-lookup"><span data-stu-id="93a46-331">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93a46-332"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>方法就相當於<xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>方法的過時<xref:System.Xml.Schema.XmlSchemaCollection>。</span><span class="sxs-lookup"><span data-stu-id="93a46-332">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-333">下列範例說明如何逐一查看中的所有結構描述http://www.contoso.com/books中的命名空間<xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="93a46-333">The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberSignature Language="F#" Value="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " Usage="member this.ValidationEventHandler : System.Xml.Schema.ValidationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-334">指定事件處理常式，接收 XML 結構描述定義語言 (XSD) 結構描述驗證錯誤的資訊。</span><span class="sxs-lookup"><span data-stu-id="93a46-334">Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-335">設定接收結構描述驗證錯誤的相關資訊的事件處理常式時<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>或是<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>方法<xref:System.Xml.Schema.XmlSchemaSet>稱為。</span><span class="sxs-lookup"><span data-stu-id="93a46-335">Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.</span></span>  
  
 <span data-ttu-id="93a46-336">如果未定義的事件處理常式，<xref:System.Xml.Schema.XmlSchemaException>就會擲回的任何驗證錯誤所在<xref:System.Xml.Schema.XmlSeverityType>是<xref:System.Xml.Schema.XmlSeverityType.Error>。</span><span class="sxs-lookup"><span data-stu-id="93a46-336">If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="93a46-337">不會使用的驗證錯誤會擲回例外狀況<xref:System.Xml.Schema.XmlSeverityType>的<xref:System.Xml.Schema.XmlSeverityType.Warning>。</span><span class="sxs-lookup"><span data-stu-id="93a46-337">Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93a46-338">下列程式碼範例說明如何新增<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>時驗證結構描述的 XML 文件擷取錯誤和警告。</span><span class="sxs-lookup"><span data-stu-id="93a46-338">The following code example illustrates adding a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> to capture errors and warnings when validating an XML document against a schema.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="93a46-339">此範例會使用 books.xml 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93a46-339">The example uses the books.xml file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="93a46-340">此範例會使用 books.xsd 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="93a46-340">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="93a46-341">設定 <see cref="T:System.Xml.XmlResolver" />，用於解析在結構描述之 Include 和 Import 項目中參考的命名空間或位置。</span><span class="sxs-lookup"><span data-stu-id="93a46-341">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></summary>
        <value><span data-ttu-id="93a46-342"><see cref="T:System.Xml.XmlResolver" />，用於解析在結構描述之 Include 和 Import 項目中參考的命名空間或位置。</span><span class="sxs-lookup"><span data-stu-id="93a46-342">The <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93a46-343"><xref:System.Xml.XmlResolver>的<xref:System.Xml.Schema.XmlSchemaSet>用來解析命名空間或位置中參考包含和匯入的結構描述的項目使用加入結構描述的任何時間<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>或<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="93a46-343">The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="93a46-344">外部命名空間或位置中參考包含，匯入和重新定義結構描述項目的解決相關的結構描述併入或匯入它們的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="93a46-344">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="93a46-345">例如，如果併入或匯入結構描述的基底 URI 是空的或`null`，外部的位置會相對於目前的目錄解析。</span><span class="sxs-lookup"><span data-stu-id="93a46-345">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="93a46-346"><xref:System.Xml.XmlUrlResolver>類別預設用來解析外部結構描述。</span><span class="sxs-lookup"><span data-stu-id="93a46-346">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="93a46-347">若要停用解析的 include，匯入，並重新定義結構描述的項目，設定<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A>屬性設`null`。</span><span class="sxs-lookup"><span data-stu-id="93a46-347">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>
