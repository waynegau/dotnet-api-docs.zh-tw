<Type Name="DateTime" FullName="System.DateTime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56981865ec7a0fc4c9f85bebda3b73fa50a35109" /><Meta Name="ms.sourcegitcommit" Value="d0cc5af3e8879e7ce36f5567809814f108820c98" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/24/2019" /><Meta Name="ms.locfileid" Value="66196295" /></Metadata><TypeSignature Language="C#" Value="public struct DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DateTime extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.DateTime&gt;, class System.IConvertible, class System.IEquatable`1&lt;valuetype System.DateTime&gt;, class System.IFormattable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.DateTime" />
  <TypeSignature Language="VB.NET" Value="Public Structure DateTime&#xA;Implements IComparable, IComparable(Of DateTime), IConvertible, IEquatable(Of DateTime), IFormattable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public value class DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DateTime = struct&#xA;    interface IFormattable&#xA;    interface IConvertible&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.DateTime&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="02553-101">表示時間的瞬間，通常以一天的日期和時間表示。</span><span class="sxs-lookup"><span data-stu-id="02553-101">Represents an instant in time, typically expressed as a date and time of day.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

## <a name="quick-links-to-example-code"></a><span data-ttu-id="02553-102">範例程式碼的快速連結</span><span class="sxs-lookup"><span data-stu-id="02553-102">Quick links to example code</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="02553-103">這篇文章包含數個範例，使用`DateTime`類型：</span><span class="sxs-lookup"><span data-stu-id="02553-103">This article includes several examples that use the `DateTime` type:</span></span>

<span data-ttu-id="02553-104">**初始化範例**</span><span class="sxs-lookup"><span data-stu-id="02553-104">**Initialization Examples**</span></span>      
- [<span data-ttu-id="02553-105">叫用建構函式</span><span class="sxs-lookup"><span data-stu-id="02553-105">Invoke a constructor</span></span>](#initialization-01)
- [<span data-ttu-id="02553-106">叫用的隱含預設建構函式</span><span class="sxs-lookup"><span data-stu-id="02553-106">Invoke the implicit default constructor</span></span>](#initialization-02)
- [<span data-ttu-id="02553-107">從傳回值的指派</span><span class="sxs-lookup"><span data-stu-id="02553-107">Assignment from return value</span></span>](#initialization-03)
- [<span data-ttu-id="02553-108">剖析字串，表示日期和時間</span><span class="sxs-lookup"><span data-stu-id="02553-108">Parsing a string that represents a date and time</span></span>](#initialization-04)
- [<span data-ttu-id="02553-109">若要初始化的日期和時間的 Visual Basic 語法</span><span class="sxs-lookup"><span data-stu-id="02553-109">Visual Basic syntax to initialize a date and time</span></span>](#initialization-05)

<span data-ttu-id="02553-110">**格式化`DateTime`物件做為字串**</span><span class="sxs-lookup"><span data-stu-id="02553-110">**Formatting `DateTime` objects as strings**</span></span>  
- [<span data-ttu-id="02553-111">使用預設的日期時間格式</span><span class="sxs-lookup"><span data-stu-id="02553-111">Use the default date time format</span></span>](#formatting-01)
- [<span data-ttu-id="02553-112">格式化的日期和時間使用特定文化特性</span><span class="sxs-lookup"><span data-stu-id="02553-112">Format a date and time using a specific culture</span></span>](#formatting-02)
- [<span data-ttu-id="02553-113">使用標準或自訂格式字串的日期時間的格式</span><span class="sxs-lookup"><span data-stu-id="02553-113">Format a date time using a standard or custom format string</span></span>](#formatting-03)
- [<span data-ttu-id="02553-114">指定格式字串和特定文化特性</span><span class="sxs-lookup"><span data-stu-id="02553-114">Specify both a format string and a specific culture</span></span>](#formatting-04)
- [<span data-ttu-id="02553-115">使用 ISO 8601 標準 web 服務的日期時間的格式</span><span class="sxs-lookup"><span data-stu-id="02553-115">Format a date time using the ISO 8601 standard for web services</span></span>](#formatting-05)

<span data-ttu-id="02553-116">**剖析字串做為`DateTime`物件**</span><span class="sxs-lookup"><span data-stu-id="02553-116">**Parsing strings as `DateTime` objects**</span></span>  
- [<span data-ttu-id="02553-117">使用`Parse`或`TryParse`將字串轉換成日期和時間</span><span class="sxs-lookup"><span data-stu-id="02553-117">Use `Parse` or `TryParse` to convert a string to a date and time</span></span>](#parsing-01)
- [<span data-ttu-id="02553-118">使用`ParseExact`或`TryParseExact`將已知的格式字串轉換</span><span class="sxs-lookup"><span data-stu-id="02553-118">Use `ParseExact` or `TryParseExact` to convert a string in a known format</span></span>](#parsing-02)
- [<span data-ttu-id="02553-119">將使用 ISO 8601 字串表示轉換為日期和時間</span><span class="sxs-lookup"><span data-stu-id="02553-119">Convert from the ISO 8601 string representation to a date and time</span></span>](#parsing-03)

<span data-ttu-id="02553-120">**`DateTime` 解決方式**</span><span class="sxs-lookup"><span data-stu-id="02553-120">**`DateTime` resolution**</span></span>  
- [<span data-ttu-id="02553-121">探索日期和時間值的解決方式</span><span class="sxs-lookup"><span data-stu-id="02553-121">Explore the resolution of date and time values</span></span>](#resolution-01)
- [<span data-ttu-id="02553-122">在容許範圍內的相等比較</span><span class="sxs-lookup"><span data-stu-id="02553-122">Comparing for equality within a tolerance</span></span>](#comparison-01)

<span data-ttu-id="02553-123">**文化特性和行事曆**</span><span class="sxs-lookup"><span data-stu-id="02553-123">**Culture and calendars**</span></span>  
- [<span data-ttu-id="02553-124">顯示使用的文化特性特定的行事曆的日期和時間值</span><span class="sxs-lookup"><span data-stu-id="02553-124">Display date and time values using culture specific calendars</span></span>](#calendars-01)
- [<span data-ttu-id="02553-125">剖析字串，根據文化特性特定行事曆</span><span class="sxs-lookup"><span data-stu-id="02553-125">Parse strings according to a culture specific calendar</span></span>](#calendars-02)
- [<span data-ttu-id="02553-126">初始化的日期和時間，從特定文化特性的行事曆</span><span class="sxs-lookup"><span data-stu-id="02553-126">Initialize a date and time from a specific culture's calendar</span></span>](#calendars-03)
- [<span data-ttu-id="02553-127">存取使用特定文化特性的曆法的日期和時間屬性</span><span class="sxs-lookup"><span data-stu-id="02553-127">Accessing date and time properties using a specific culture's calendar</span></span>](#calendars-04)
- [<span data-ttu-id="02553-128">擷取使用文化特性特定的行事曆年中的週</span><span class="sxs-lookup"><span data-stu-id="02553-128">Retrieving the week of the year using culture specific calendars</span></span>](#calendars-05)

<span data-ttu-id="02553-129">**持續性**</span><span class="sxs-lookup"><span data-stu-id="02553-129">**Persistence**</span></span>  
- [<span data-ttu-id="02553-130">保存日期和時間值中的當地時區的字串</span><span class="sxs-lookup"><span data-stu-id="02553-130">Persisting date and time values as strings in the local time zone</span></span>](#persistence-01)
- [<span data-ttu-id="02553-131">保存的日期和時間值為文化特性和時間的非變異格式的字串</span><span class="sxs-lookup"><span data-stu-id="02553-131">Persisting date and time values as strings in a culture and time invariant format</span></span>](#persistence-02)
- [<span data-ttu-id="02553-132">保存的日期和時間值做為整數</span><span class="sxs-lookup"><span data-stu-id="02553-132">Persisting date and time values as integers</span></span>](#persistence-03)
- [<span data-ttu-id="02553-133">使用保存的日期和時間值 `XmlSerializer`</span><span class="sxs-lookup"><span data-stu-id="02553-133">Persisting date and time values using the `XmlSerializer`</span></span>](#persistence-04)
- [<span data-ttu-id="02553-134">使用保存的日期和時間值 `BinaryFormatter`</span><span class="sxs-lookup"><span data-stu-id="02553-134">Persisting date and time values using the `BinaryFormatter`</span></span>](#persistence-05)
- [<span data-ttu-id="02553-135">保存日期和時間值時區的資料</span><span class="sxs-lookup"><span data-stu-id="02553-135">Persisting date and time values with time zone data</span></span>](#persistence-06)

## <a name="quick-links-to-remarks-topics"></a><span data-ttu-id="02553-136">< 備註 > 主題的快速連結。</span><span class="sxs-lookup"><span data-stu-id="02553-136">Quick links to Remarks topics.</span></span>

<span data-ttu-id="02553-137">此章節包含許多常見的用法`DateTime`結構：</span><span class="sxs-lookup"><span data-stu-id="02553-137">This section contains topics for many common uses of the `DateTime` struct:</span></span>
  
- [<span data-ttu-id="02553-138">初始化`DateTime`物件</span><span class="sxs-lookup"><span data-stu-id="02553-138">Initializing a `DateTime` object</span></span>](#initializing-a-datetime-object)
- [<span data-ttu-id="02553-139">日期時間值和其字串表示法</span><span class="sxs-lookup"><span data-stu-id="02553-139">DateTime values and their string representations</span></span>](#datetime-values-and-their-string-representations)
- [<span data-ttu-id="02553-140">從字串剖析的日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-140">Parsing DateTime values from strings</span></span>](#parsing-datetime-values-from-strings)
- [<span data-ttu-id="02553-141">日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-141">DateTime values</span></span>](#datetime-values)
- [<span data-ttu-id="02553-142">DateTime 作業</span><span class="sxs-lookup"><span data-stu-id="02553-142">DateTime operations</span></span>](#datetime-operations)
- [<span data-ttu-id="02553-143">日期時間解析</span><span class="sxs-lookup"><span data-stu-id="02553-143">DateTime resolution</span></span>](#datetime-resolution)
- [<span data-ttu-id="02553-144">日期時間值和行事曆</span><span class="sxs-lookup"><span data-stu-id="02553-144">DateTime values and calendars</span></span>](#datetime-values-and-calendars)
- [<span data-ttu-id="02553-145">保存的日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-145">Persisting DateTime values</span></span>](#persisting-datetime-values)
- [<span data-ttu-id="02553-146">DateTime vs。TimeSpan</span><span class="sxs-lookup"><span data-stu-id="02553-146">DateTime vs. TimeSpan</span></span>](#datetime-vs-timespan)
- [<span data-ttu-id="02553-147">在容許範圍內的相等比較</span><span class="sxs-lookup"><span data-stu-id="02553-147">Comparing for equality within tolerance</span></span>](#comparing-for-equality-within-tolerance)
- [<span data-ttu-id="02553-148">COM interop 的考量</span><span class="sxs-lookup"><span data-stu-id="02553-148">COM interop considerations</span></span>](#com-interop-considerations)
   
<span data-ttu-id="02553-149"><xref:System.DateTime>實值型別代表日期和時間的值範圍是 00:00:00 （午夜），1 月 1 日 0001 P.m （中古時代） 下午 11:59:59，透過年 12 月 31 到西元 9999年日</span><span class="sxs-lookup"><span data-stu-id="02553-149">The <xref:System.DateTime> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.</span></span> <span data-ttu-id="02553-150">(C.E.)西曆。</span><span class="sxs-lookup"><span data-stu-id="02553-150">(C.E.) in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="02553-151">時間值是以 100 奈秒為單位，稱為刻度為單位。</span><span class="sxs-lookup"><span data-stu-id="02553-151">Time values are measured in 100-nanosecond units called ticks.</span></span> <span data-ttu-id="02553-152">特定日期是午夜 12:00，年 1 月 1，西元 0001年的刻度數</span><span class="sxs-lookup"><span data-stu-id="02553-152">A particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</span></span> <span data-ttu-id="02553-153">(C.E.)在 <xref:System.Globalization.GregorianCalendar>行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-153">(C.E.) in the <xref:System.Globalization.GregorianCalendar> calendar.</span></span> <span data-ttu-id="02553-154">數字會排除刻度將會新增閏秒。</span><span class="sxs-lookup"><span data-stu-id="02553-154">The number excludes ticks that would be added by leap seconds.</span></span> <span data-ttu-id="02553-155">比方說，31241376000000000l 刻度值代表 0100 年 1 月 01，星期五的日期午夜 12:00:00。</span><span class="sxs-lookup"><span data-stu-id="02553-155">For example, a ticks value of 31241376000000000L represents the date Friday, January 01, 0100 12:00:00 midnight.</span></span> <span data-ttu-id="02553-156">A<xref:System.DateTime>值一律表示在內容明確或預設的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-156">A <xref:System.DateTime> value is always expressed in the context of an explicit or default calendar.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-157">如果您正在使用刻度值，您想要轉換成某些其他時間間隔，例如分鐘或秒，您應該使用<xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>， <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>， <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>， <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>，或<xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType>常數，以執行轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-157">If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <xref:System.TimeSpan.TicksPerDay?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerHour?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerMinute?displayProperty=nameWithType>, <xref:System.TimeSpan.TicksPerSecond?displayProperty=nameWithType>, or <xref:System.TimeSpan.TicksPerMillisecond?displayProperty=nameWithType> constant to perform the conversion.</span></span> <span data-ttu-id="02553-158">例如，若要新增的秒數表示所指定的刻度數<xref:System.DateTime.Second%2A>元件<xref:System.DateTime>的值，您可以使用運算式`dateValue.Second + nTicks/Timespan.TicksPerSecond`。</span><span class="sxs-lookup"><span data-stu-id="02553-158">For example, to add the number of seconds represented by a specified number of ticks to the <xref:System.DateTime.Second%2A> component of a <xref:System.DateTime> value, you can use the expression `dateValue.Second + nTicks/Timespan.TicksPerSecond`.</span></span>  

<span data-ttu-id="02553-159">您可以在檢視這篇文章中的範例整組的來源[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)或是[C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/)從 GitHub 上的 docs 存放庫。</span><span class="sxs-lookup"><span data-stu-id="02553-159">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>

> [!NOTE]
>  <span data-ttu-id="02553-160">替代<xref:System.DateTime>結構，使用日期和時間值特別時區是<xref:System.DateTimeOffset>結構。</span><span class="sxs-lookup"><span data-stu-id="02553-160">An alternative to the <xref:System.DateTime> structure for working with date and time values in particular time zones is the <xref:System.DateTimeOffset> structure.</span></span> <span data-ttu-id="02553-161"><xref:System.DateTimeOffset>結構會將日期和時間資訊儲存在私人<xref:System.DateTime>欄位並供該日期和時間的分鐘數與 UTC 差異在私人<xref:System.Int16>欄位。</span><span class="sxs-lookup"><span data-stu-id="02553-161">The <xref:System.DateTimeOffset> structure stores date and time information in a private <xref:System.DateTime> field and the number of minutes by which that date and time differs from UTC in a private <xref:System.Int16> field.</span></span> <span data-ttu-id="02553-162">這可讓<xref:System.DateTimeOffset>值，以反映特定時區的時間，而<xref:System.DateTime>僅 UTC 和當地時區的時間，值可以明確地反映。</span><span class="sxs-lookup"><span data-stu-id="02553-162">This makes it possible for a <xref:System.DateTimeOffset> value to reflect the time in a particular time zone, whereas a <xref:System.DateTime> value can unambiguously reflect only UTC and the local time zone's time.</span></span> <span data-ttu-id="02553-163">如需使用時機的討論<xref:System.DateTime>結構或<xref:System.DateTimeOffset>結構處理日期和時間值時，請參閱[選擇 DateTime、 DateTimeOffset、 TimeSpan 和 TimeZoneInfo 之間](~/docs/standard/datetime/choosing-between-datetime.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-163">For a discussion about when to use the <xref:System.DateTime> structure or the <xref:System.DateTimeOffset> structure when working with date and time values, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span>  
  
### <a name="initializing-a-datetime-object"></a><span data-ttu-id="02553-164">初始化為 DateTime 物件</span><span class="sxs-lookup"><span data-stu-id="02553-164">Initializing a DateTime object</span></span>  

<span data-ttu-id="02553-165">您可以將初始值指派給新`DateTime`許多不同方式的值：</span><span class="sxs-lookup"><span data-stu-id="02553-165">You can assign an initial value to a new `DateTime` value in many different ways:</span></span>

- <span data-ttu-id="02553-166">呼叫建構函式，其中一項，您可以指定引數的值，或使用隱含預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-166">Calling a constructor, either one where you specify arguments for values, or use the implicit default constructor.</span></span>
- <span data-ttu-id="02553-167">指派`DateTime`屬性或方法的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-167">Assigning a `DateTime` to the return value of a property or method.</span></span>
- <span data-ttu-id="02553-168">剖析`DateTime`從其字串表示法的值。</span><span class="sxs-lookup"><span data-stu-id="02553-168">Parsing a `DateTime` value from its string representation.</span></span>
- <span data-ttu-id="02553-169">使用 Visual Basic 特定的語言功能來具現化`DateTime`。</span><span class="sxs-lookup"><span data-stu-id="02553-169">Using Visual Basic-specific language features to instantiate a `DateTime`.</span></span> 

<span data-ttu-id="02553-170">下列程式碼片段會顯示每個範例：</span><span class="sxs-lookup"><span data-stu-id="02553-170">The following code snippets show examples of each:</span></span>

#### <a name="invoke-constructors"></a><span data-ttu-id="02553-171">叫用建構函式</span><span class="sxs-lookup"><span data-stu-id="02553-171">Invoke Constructors</span></span>

<span data-ttu-id="02553-172">您呼叫任何多載<xref:System.DateTime>建構函式會指定日期和時間值 （例如年、 月、 日或的刻度數） 的項目。</span><span class="sxs-lookup"><span data-stu-id="02553-172">You call any of the overloads of the <xref:System.DateTime> constructor that specify elements of the date and time value (such as the year, month, and day, or the number of ticks).</span></span> <span data-ttu-id="02553-173">下列程式碼會建立特定的日期，使用<xref:System.DateTime>建構函式指定年、 月、 日、 小時、 分鐘和秒。</span><span class="sxs-lookup"><span data-stu-id="02553-173">The following code creates a specific date using the <xref:System.DateTime> constructor specifying the year, month, day, hour, minute, and second.</span></span>  

<a name="initialization-01"></a>  
[!code-vb[System.DateTime.Instantiation#1](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#1)]  
[!code-csharp-interactive[System.DateTime.Instantiation#1](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#1)]

<span data-ttu-id="02553-174">您可以叫用`DateTime`結構的隱含預設建構函式時要`DateTime`初始化為其預設值。</span><span class="sxs-lookup"><span data-stu-id="02553-174">You invoke the `DateTime` structure's implicit default constructor when you want a `DateTime` initialized to its default value.</span></span> <span data-ttu-id="02553-175">(如需實值類型的隱含預設建構函式的詳細資訊，請參閱[實值型別](~/docs/csharp/language-reference/keywords/value-types.md)。)某些編譯器也支援宣告<xref:System.DateTime>而不需要明確地將值指派給它的值。</span><span class="sxs-lookup"><span data-stu-id="02553-175">(For details on the implicit default constructor of a value type, see [Value Types](~/docs/csharp/language-reference/keywords/value-types.md).) Some compilers also support declaring a <xref:System.DateTime> value without explicitly assigning a value to it.</span></span> <span data-ttu-id="02553-176">建立沒有明確的初始設定的值也會產生預設值。</span><span class="sxs-lookup"><span data-stu-id="02553-176">Creating a value without an explicit initialization also results in the default value.</span></span> <span data-ttu-id="02553-177">下列範例說明<xref:System.DateTime>C# 和 Visual Basic 中的隱含預設建構函式以及<xref:System.DateTime>宣告未在 Visual Basic 中的指派。</span><span class="sxs-lookup"><span data-stu-id="02553-177">The following example illustrates the <xref:System.DateTime> implicit default constructor in C# and Visual Basic, as well as a <xref:System.DateTime> declaration without assignment in Visual Basic.</span></span>  

<a name="initialization-02"></a>  
[!code-vb[System.DateTime.Instantiation#5](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#5)]  
[!code-csharp-interactive[System.DateTime.Instantiation#5](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#5)]
    
#### <a name="assigning-a-computed-value"></a><span data-ttu-id="02553-178">將計算的值指派給</span><span class="sxs-lookup"><span data-stu-id="02553-178">Assigning a computed value</span></span>

<span data-ttu-id="02553-179">您可以指派<xref:System.DateTime>物件的屬性或方法所傳回的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-179">You can assign the <xref:System.DateTime> object a date and time value returned by a property or method.</span></span> <span data-ttu-id="02553-180">下列範例會指派目前的日期和時間、 目前的 Coordinated Universal Time (UTC) 日期和時間，以及目前的日期為三個新<xref:System.DateTime>變數。</span><span class="sxs-lookup"><span data-stu-id="02553-180">The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <xref:System.DateTime> variables.</span></span>  

<a name="initialization-03"></a>  
[!code-vb[System.DateTime.Instantiation#3](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#3)]  
[!code-csharp[System.DateTime.Instantiation#3](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#3)]

#### <a name="parsing-a-string-that-represents-a-datetime"></a><span data-ttu-id="02553-181">剖析字串，表示為 DateTime</span><span class="sxs-lookup"><span data-stu-id="02553-181">Parsing a string that represents a DateTime</span></span>

<span data-ttu-id="02553-182"><xref:System.DateTime.Parse%2A>， <xref:System.DateTime.ParseExact%2A>， <xref:System.DateTime.TryParse%2A>，和<xref:System.DateTime.TryParseExact%2A>所有的方法將字串轉換為其相等的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-182">The <xref:System.DateTime.Parse%2A>, <xref:System.DateTime.ParseExact%2A>, <xref:System.DateTime.TryParse%2A>, and <xref:System.DateTime.TryParseExact%2A> methods all convert a string to its equivalent date and time value.</span></span> <span data-ttu-id="02553-183">下列範例會使用<xref:System.DateTime.Parse%2A>並<xref:System.DateTime.ParseExact%2A>方法來剖析字串，並將它轉換成<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-183">The following examples use the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods to parse a string and convert it to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-184">第二種格式會使用所支援的表單[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準表示的日期和時間格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-184">The second format uses a form supported by the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard for a representing date and time in string format.</span></span> <span data-ttu-id="02553-185">此標準的表示法是通常用來傳送 web 服務中的日期資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-185">This standard representation is often used to transfer date information in web services.</span></span>

<a name="initialization-04"></a>  
[!code-vb[System.DateTime.Instantiation#4](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#4)]  
[!code-csharp[System.DateTime.Instantiation#4](~/samples/snippets/csharp/System.DateTime/Instantiation.cs#4)]

<span data-ttu-id="02553-186"><xref:System.DateTime.TryParse%2A>並<xref:System.DateTime.TryParseExact%2A>方法會指出字串是否有效表示法<xref:System.DateTime>值，而且如果是，會執行轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-186">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods indicate whether a string is a valid representation of a <xref:System.DateTime> value and, if it is, performs the conversion.</span></span>  

#### <a name="language-specific-syntax-for-visual-basic"></a><span data-ttu-id="02553-187">適用於 Visual Basic 的特定語言的語法</span><span class="sxs-lookup"><span data-stu-id="02553-187">Language-specific syntax for Visual Basic</span></span>

<span data-ttu-id="02553-188">下列 Visual Basic 陳述式初始化新<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-188">The following Visual Basic statement initializes a new <xref:System.DateTime> value.</span></span>  

<a name="initialization-05"></a>  
[!code-vb[System.DateTime.Instantiation#2](~/samples/snippets/visualbasic/System.DateTime/Instantiation.vb#2)]  

### <a name="datetime-values-and-their-string-representations"></a><span data-ttu-id="02553-189">日期時間值和其字串表示法</span><span class="sxs-lookup"><span data-stu-id="02553-189">DateTime values and their string representations</span></span>  

<span data-ttu-id="02553-190">就內部而言，所有<xref:System.DateTime>值會表示為 0001 年 1 月 1 日的 12:00:00 午夜起已經過的刻度 （100 奈秒間隔數） 的數目。</span><span class="sxs-lookup"><span data-stu-id="02553-190">Internally, all <xref:System.DateTime> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.</span></span> <span data-ttu-id="02553-191">實際<xref:System.DateTime>值無關的方式顯示時，出現的值。</span><span class="sxs-lookup"><span data-stu-id="02553-191">The actual <xref:System.DateTime> value is independent of the way in which that value appears when displayed.</span></span> <span data-ttu-id="02553-192">外觀<xref:System.DateTime>值是一種將值轉換為其字串表示的格式化作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-192">The appearance of a <xref:System.DateTime> value is the result of a formatting operation that converts a value to its string representation.</span></span>  
  
<span data-ttu-id="02553-193">日期和時間值的外觀是依據文化特性、 國際標準、 應用程式需求和個人喜好設定項目。</span><span class="sxs-lookup"><span data-stu-id="02553-193">The appearance of date and time values is dependent on culture, international standards, application requirements, and personal preference.</span></span> <span data-ttu-id="02553-194"><xref:System.DateTime>結構還提供彈性，格式化日期和時間值的多載透過<xref:System.DateTime.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="02553-194">The <xref:System.DateTime> structure offers flexibility in formatting date and time values through overloads of  <xref:System.DateTime.ToString%2A>.</span></span> <span data-ttu-id="02553-195">預設值<xref:System.DateTime.ToString?displayProperty=nameWithType>方法會傳回使用目前文化特性的簡短日期和完整時間模式的日期和時間值的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-195">The default <xref:System.DateTime.ToString?displayProperty=nameWithType> method returns the string representation of a date and time value using the current culture's short date and long time pattern.</span></span> <span data-ttu-id="02553-196">下列範例會使用預設<xref:System.DateTime.ToString?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-196">The following example uses the default <xref:System.DateTime.ToString?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-197">它會顯示的日期和時間使用目前文化特性的簡短日期和完整時間模式。</span><span class="sxs-lookup"><span data-stu-id="02553-197">It displays the date and time using the short date and long time pattern for the current culture.</span></span> <span data-ttu-id="02553-198">EN-US 文化特性是目前的文化特性，在此範例執行所在的電腦上。</span><span class="sxs-lookup"><span data-stu-id="02553-198">The en-US culture is the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-01"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#1](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#1)]
[!code-vb[System.DateTime.Formatting#1](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#1)]  

<span data-ttu-id="02553-199">您可能需要格式化特定文化特性中以支援 web 案例中，伺服器可能在不同的文化特性，從用戶端中的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-199">You may need to format dates in a specific culture to support web scenarios where the server may be in a different culture from the client.</span></span> <span data-ttu-id="02553-200">您指定的文化特性使用<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法用來建立以特定的文化特性的簡短日期和完整時間表示。</span><span class="sxs-lookup"><span data-stu-id="02553-200">You specify the culture using the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to create the short date and long time representation in a specific culture.</span></span> <span data-ttu-id="02553-201">下列範例會使用<xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType>方法來顯示日期和時間使用 FR-FR 文化特性的簡短日期和完整時間模式。</span><span class="sxs-lookup"><span data-stu-id="02553-201">The following example uses the <xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to display the date and time using the short date and long time pattern for the fr-FR culture.</span></span>  
  
<a name="formatting-02"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#2](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#2)]
[!code-vb[System.DateTime.Formatting#2](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#2)]  

 <span data-ttu-id="02553-202">其他應用程式可能需要不同的字串表示的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-202">Other applications may require different string representations of a date.</span></span> <span data-ttu-id="02553-203"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法會傳回使用目前文化特性的格式化慣例是標準或自訂格式規範所定義的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-203">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method returns the string representation defined by a standard or custom format specifier using the formatting conventions of the current culture.</span></span> <span data-ttu-id="02553-204">下列範例會使用<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法，以顯示完整日期和時間模式 en-us 文化特性，在此範例執行所在的電腦上目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-204">The following example uses the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.</span></span>  
  
<a name="formatting-03"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#3](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#3)]
[!code-vb[System.DateTime.Formatting#3](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#3)]  

 <span data-ttu-id="02553-205">最後，您可以在此對話方塊中指定的文化特性和格式使用<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-205">Finally, you can specify both the culture and the format using the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-206">下列範例會使用<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法，以顯示完整日期和時間模式，為 FR-FR 文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-206">The following example uses the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method to display the full date and time pattern for the fr-FR culture.</span></span>  

<a name="formatting-04"></a>  
[!code-csharp-interactive[System.DateTime.Formatting#4](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#4)]
[!code-vb[System.DateTime.Formatting#4](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#4)]  

<span data-ttu-id="02553-207"><xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>多載也可用以自訂格式字串來指定其他格式。</span><span class="sxs-lookup"><span data-stu-id="02553-207">The <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> overload can also be used with a custom format string to specify other formats.</span></span> <span data-ttu-id="02553-208">下列範例示範如何格式化字串，使用[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)通常用於 web 服務的標準格式。</span><span class="sxs-lookup"><span data-stu-id="02553-208">The following example shows how to format a string using the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format often used for web services.</span></span> <span data-ttu-id="02553-209">Iso 8601 格式並沒有對應的標準格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-209">The Iso 8601 format does not have a corresponding standard format string.</span></span>

<a name="formatting-05"></a> <span data-ttu-id="02553-210">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span><span class="sxs-lookup"><span data-stu-id="02553-210">[!code-csharp-interactive[System.DateTime.Formatting#5](~/samples/snippets/csharp/System.DateTime/StringFormat.cs#5)]</span></span>
[!code-vb[System.DateTime.Formatting#5](~/samples/snippets/visualbasic/System.DateTime/StringFormat.vb#5)]  

<span data-ttu-id="02553-211">如需有關格式化<xref:System.DateTime>值，請參閱[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)並[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-211">For more information about formatting <xref:System.DateTime> values, see  [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  

### <a name="parsing-datetime-values-from-strings"></a><span data-ttu-id="02553-212">從字串剖析的日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-212">Parsing DateTime values from strings</span></span>

<span data-ttu-id="02553-213">剖析的字串表示轉換的日期和時間<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-213">Parsing converts the string representation of a date and time to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-214">一般而言，日期和時間字串有兩個不同的使用方式在應用程式中：</span><span class="sxs-lookup"><span data-stu-id="02553-214">Typically, date and time strings have two different usages in applications:</span></span>  
  
-   <span data-ttu-id="02553-215">日期和時間會以各種形式，並反映目前文化特性或特定文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-215">A date and time takes a variety of forms and reflects the conventions of either the current culture or a specific culture.</span></span> <span data-ttu-id="02553-216">例如，應用程式可讓其目前的文化特性是 EN-US 輸入日期值為"12/15/2013 」 或 「 2013 年 12 月 15 日 」 的使用者。</span><span class="sxs-lookup"><span data-stu-id="02553-216">For example, an application allows a user whose current culture is en-US to input a date value as "12/15/2013" or "December 15, 2013".</span></span> <span data-ttu-id="02553-217">它可讓的使用者，其目前的文化特性是 en-us gb 輸入日期值做為 「 15/12/2013 」 或 「 15 2013 年 12 月 」。</span><span class="sxs-lookup"><span data-stu-id="02553-217">It allows a user whose current culture is en-gb to input a date value as "15/12/2013" or "15 December 2013."</span></span>  
  
-   <span data-ttu-id="02553-218">以預先定義的格式表示的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-218">A date and time is represented in a predefined format.</span></span> <span data-ttu-id="02553-219">比方說，應用程式將序列化為 「 20130103"獨立於其執行應用程式的文化特性的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-219">For example, an application serializes a date as "20130103" independently of the culture on which the app is running.</span></span> <span data-ttu-id="02553-220">應用程式可能需要目前文化特性的簡短日期格式輸入日期。</span><span class="sxs-lookup"><span data-stu-id="02553-220">An application may require dates be input in the current culture's short date format.</span></span>
  
<span data-ttu-id="02553-221">您使用<xref:System.DateTime.Parse%2A>或是<xref:System.DateTime.TryParse%2A>方法，將字串轉換其中一個文化特性所使用的常見的日期和時間格式<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-221">You use the <xref:System.DateTime.Parse%2A> or <xref:System.DateTime.TryParse%2A> method to convert a string from one of the common date and time formats used by a culture to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-222">下列範例示範如何使用<xref:System.DateTime.TryParse%2A>要轉換至不同的文化特性特定格式的日期字串<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-222">The following example shows how you can use <xref:System.DateTime.TryParse%2A> to convert date strings in different culture-specific formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-223">它將目前的文化特性變更為 英文 （英國） 」 和 「 呼叫<xref:System.DateTime.GetDateTimeFormats>方法來產生日期和時間字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="02553-223">It changes the current culture to English (Great Britain) and calls the <xref:System.DateTime.GetDateTimeFormats> method to generate an array of date and time strings.</span></span> <span data-ttu-id="02553-224">接著，將每個項目陣列中要<xref:System.DateTime.TryParse%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-224">It then passes each element in the array to the <xref:System.DateTime.TryParse%2A> method.</span></span> <span data-ttu-id="02553-225">範例輸出顯示剖析方法能夠成功地將每個特定文化特性的日期和時間字串轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-225">The output from the example shows the parsing method was able to successfully convert each of the culture-specific date and time strings.</span></span>  
  
<a name="parsing-01"></a>  
[!code-csharp-interactive[System.DateTime.Parsing#1](~/samples/snippets/csharp/System.DateTime/Parsing.cs#1)]
[!code-vb[System.DateTime.Parsing#1](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#1)]  

<span data-ttu-id="02553-226">您使用<xref:System.DateTime.ParseExact%2A>並<xref:System.DateTime.TryParseExact%2A>方法，將必須符合特定的格式或格式的字串轉換<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-226">You use the <xref:System.DateTime.ParseExact%2A> and <xref:System.DateTime.TryParseExact%2A> methods to convert a string that must match a particular format or formats to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-227">您可以指定一或多個日期和時間格式字串做為剖析方法的參數。</span><span class="sxs-lookup"><span data-stu-id="02553-227">You specify one or more date and time format strings as a parameter to the parsing method.</span></span> <span data-ttu-id="02553-228">下列範例會使用<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>方法，將必須在"yyyyMMdd"的格式或"HHmmss"格式的字串轉換<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-228">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method to convert strings that must be either in a "yyyyMMdd" format or a "HHmmss" format to <xref:System.DateTime> values.</span></span>  
  
<a name="parsing-02"></a>  
[!code-csharp-interactive[System.DateTime.Parsing#2](~/samples/snippets/csharp/System.DateTime/Parsing.cs#2)]
[!code-vb[System.DateTime.Parsing#2](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#2)]  

<span data-ttu-id="02553-229">常見用途之一<xref:System.DateTime.ParseExact%2A>中要轉換的字串表示法，從 web 服務，通常是[ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html)標準格式。</span><span class="sxs-lookup"><span data-stu-id="02553-229">One common use for <xref:System.DateTime.ParseExact%2A> is to convert a string representation from a web service, usually in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) standard format.</span></span> <span data-ttu-id="02553-230">下列程式碼顯示要使用的正確的格式字串：</span><span class="sxs-lookup"><span data-stu-id="02553-230">The following code shows the correct format string to use:</span></span>

<a name="parsing-03"></a>  
[!code-csharp-interactive[System.DateTime.Parsing#3](~/samples/snippets/csharp/System.DateTime/Parsing.cs#3)]
[!code-vb[System.DateTime.Parsing#3](~/samples/snippets/visualbasic/System.DateTime/Parsing.vb#3)]  

<span data-ttu-id="02553-231">無法剖析字串，如果<xref:System.DateTime.Parse%2A>和<xref:System.DateTime.ParseExact%2A>方法會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="02553-231">If a string cannot be parsed, the <xref:System.DateTime.Parse%2A> and <xref:System.DateTime.ParseExact%2A> methods throw an exception.</span></span> <span data-ttu-id="02553-232"><xref:System.DateTime.TryParse%2A>並<xref:System.DateTime.TryParseExact%2A>方法會傳回<xref:System.Boolean>值，指出轉換是否成功或失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-232">The <xref:System.DateTime.TryParse%2A> and <xref:System.DateTime.TryParseExact%2A> methods return a <xref:System.Boolean> value that indicates whether the conversion succeeded or failed.</span></span> <span data-ttu-id="02553-233">您應該使用<xref:System.DateTime.TryParse%2A>或<xref:System.DateTime.TryParseExact%2A>效能很重要的案例中的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-233">You should use the <xref:System.DateTime.TryParse%2A> or <xref:System.DateTime.TryParseExact%2A> methods in scenarios where performance is important.</span></span> <span data-ttu-id="02553-234">日期和時間字串的剖析作業通常具有高失敗率，而且例外狀況處理費用昂貴。</span><span class="sxs-lookup"><span data-stu-id="02553-234">The parsing operation for date and time strings tends to have a high failure rate, and exception handling is expensive.</span></span> <span data-ttu-id="02553-235">如果字串輸入的使用者，請使用這些方法，或來自未知來源。</span><span class="sxs-lookup"><span data-stu-id="02553-235">Use these methods if strings are input by users or coming from an unknown source.</span></span> 
  
<span data-ttu-id="02553-236">如需有關如何剖析日期和時間值的詳細資訊，請參閱[剖析的日期和時間字串](~/docs/standard/base-types/parsing-datetime.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-236">For more information about parsing date and time values, see [Parsing Date and Time Strings](~/docs/standard/base-types/parsing-datetime.md).</span></span>  

### <a name="datetime-values"></a><span data-ttu-id="02553-237">日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-237">DateTime values</span></span>

<span data-ttu-id="02553-238">中的時間值的描述<xref:System.DateTime>類型通常會使用 Coordinated Universal Time (UTC) 標準來表示。</span><span class="sxs-lookup"><span data-stu-id="02553-238">Descriptions of time values in the <xref:System.DateTime> type are often expressed using the Coordinated Universal Time (UTC) standard.</span></span> <span data-ttu-id="02553-239">國際標準時間是國際認可且符合名稱格林威治標準時間 (GMT)。</span><span class="sxs-lookup"><span data-stu-id="02553-239">Coordinated Universal Time is the internationally recognized name for Greenwich Mean Time (GMT).</span></span> <span data-ttu-id="02553-240">Coordinated Universal Time 不為零的度經度，UTC 原點在進行測量的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-240">Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.</span></span> <span data-ttu-id="02553-241">日光節約時間不適用為 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-241">Daylight saving time is not applicable to UTC.</span></span>  
  
<span data-ttu-id="02553-242">本地時間是相對於特定的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-242">Local time is relative to a particular time zone.</span></span> <span data-ttu-id="02553-243">時區是相關聯的時區位移。</span><span class="sxs-lookup"><span data-stu-id="02553-243">A time zone is associated with a time zone offset.</span></span> <span data-ttu-id="02553-244">時區位移是時區的測量單位的 UTC 原點小時的位移。</span><span class="sxs-lookup"><span data-stu-id="02553-244">A time zone offset is the displacement of the time zone measured in hours from the UTC origin point.</span></span> <span data-ttu-id="02553-245">此外，本地時間會選擇性地受到日光節約時間，加入或減去的時間間隔調整。</span><span class="sxs-lookup"><span data-stu-id="02553-245">In addition, local time is optionally affected by daylight saving time, which adds or subtracts a time interval adjustment.</span></span> <span data-ttu-id="02553-246">本地時間計算方式是將時區時差 UTC 及如有必要，日光節約時間調整。</span><span class="sxs-lookup"><span data-stu-id="02553-246">Local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.</span></span> <span data-ttu-id="02553-247">UTC 原點的時區位移為零。</span><span class="sxs-lookup"><span data-stu-id="02553-247">The time zone offset at the UTC origin point is zero.</span></span>  
  
<span data-ttu-id="02553-248">UTC 時間為適用於計算、 比較，以及儲存日期和時間的檔案。</span><span class="sxs-lookup"><span data-stu-id="02553-248">UTC time is suitable for calculations, comparisons, and storing dates and time in files.</span></span> <span data-ttu-id="02553-249">本地時間適合的傳統型應用程式的使用者介面中顯示。</span><span class="sxs-lookup"><span data-stu-id="02553-249">Local time is appropriate for display in user interfaces of desktop applications.</span></span> <span data-ttu-id="02553-250">也需要使用幾個其他的時區的時區感知的應用程式 （例如許多 Web 應用程式中）。</span><span class="sxs-lookup"><span data-stu-id="02553-250">Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.</span></span>  
  
<span data-ttu-id="02553-251">如果<xref:System.DateTime.Kind%2A>的屬性<xref:System.DateTime>物件是<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>，並未指定表示之時間是否本地時間或 UTC 時間，或是一些其他時區的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-251">If the <xref:System.DateTime.Kind%2A> property of a <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.</span></span>  

### <a name="datetime-resolution"></a><span data-ttu-id="02553-252">日期時間解析</span><span class="sxs-lookup"><span data-stu-id="02553-252">DateTime resolution</span></span>
  
> [!NOTE]
>  <span data-ttu-id="02553-253">除了執行日期和時間運算<xref:System.DateTime>值來測量已耗用時間，您可以使用<xref:System.Diagnostics.Stopwatch>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-253">As an alternative to performing date and time arithmetic on <xref:System.DateTime> values to measure elapsed time, you can use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
<span data-ttu-id="02553-254"><xref:System.DateTime.Ticks%2A>屬性所表示日期和時間值秒的一個 10-百萬分之一秒為單位。</span><span class="sxs-lookup"><span data-stu-id="02553-254">The <xref:System.DateTime.Ticks%2A> property expresses date and time values in units of one ten-millionth of a second.</span></span> <span data-ttu-id="02553-255"><xref:System.DateTime.Millisecond%2A>屬性會傳回日期和時間值中的千分之一秒。</span><span class="sxs-lookup"><span data-stu-id="02553-255">The <xref:System.DateTime.Millisecond%2A> property returns the thousandths of a second in a date and time value.</span></span> <span data-ttu-id="02553-256">使用重複的呼叫<xref:System.DateTime.Now%2A?displayProperty=nameWithType>測量已耗用時間的屬性是相依於系統時鐘。</span><span class="sxs-lookup"><span data-stu-id="02553-256">Using repeated calls to the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property to measure elapsed time is dependent on the system clock.</span></span> <span data-ttu-id="02553-257">Windows 7 和 Windows 8 的系統上的系統時鐘會有約 15 毫秒的解析度。</span><span class="sxs-lookup"><span data-stu-id="02553-257">The system clock on  Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.</span></span> <span data-ttu-id="02553-258">此解析度會影響短暫間隔低於 100 毫秒。</span><span class="sxs-lookup"><span data-stu-id="02553-258">This resolution affects small time intervals less than 100 milliseconds.</span></span> 
  
<span data-ttu-id="02553-259">下列範例說明系統時鐘的解析度的目前日期和時間值的相依性。</span><span class="sxs-lookup"><span data-stu-id="02553-259">The following example illustrates the dependence of current date and time values on the resolution of the system clock.</span></span> <span data-ttu-id="02553-260">在範例中，外部迴圈會重複 20 次，而且內部迴圈是用來延遲外部迴圈。</span><span class="sxs-lookup"><span data-stu-id="02553-260">In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.</span></span> <span data-ttu-id="02553-261">如果外部迴圈計數器的值是 10，呼叫<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>方法會導入了 5 毫秒的延遲。</span><span class="sxs-lookup"><span data-stu-id="02553-261">If the value of the outer loop counter is 10, a call to the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method introduces a five-millisecond delay.</span></span> <span data-ttu-id="02553-262">下列範例會顯示所傳回的毫秒數`DateTime.Now.Milliseconds`屬性變更，只有在呼叫之後<xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-262">The following example shows the number of milliseconds returned by the `DateTime.Now.Milliseconds` property changes only after the call to <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType>.</span></span>  

<a name="resolution-01"></a>  
[!code-csharp-interactive[System.DateTime.Resolution#1](~/samples/snippets/csharp/System.DateTime/Resolution.cs#1)]
[!code-vb[System.DateTime.Resolution#1](~/samples/snippets/visualbasic/System.DateTime/Resolution.vb#1)]  

### <a name="datetime-operations"></a><span data-ttu-id="02553-263">DateTime 作業</span><span class="sxs-lookup"><span data-stu-id="02553-263">DateTime operations</span></span>  

<span data-ttu-id="02553-264">計算，使用<xref:System.DateTime>結構，例如<xref:System.DateTime.Add%2A>或<xref:System.DateTime.Subtract%2A>，不會修改結構的值。</span><span class="sxs-lookup"><span data-stu-id="02553-264">A calculation using a <xref:System.DateTime> structure, such as <xref:System.DateTime.Add%2A> or <xref:System.DateTime.Subtract%2A>, does not modify the value of the structure.</span></span> <span data-ttu-id="02553-265">相反地，計算會傳回新<xref:System.DateTime>結構，其值是計算的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-265">Instead, the calculation returns a new <xref:System.DateTime> structure whose value is the result of the calculation.</span></span>  
  
<span data-ttu-id="02553-266">在各時區間 （例如 UTC 與當地時間，或是一個時區，而另一個之間） 的轉換作業會將日光節約時間列入考量，但算術和比較作業不這麼做。</span><span class="sxs-lookup"><span data-stu-id="02553-266">Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.</span></span>  
  
<span data-ttu-id="02553-267"><xref:System.DateTime>結構本身提供有限的支援，將從某個時區轉換為另一個。</span><span class="sxs-lookup"><span data-stu-id="02553-267">The <xref:System.DateTime> structure itself offers limited support for converting from one time zone to another.</span></span> <span data-ttu-id="02553-268">您可以使用<xref:System.DateTime.ToLocalTime%2A>方法，以將 UTC 轉換為當地時間，或者您可以使用<xref:System.DateTime.ToUniversalTime%2A>方法，以從當地時間轉換為 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-268">You can use the <xref:System.DateTime.ToLocalTime%2A> method to convert UTC to local time, or you can use the <xref:System.DateTime.ToUniversalTime%2A> method to convert from local time to UTC.</span></span> <span data-ttu-id="02553-269">不過，一組完整的時區轉換方法都可在<xref:System.TimeZoneInfo>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-269">However, a full set of time zone conversion methods is available in the <xref:System.TimeZoneInfo> class.</span></span> <span data-ttu-id="02553-270">您可以將任何一種全世界的時區的時間轉換為任何使用這些方法其他時區的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-270">You convert the time in any one of the world's time zones to the time in any other time zone using these methods.</span></span>  
  
<span data-ttu-id="02553-271">計算和比較的<xref:System.DateTime>物件，才有意義的物件代表在相同時區的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-271">Calculations and comparisons of <xref:System.DateTime> objects are meaningful only if the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-272">您可以使用<xref:System.TimeZoneInfo>物件來代表<xref:System.DateTime>區域值的時間，雖然這兩個進行鬆散偶合。</span><span class="sxs-lookup"><span data-stu-id="02553-272">You can use a <xref:System.TimeZoneInfo> object to represent a <xref:System.DateTime> value's time zone, although the two are loosely coupled.</span></span> <span data-ttu-id="02553-273">A<xref:System.DateTime>物件沒有屬性，可傳回物件，表示該日期和時間值的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-273">A <xref:System.DateTime> object does not have a property that returns an object that represents that date and time value's time zone.</span></span> <span data-ttu-id="02553-274"><xref:System.DateTime.Kind%2A>屬性會指出如果`DateTime`代表 UTC、 本地時間，或未指定。</span><span class="sxs-lookup"><span data-stu-id="02553-274">The <xref:System.DateTime.Kind%2A> property indicates if a `DateTime` represents UTC, local time, or is unspecified.</span></span> <span data-ttu-id="02553-275">在時區感知的應用程式中，您必須依賴某種外部機制來判斷所在時區<xref:System.DateTime>建立物件。</span><span class="sxs-lookup"><span data-stu-id="02553-275">In a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <xref:System.DateTime> object was created.</span></span> <span data-ttu-id="02553-276">您可以使用包裝兩者的結構<xref:System.DateTime>值，而<xref:System.TimeZoneInfo>物件，表示<xref:System.DateTime>值的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-276">You could use a structure that wraps both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents the <xref:System.DateTime> value's time zone.</span></span> <span data-ttu-id="02553-277">如需有關計算和比較中使用 UTC<xref:System.DateTime>值，請參閱[使用日期和時間執行算術運算](~/docs/standard/datetime/performing-arithmetic-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-277">For details on using UTC in calculations and comparisons with <xref:System.DateTime> values, see [Performing Arithmetic Operations with Dates and Times](~/docs/standard/datetime/performing-arithmetic-operations.md).</span></span>  
  
<span data-ttu-id="02553-278">每個<xref:System.DateTime>成員會隱含地使用西曆來執行其作業。</span><span class="sxs-lookup"><span data-stu-id="02553-278">Each <xref:System.DateTime> member implicitly uses the Gregorian calendar to perform its operation.</span></span> <span data-ttu-id="02553-279">例外狀況是以隱含方式指定曆法的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-279">Exceptions are methods that implicitly specify a calendar.</span></span> <span data-ttu-id="02553-280">這些包括建構函式會指定曆法，以及具有參數的方法衍生自<xref:System.IFormatProvider>，例如<xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-280">These include constructors that specify a calendar, and methods with a parameter derived from <xref:System.IFormatProvider>, such as <xref:System.Globalization.DateTimeFormatInfo?displayProperty=nameWithType>.</span></span>  
  
<span data-ttu-id="02553-281">作業所使用的成員<xref:System.DateTime>類型納入帳戶詳細資料，例如潤年和在月份的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-281">Operations by members of the <xref:System.DateTime> type take into account details such as leap years and the number of days in a month.</span></span>  

## <a name="datetime-values-and-calendars"></a><span data-ttu-id="02553-282">日期時間值和行事曆</span><span class="sxs-lookup"><span data-stu-id="02553-282">DateTime values and calendars</span></span>  

<span data-ttu-id="02553-283">.NET Framework 類別庫包含幾個行事曆類別，全部都衍生自<xref:System.Globalization.Calendar>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-283">The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <xref:System.Globalization.Calendar> class.</span></span>  <span data-ttu-id="02553-284">包括：</span><span class="sxs-lookup"><span data-stu-id="02553-284">They are:</span></span>  
  
-   <span data-ttu-id="02553-285"><xref:System.Globalization.ChineseLunisolarCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-285">The <xref:System.Globalization.ChineseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="02553-286"><xref:System.Globalization.EastAsianLunisolarCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-286">The <xref:System.Globalization.EastAsianLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="02553-287"><xref:System.Globalization.GregorianCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-287">The <xref:System.Globalization.GregorianCalendar> class.</span></span>  
-   <span data-ttu-id="02553-288"><xref:System.Globalization.HebrewCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-288">The <xref:System.Globalization.HebrewCalendar> class.</span></span>  
-   <span data-ttu-id="02553-289"><xref:System.Globalization.HijriCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-289">The <xref:System.Globalization.HijriCalendar> class.</span></span>  
-   <span data-ttu-id="02553-290"><xref:System.Globalization.JapaneseCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-290">The <xref:System.Globalization.JapaneseCalendar> class.</span></span>  
-   <span data-ttu-id="02553-291"><xref:System.Globalization.JapaneseLunisolarCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-291">The <xref:System.Globalization.JapaneseLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="02553-292"><xref:System.Globalization.JulianCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-292">The <xref:System.Globalization.JulianCalendar> class.</span></span>  
-   <span data-ttu-id="02553-293"><xref:System.Globalization.KoreanCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-293">The <xref:System.Globalization.KoreanCalendar> class.</span></span>  
-   <span data-ttu-id="02553-294"><xref:System.Globalization.KoreanLunisolarCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-294">The <xref:System.Globalization.KoreanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="02553-295"><xref:System.Globalization.PersianCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-295">The <xref:System.Globalization.PersianCalendar> class.</span></span>  
-   <span data-ttu-id="02553-296"><xref:System.Globalization.TaiwanCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-296">The <xref:System.Globalization.TaiwanCalendar> class.</span></span>  
-   <span data-ttu-id="02553-297"><xref:System.Globalization.TaiwanLunisolarCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-297">The <xref:System.Globalization.TaiwanLunisolarCalendar> class.</span></span>  
-   <span data-ttu-id="02553-298"><xref:System.Globalization.ThaiBuddhistCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-298">The <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
-   <span data-ttu-id="02553-299"><xref:System.Globalization.UmAlQuraCalendar> 類別。</span><span class="sxs-lookup"><span data-stu-id="02553-299">The <xref:System.Globalization.UmAlQuraCalendar> class.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

<span data-ttu-id="02553-300">每個文化特性會使用預設的行事曆，定義其唯讀<xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-300">Each culture uses a default calendar defined by its read-only <xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-301">每個文化特性可支援其唯讀模式所定義的一或多個行事曆<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-301">Each culture may support one or more calendars defined by its read-only <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-302">目前由特定的行事曆<xref:System.Globalization.CultureInfo>物件所定義其<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-302">The calendar currently used by a specific <xref:System.Globalization.CultureInfo> object is defined by its <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-303">它必須是其中一個位於行事曆<xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType>陣列。</span><span class="sxs-lookup"><span data-stu-id="02553-303">It must be one of the calendars found in the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=nameWithType> array.</span></span>  
  
<span data-ttu-id="02553-304">文化特性的現行曆法用於該文化特性的所有格式設定作業。</span><span class="sxs-lookup"><span data-stu-id="02553-304">A culture's current calendar is used in all formatting operations for that culture.</span></span> <span data-ttu-id="02553-305">比方說，泰國佛教文化特性的預設曆法是表示泰國佛教紀元行事曆<xref:System.Globalization.ThaiBuddhistCalendar>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-305">For example, the default calendar of the Thai Buddhist culture is the Thai Buddhist Era calendar, which is represented by the <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  <span data-ttu-id="02553-306">當<xref:System.Globalization.CultureInfo>代表泰國佛教文化特性的物件會在日期和時間格式化作業，預設會使用泰國佛教紀元行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-306">When a <xref:System.Globalization.CultureInfo> object that represents the Thai Buddhist culture is used in a date and time formatting operation, the Thai Buddhist Era calendar is used by default.</span></span> <span data-ttu-id="02553-307">只有當使用者使用西曆的文化特性<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>變更屬性，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="02553-307">The Gregorian calendar is used only if the culture's <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property is changed, as the following example shows:</span></span>  

<a name="calendars-01"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#1](~/samples/snippets/csharp/System.DateTime/Calendar.cs#1)]
[!code-vb[System.DateTime.Calendar#1](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#1)]  

<span data-ttu-id="02553-308">文化特性的現行曆法也會在所有的剖析作業，用於該文化特性，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="02553-308">A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.</span></span>  
  
<a name="calendars-02"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#2](~/samples/snippets/csharp/System.DateTime/Calendar.cs#2)]
[!code-vb[System.DateTime.Calendar#2](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#2)]  

<span data-ttu-id="02553-309">您具現化<xref:System.DateTime>值使用藉由呼叫的日期和時間的項目 （年、 月和日的數目） 在特定行事曆[DateTime 建構函式](xref:System.DateTime.%23ctor%2A)包含`calendar`參數，並將其傳遞<xref:System.Globalization.CultureInfo.Calendar%2A>物件，表示該月曆。</span><span class="sxs-lookup"><span data-stu-id="02553-309">You instantiate a <xref:System.DateTime> value using the date and time elements (number of the year, month, and day) of a specific calendar by calling a [DateTime constructor](xref:System.DateTime.%23ctor%2A) that includes a `calendar` parameter and passing it a <xref:System.Globalization.CultureInfo.Calendar%2A> object that represents that calendar.</span></span> <span data-ttu-id="02553-310">下列範例使用的日期和時間的項目從<xref:System.Globalization.ThaiBuddhistCalendar>行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-310">The following example uses the date and time elements from the <xref:System.Globalization.ThaiBuddhistCalendar> calendar.</span></span>  
  
<a name="calendars-03"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#3](~/samples/snippets/csharp/System.DateTime/Calendar.cs#3)]
[!code-vb[System.DateTime.Calendar#3](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#3)]  

<span data-ttu-id="02553-311"><xref:System.DateTime> 建構函式不包含`calendar`參數會假設的日期和時間的項目會以西曆中的單位表示。</span><span class="sxs-lookup"><span data-stu-id="02553-311"><xref:System.DateTime> constructors that do not include a `calendar` parameter assume that the date and time elements are expressed as units in the Gregorian calendar.</span></span>  
  
<span data-ttu-id="02553-312">所有其他<xref:System.DateTime>屬性和方法使用西曆。</span><span class="sxs-lookup"><span data-stu-id="02553-312">All other <xref:System.DateTime> properties and methods use the Gregorian calendar.</span></span> <span data-ttu-id="02553-313">例如，<xref:System.DateTime.Year%2A?displayProperty=nameWithType>屬性會傳回一年中的西曆，而<xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType>方法會假設`year`參數是西曆中的之年。</span><span class="sxs-lookup"><span data-stu-id="02553-313">For example, the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> property returns the year in the Gregorian calendar, and the <xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=nameWithType> method assumes that the `year` parameter is a year in the Gregorian calendar.</span></span>  <span data-ttu-id="02553-314">每個<xref:System.DateTime>會使用西曆的成員都有對應的成員<xref:System.Globalization.CultureInfo.Calendar%2A>類別，以使用特定的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-314">Each <xref:System.DateTime> member that uses the Gregorian calendar has a corresponding member of the <xref:System.Globalization.CultureInfo.Calendar%2A> class that uses a specific calendar.</span></span> <span data-ttu-id="02553-315">比方說，<xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType>方法會傳回一年中特定的行事曆，而<xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType>方法會解譯`year`參數中特定的日曆的年數字。</span><span class="sxs-lookup"><span data-stu-id="02553-315">For example, the <xref:System.Globalization.Calendar.GetYear%2A?displayProperty=nameWithType> method returns the year in a specific calendar, and the <xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=nameWithType> method interprets the `year` parameter as a year number in a specific calendar.</span></span> <span data-ttu-id="02553-316">下列範例會使用這兩者<xref:System.DateTime>以及對應的成員<xref:System.Globalization.ThaiBuddhistCalendar>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-316">The following example uses both the <xref:System.DateTime> and the corresponding members of the  <xref:System.Globalization.ThaiBuddhistCalendar> class.</span></span>  
  
<a name="calendars-04"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#4](~/samples/snippets/csharp/System.DateTime/Calendar.cs#4)]
[!code-vb[System.DateTime.Calendar#4](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#4)]  

<span data-ttu-id="02553-317"><xref:System.DateTime>結構包含<xref:System.DateTime.DayOfWeek%2A>傳回星期幾西曆中的屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-317">The <xref:System.DateTime> structure includes a <xref:System.DateTime.DayOfWeek%2A> property that returns the day of the week in the Gregorian calendar.</span></span> <span data-ttu-id="02553-318">它不包含可讓您擷取一年的週數的成員。</span><span class="sxs-lookup"><span data-stu-id="02553-318">It does not include a member that allows you to retrieve the week number of the year.</span></span> <span data-ttu-id="02553-319">若要擷取的當年第幾週，呼叫個別的行事曆<xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-319">To retrieve the week of the year, call the individual calendar's <xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-320">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="02553-320">The following example provides an illustration.</span></span>  
  
<a name="calendars-05"></a>  
[!code-csharp-interactive[System.DateTime.Calendar#5](~/samples/snippets/csharp/System.DateTime/Calendar.cs#5)]
[!code-vb[System.DateTime.Calendar#5](~/samples/snippets/visualbasic/System.DateTime/Calendar.vb#5)]  

<span data-ttu-id="02553-321">如需有關日期和行事曆的詳細資訊，請參閱 <<c0> [ 使用行事曆](~/docs/standard/datetime/working-with-calendars.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-321">For more information on dates and calendars, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).</span></span>  
  
### <a name="persisting-datetime-values"></a><span data-ttu-id="02553-322">保存的日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-322">Persisting DateTime values</span></span>  

<span data-ttu-id="02553-323">您可以保存<xref:System.DateTime>四種方式的值：</span><span class="sxs-lookup"><span data-stu-id="02553-323">You can persist <xref:System.DateTime> values in four ways:</span></span>  
  
-   <span data-ttu-id="02553-324">您[將它們轉換成字串](#persisting-values-as-strings)，並將保存的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-324">You [convert them to strings](#persisting-values-as-strings) and persist the strings.</span></span>  
-   <span data-ttu-id="02553-325">您[將它們轉換成 64 位元整數值](#persisting-values-as-integers)(windows 7<xref:System.DateTime.Ticks%2A>屬性)，並將保存的整數。</span><span class="sxs-lookup"><span data-stu-id="02553-325">You [convert them to 64-bit integer values](#persisting-values-as-integers) (the value of the <xref:System.DateTime.Ticks%2A> property) and persist the integers.</span></span>  
-   <span data-ttu-id="02553-326">您[序列化的日期時間值](#serializing-datetime-values)。</span><span class="sxs-lookup"><span data-stu-id="02553-326">You [serialize the DateTime values](#serializing-datetime-values).</span></span>  
-   <span data-ttu-id="02553-327">您[序列化為 DateTime 值，加上時區資訊](#serializing-datetime-and-time-zone-data)。</span><span class="sxs-lookup"><span data-stu-id="02553-327">You [serialize the DateTime values along with time zone information](#serializing-datetime-and-time-zone-data).</span></span>  
  
<span data-ttu-id="02553-328">您必須確保還原的常式<xref:System.DateTime>值不會遺失資料，或擲回例外狀況，不論哪一種技術您選擇。</span><span class="sxs-lookup"><span data-stu-id="02553-328">You must ensure that the routine that restores the <xref:System.DateTime> values doesn't lose data or throw an exception regardless of which technique you choose.</span></span> <span data-ttu-id="02553-329"><xref:System.DateTime> 值應該反覆存取。</span><span class="sxs-lookup"><span data-stu-id="02553-329"><xref:System.DateTime> values should round-trip.</span></span> <span data-ttu-id="02553-330">也就是原始的值和還原的值應該是相同。</span><span class="sxs-lookup"><span data-stu-id="02553-330">That is, the original value and the restored value should be the same.</span></span> <span data-ttu-id="02553-331">如果原始<xref:System.DateTime>值代表單一時刻，它應該識別的還原時的時間相同時間點。</span><span class="sxs-lookup"><span data-stu-id="02553-331">And if the original <xref:System.DateTime> value represents a single instant of time, it should identify the same moment of time when it's restored.</span></span>  
  
#### <a name="persisting-values-as-strings"></a><span data-ttu-id="02553-332">保存為字串的值</span><span class="sxs-lookup"><span data-stu-id="02553-332">Persisting values as strings</span></span>  

<span data-ttu-id="02553-333">已成功還原<xref:System.DateTime>會保存為字串的值會遵循這些規則：</span><span class="sxs-lookup"><span data-stu-id="02553-333">To successfully restore <xref:System.DateTime> values that are persisted as strings, follow these rules:</span></span>  
  
-   <span data-ttu-id="02553-334">假設相同文化特性專屬格式，當您還原為保存它的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-334">Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.</span></span> <span data-ttu-id="02553-335">若要確保字串可以在不同的文化特性的系統儲存目前文化特性的系統上還原，呼叫<xref:System.DateTime.ToString%2A>多載使用不因文化特性而異的慣例來儲存的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-335">To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <xref:System.DateTime.ToString%2A> overload to save the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="02553-336">呼叫<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>或<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>多載來還原所使用的文化特性而異的慣例的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-336">Call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> or <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> overload to restore the string by using the conventions of the invariant culture.</span></span> <span data-ttu-id="02553-337">永遠不會使用<xref:System.DateTime.ToString>， <xref:System.DateTime.Parse%28System.String%29>，或<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29>多載，其使用目前執行緒文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-337">Never use the <xref:System.DateTime.ToString>, <xref:System.DateTime.Parse%28System.String%29>, or <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> overloads, which use the conventions of the current thread culture.</span></span>  
  
-   <span data-ttu-id="02553-338">如果日期是代表單一時間點的時間，請確定它代表相同的時間點，當它還原，即使在不同時區的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-338">If the date represents a single moment of time, ensure that it represents the same moment in time when it's restored, even on a different time zone.</span></span> <span data-ttu-id="02553-339">轉換<xref:System.DateTime>之前儲存的值為 Coordinated Universal Time (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-339">Convert the <xref:System.DateTime> value to Coordinated Universal Time (UTC) before saving it.</span></span> <span data-ttu-id="02553-340">您也可以序列化的值以及時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-340">You can also serialize the value along with time zone information.</span></span> <span data-ttu-id="02553-341">如需有關這種方法的詳細資訊，請參閱[序列化的日期時間和時區資料](#serializing-datetime-and-time-zone-data)。</span><span class="sxs-lookup"><span data-stu-id="02553-341">For more information about this approach, see [Serializing DateTime and time zone data](#serializing-datetime-and-time-zone-data).</span></span>  
  
 <span data-ttu-id="02553-342">最常見的錯誤進行保存時<xref:System.DateTime>為字串的值是依賴預設值或目前的文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-342">The most common error made when persisting <xref:System.DateTime> values as strings is to rely on the formatting conventions of the default or current culture.</span></span> <span data-ttu-id="02553-343">如果目前的文化特性不同儲存和還原的字串時，就會發生問題。</span><span class="sxs-lookup"><span data-stu-id="02553-343">Problems arise if the current culture is different when saving and restoring the strings.</span></span> <span data-ttu-id="02553-344">下列範例會說明這些問題。</span><span class="sxs-lookup"><span data-stu-id="02553-344">The following example illustrates these problems.</span></span> <span data-ttu-id="02553-345">它會儲存使用目前的文化特性，在此情況下是英文 （美國） 的格式化慣例的五個日期。</span><span class="sxs-lookup"><span data-stu-id="02553-345">It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).</span></span> <span data-ttu-id="02553-346">它會還原使用不同的文化特性，在此情況下是英文 （英國） 的格式化慣例的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-346">It restores the dates using the formatting conventions of a different culture, which in this case is English (Great Britain).</span></span> <span data-ttu-id="02553-347">因為不同的兩個文化特性的格式化慣例，無法還原兩個日期，並不正確地解譯其餘的三個日期。</span><span class="sxs-lookup"><span data-stu-id="02553-347">Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.</span></span> <span data-ttu-id="02553-348">此外，如果原始的日期和時間值代表單一時間的還原時間不正確，因為遺失時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-348">Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.</span></span>  
  
<a name="persistence-01"></a>  
[!code-csharp[System.DateTime.Persistence#1](~/samples/snippets/csharp/System.DateTime/Persistence.cs#1)]
[!code-vb[System.DateTime.Persistence#1](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#1)]  

<span data-ttu-id="02553-349">若要反覆存取<xref:System.DateTime>值成功，請遵循下列步驟：</span><span class="sxs-lookup"><span data-stu-id="02553-349">To round-trip <xref:System.DateTime> values successfully, follow these steps:</span></span>  
  
1.  <span data-ttu-id="02553-350">如果值代表單一分鐘的時間，將它們轉換從當地時間與 UTC 藉由呼叫<xref:System.DateTime.ToUniversalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-350">If the values represent single moments of time, convert them from the local time to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
1.  <span data-ttu-id="02553-351">呼叫，將日期轉換成其字串表示法<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>或<xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType>多載。</span><span class="sxs-lookup"><span data-stu-id="02553-351">Convert the dates to their string representations by calling the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> or <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="02553-352">藉由指定使用區分文化特性的格式化慣例<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>做為`provider`引數。</span><span class="sxs-lookup"><span data-stu-id="02553-352">Use the formatting conventions of the invariant culture by specifying <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument.</span></span> <span data-ttu-id="02553-353">指定使用"O"或"R"標準格式字串應該反覆存取值。</span><span class="sxs-lookup"><span data-stu-id="02553-353">Specify that the value should round-trip by using the "O" or "R" standard format string.</span></span>  
  
<span data-ttu-id="02553-354">若要還原的保存<xref:System.DateTime>值不會遺失資料，請遵循下列步驟：</span><span class="sxs-lookup"><span data-stu-id="02553-354">To restore the persisted <xref:System.DateTime> values without data loss, follow these steps:</span></span>  
  
1.  <span data-ttu-id="02553-355">剖析資料，藉由呼叫<xref:System.DateTime.ParseExact%2A>或<xref:System.DateTime.TryParseExact%2A>多載。</span><span class="sxs-lookup"><span data-stu-id="02553-355">Parse the data by calling the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> overload.</span></span> <span data-ttu-id="02553-356">指定<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>作為`provider`引數，並使用您用於相同的標準格式字串`format`在轉換過程的引數。</span><span class="sxs-lookup"><span data-stu-id="02553-356">Specify <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> as the `provider` argument, and use the same standard format string you used for the `format` argument during conversion.</span></span> <span data-ttu-id="02553-357">包含<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>中的值`styles`引數。</span><span class="sxs-lookup"><span data-stu-id="02553-357">Include the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> value in the `styles` argument.</span></span>  
1.  <span data-ttu-id="02553-358">如果<xref:System.DateTime>值代表單一時間的呼叫<xref:System.DateTime.ToLocalTime%2A>方法來剖析的日期將 UTC 轉換為當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-358">If the <xref:System.DateTime> values represent single moments in time, call the <xref:System.DateTime.ToLocalTime%2A> method to convert the parsed date from UTC to local time.</span></span>  
  
<span data-ttu-id="02553-359">下列範例會使用而異的文化特性和"O"標準格式字串，確保<xref:System.DateTime>儲存和還原的值代表不論系統、 文化特性或在來源和目標系統的時區時間的時間相同時間點。</span><span class="sxs-lookup"><span data-stu-id="02553-359">The following example uses the invariant culture and the "O" standard format string to ensure that <xref:System.DateTime> values saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.</span></span>  
  
<a name="persistence-02"></a>  
[!code-csharp[System.DateTime.Persistence#2](~/samples/snippets/csharp/System.DateTime/Persistence.cs#2)]
[!code-vb[System.DateTime.Persistence#2](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#2)]  

#### <a name="persisting-values-as-integers"></a><span data-ttu-id="02553-360">保存的值，做為整數</span><span class="sxs-lookup"><span data-stu-id="02553-360">Persisting values as integers</span></span>  

<span data-ttu-id="02553-361">您可以保存的日期和時間為<xref:System.Int64>值，表示刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-361">You can persist a date and time as an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="02553-362">在此情況下，您不需要考慮的系統文化特性<xref:System.DateTime>值是保存和還原。</span><span class="sxs-lookup"><span data-stu-id="02553-362">In this case, you don't have to consider the culture of the systems the <xref:System.DateTime> values are persisted and restored on.</span></span>  
  
<span data-ttu-id="02553-363">若要保存<xref:System.DateTime>做為整數的值：</span><span class="sxs-lookup"><span data-stu-id="02553-363">To persist a <xref:System.DateTime> value as an integer:</span></span>  
  
-   <span data-ttu-id="02553-364">如果<xref:System.DateTime>值代表單一時間的藉由呼叫將它們轉換成 UTC<xref:System.DateTime.ToUniversalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-364">If the <xref:System.DateTime> values represent single moments in time, convert them to UTC by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
-   <span data-ttu-id="02553-365">擷取的數字所表示之刻度<xref:System.DateTime>值從其<xref:System.DateTime.Ticks%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-365">Retrieve the number of ticks represented by the <xref:System.DateTime> value from its <xref:System.DateTime.Ticks%2A> property.</span></span>  
  
<span data-ttu-id="02553-366">若要還原<xref:System.DateTime>已保存為整數的值：</span><span class="sxs-lookup"><span data-stu-id="02553-366">To restore a <xref:System.DateTime> value that has been persisted as an integer:</span></span>  
  
1.  <span data-ttu-id="02553-367">新具現化<xref:System.DateTime>物件，並傳遞<xref:System.Int64>值<xref:System.DateTime.%23ctor%28System.Int64%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-367">Instantiate a new <xref:System.DateTime> object by passing the <xref:System.Int64> value to the <xref:System.DateTime.%23ctor%28System.Int64%29> constructor.</span></span>  
1.  <span data-ttu-id="02553-368">如果<xref:System.DateTime>值代表單一時間點，它從 UTC 轉換為當地時間藉由呼叫<xref:System.DateTime.ToLocalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-368">If the <xref:System.DateTime> value represents a single moment in time, convert it from UTC to the local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span>  
  
<span data-ttu-id="02553-369">下列範例會保存陣列<xref:System.DateTime>值做為位於美國的系統上的整數太平洋時間</span><span class="sxs-lookup"><span data-stu-id="02553-369">The following example persists an array of <xref:System.DateTime> values as integers on a system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="02553-370">它會在 UTC 時區系統上還原它。</span><span class="sxs-lookup"><span data-stu-id="02553-370">It restores it on a system in the UTC zone.</span></span> <span data-ttu-id="02553-371">包含整數的檔案，包括<xref:System.Int32>值，指出總數<xref:System.Int64>緊接它的值。</span><span class="sxs-lookup"><span data-stu-id="02553-371">The file that contains the integers includes an <xref:System.Int32> value that indicates the total number of <xref:System.Int64> values that immediately follow it.</span></span>  
  
<a name="persistence-03"></a>  
[!code-csharp[System.DateTime.Persistence#3](~/samples/snippets/csharp/System.DateTime/Persistence.cs#3)]
[!code-vb[System.DateTime.Persistence#3](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#3)]  

<a name="serializing-datetime-values"></a>
#### <a name="serializing-datetime-values"></a><span data-ttu-id="02553-372">序列化的日期時間值</span><span class="sxs-lookup"><span data-stu-id="02553-372">Serializing DateTime values</span></span>  

<span data-ttu-id="02553-373">您可以保存<xref:System.DateTime>值透過序列化資料流或檔案，並再還原它們透過還原序列化。</span><span class="sxs-lookup"><span data-stu-id="02553-373">You can persist <xref:System.DateTime> values through serialization to a stream or file, and then restore them through deserialization.</span></span> <span data-ttu-id="02553-374"><xref:System.DateTime> 資料會以某些指定的物件格式序列化。</span><span class="sxs-lookup"><span data-stu-id="02553-374"><xref:System.DateTime> data is serialized in some specified object format.</span></span> <span data-ttu-id="02553-375">當還原序列化時，會還原物件。</span><span class="sxs-lookup"><span data-stu-id="02553-375">The objects are restored when they are deserialized.</span></span> <span data-ttu-id="02553-376">格式器或序列化程式，例如<xref:System.Xml.Serialization.XmlSerializer>或<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>，處理的序列化和還原序列化程序。</span><span class="sxs-lookup"><span data-stu-id="02553-376">A formatter or serializer, such as <xref:System.Xml.Serialization.XmlSerializer> or <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>, handles the process of serialization and deserialization.</span></span> <span data-ttu-id="02553-377">如需序列化和.NET Framework 所支援的序列化類型的詳細資訊，請參閱[序列化](~/docs/standard/serialization/index.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-377">For more information about serialization and the types of serialization supported by the .NET Framework, see [Serialization](~/docs/standard/serialization/index.md).</span></span>
  
<span data-ttu-id="02553-378">下列範例會使用<xref:System.Xml.Serialization.XmlSerializer>類別來序列化和還原序列化<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-378">The following example uses the <xref:System.Xml.Serialization.XmlSerializer> class to serialize and deserialize <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-379">值代表所有閏年天內，第二十一世紀。</span><span class="sxs-lookup"><span data-stu-id="02553-379">The values represent all leap year days in the twenty-first century.</span></span> <span data-ttu-id="02553-380">如果目前的文化特性是英文 （英國） 的系統上執行範例，輸出會表示結果。</span><span class="sxs-lookup"><span data-stu-id="02553-380">The output represents the result if the example is run on a system whose current culture is English (Great Britain).</span></span> <span data-ttu-id="02553-381">因為您已還原序列化<xref:System.DateTime>物件本身的程式碼不需要處理日期和時間格式的文化特性差異。</span><span class="sxs-lookup"><span data-stu-id="02553-381">Because you've deserialized the <xref:System.DateTime> object itself, the code doesn't have to handle cultural differences in date and time formats.</span></span>  
  
<a name="persistence-04"></a>  
[!code-csharp[System.DateTime.Persistence#4](~/samples/snippets/csharp/System.DateTime/Persistence.cs#4)]
[!code-vb[System.DateTime.Persistence#4](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#4)]  

<span data-ttu-id="02553-382">前一個範例不包含時間資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-382">The previous example doesn't include time information.</span></span> <span data-ttu-id="02553-383">如果<xref:System.DateTime>值代表時間點，而且以本地時間表示，將它轉換從當地時間與 UTC 序列化藉由呼叫之前<xref:System.DateTime.ToUniversalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-383">If a <xref:System.DateTime> value represents a moment in time and is expressed as a local time, convert it from local time to UTC before serializing it by calling the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span> <span data-ttu-id="02553-384">將它還原序列化之後，它從 UTC 轉換為當地時間藉由呼叫<xref:System.DateTime.ToLocalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-384">After you deserialize it, convert it from UTC to local time by calling the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="02553-385">下列範例會使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>類別來序列化<xref:System.DateTime>位於美國的系統上的資料太平洋標準時間時區並將它位於美國的系統上還原序列化中央標準區域。</span><span class="sxs-lookup"><span data-stu-id="02553-385">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize <xref:System.DateTime> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the U.S. Central Standard zone.</span></span>  
  
<a name="persistence-05"></a>  
[!code-csharp[System.DateTime.Persistence#5](~/samples/snippets/csharp/System.DateTime/Persistence.cs#5)]
[!code-vb[System.DateTime.Persistence#5](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#5)]  

<a name="serializing-datetime-and-time-zone-data"></a>
#### <a name="serializing-datetime-and-time-zone-data"></a><span data-ttu-id="02553-386">序列化的日期時間和時區的資料</span><span class="sxs-lookup"><span data-stu-id="02553-386">Serializing DateTime and time zone data</span></span>  

<span data-ttu-id="02553-387">所有先前的範例假設<xref:System.DateTime>值會表示為當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-387">The previous examples all assumed that <xref:System.DateTime> values are expressed as local times.</span></span> <span data-ttu-id="02553-388">程式碼轉換的 UTC 和當地時間之間的值，因此它們反映在來源和目標系統上的相同時間點。</span><span class="sxs-lookup"><span data-stu-id="02553-388">The code converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.</span></span> <span data-ttu-id="02553-389"><xref:System.DateTime> 值可能也會反映在 local 以外的時區與 UTC 時間的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-389"><xref:System.DateTime> values may also reflect moments in time in a time zone other than local and UTC.</span></span> <span data-ttu-id="02553-390">因為<xref:System.DateTime>結構不是時區感知，您必須序列化兩者<xref:System.DateTime>值並<xref:System.TimeZoneInfo>代表其時區的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-390">Because the <xref:System.DateTime> structure is not time zone-aware, you have to serialize both the <xref:System.DateTime> value and the <xref:System.TimeZoneInfo> object that represents its time zone.</span></span> <span data-ttu-id="02553-391">建立同時包含其欄位的型別<xref:System.DateTime>值和其時區。</span><span class="sxs-lookup"><span data-stu-id="02553-391">Create a type whose fields include both the <xref:System.DateTime> value and its time zone.</span></span> <span data-ttu-id="02553-392">下列範例會定義`DateWithTimeZone`結構。</span><span class="sxs-lookup"><span data-stu-id="02553-392">The following example defines a `DateWithTimeZone` structure.</span></span>  
  
<a name="persistence-06"></a>  
[!code-csharp[System.DateTime.Persistence#6](~/samples/snippets/csharp/System.DateTime/DateWithTimeZone.cs#6)]
[!code-vb[System.DateTime.Persistence#6](~/samples/snippets/visualbasic/System.DateTime/DateWithTimeZone.vb#6)]  

> [!IMPORTANT]
>  <span data-ttu-id="02553-393">`DateWithTimeZone`結構用在下面兩個範例中，其序列化和還原序列化的陣列`DateWithTimeZone`物件。</span><span class="sxs-lookup"><span data-stu-id="02553-393">The `DateWithTimeZone` structure is used in the next two examples, which serialize and deserialize an array of `DateWithTimeZone` objects.</span></span> <span data-ttu-id="02553-394">您可以在檢視這篇文章中的範例整組的來源[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/)或是[C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/)從 GitHub 上的 docs 存放庫。</span><span class="sxs-lookup"><span data-stu-id="02553-394">You can view the source for the entire set of examples from this article in either [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/System.DateTime/) or [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/System.DateTime/) from the docs repository on GitHub.</span></span>
  
<span data-ttu-id="02553-395">使用`DateWithTimeZone`結構中，您接著可將日期和時間以及時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-395">By using the `DateWithTimeZone` structure, you can then persist date and time along with time zone information.</span></span> <span data-ttu-id="02553-396">下列範例會使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>類別來序列化的陣列`DateWithTimeZone`物件。</span><span class="sxs-lookup"><span data-stu-id="02553-396">The following example uses the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> class to serialize an array of `DateWithTimeZone` objects.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#7](~/samples/snippets/csharp/System.DateTime/Persistence.cs#7)]
[!code-vb[System.DateTime.Persistence#7](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#7)]  

<span data-ttu-id="02553-397">下列範例會接著呼叫<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType>將它還原序列化的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-397">The following example then calls the <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=nameWithType> method to deserialize it.</span></span>  
  
[!code-csharp[System.DateTime.Persistence#8](~/samples/snippets/csharp/System.DateTime/Persistence.cs#8)]
[!code-vb[System.DateTime.Persistence#8](~/samples/snippets/visualbasic/System.DateTime/Persistence.vb#8)]  

### <a name="datetime-vs-timespan"></a><span data-ttu-id="02553-398">DateTime vs。TimeSpan</span><span class="sxs-lookup"><span data-stu-id="02553-398">DateTime vs. TimeSpan</span></span>  

<span data-ttu-id="02553-399"><xref:System.DateTime>並<xref:System.TimeSpan>實值型別不同，<xref:System.DateTime>代表時間的瞬間而<xref:System.TimeSpan>代表時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-399">The <xref:System.DateTime> and <xref:System.TimeSpan> value types differ in that a <xref:System.DateTime> represents an instant in time whereas a <xref:System.TimeSpan> represents a time interval.</span></span> <span data-ttu-id="02553-400">您也可以減去一個執行個體<xref:System.DateTime>從另一個取得<xref:System.TimeSpan>物件，表示它們之間的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-400">You can subtract one instance of <xref:System.DateTime> from another to obtain a <xref:System.TimeSpan> object that represents the time interval between them.</span></span> <span data-ttu-id="02553-401">或者，您可以新增正<xref:System.TimeSpan>目前<xref:System.DateTime>若要取得<xref:System.DateTime>表示未來的日期值。</span><span class="sxs-lookup"><span data-stu-id="02553-401">Or you could add a positive <xref:System.TimeSpan> to the current <xref:System.DateTime> to obtain a <xref:System.DateTime> value that represents a future date.</span></span>  
  
<span data-ttu-id="02553-402">您可以加入或減去的時間間隔<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-402">You can add or subtract a time interval from a <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-403">時間間隔可以是負數或正數，並以刻度為單位，例如為單位來表示秒，或做為<xref:System.TimeSpan>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-403">Time intervals can be negative or positive, and they can be expressed in units such as ticks, seconds, or as a <xref:System.TimeSpan> object.</span></span>  

### <a name="comparing-for-equality-within-tolerance"></a><span data-ttu-id="02553-404">在容許範圍內的相等比較</span><span class="sxs-lookup"><span data-stu-id="02553-404">Comparing for equality within tolerance</span></span>

<span data-ttu-id="02553-405">用於相等比較<xref:System.DateTime>值並精確。</span><span class="sxs-lookup"><span data-stu-id="02553-405">Equality comparisons for <xref:System.DateTime> values are exact.</span></span> <span data-ttu-id="02553-406">這表示必須以相同數目的刻度，才會被視為相等表示兩個值。</span><span class="sxs-lookup"><span data-stu-id="02553-406">That means two values must be expressed as the same number of ticks to be considered equal.</span></span> <span data-ttu-id="02553-407">有效位數是通常不必要或甚至是不正確的許多應用程式。</span><span class="sxs-lookup"><span data-stu-id="02553-407">That precision is often unnecessary or even incorrect for many applications.</span></span> <span data-ttu-id="02553-408">通常，在您想要測試是否<xref:System.DateTime>物件**大致上等於**。</span><span class="sxs-lookup"><span data-stu-id="02553-408">Often, you want to test if <xref:System.DateTime> objects are **roughly equal**.</span></span> 

<span data-ttu-id="02553-409">下列範例示範如何比較大致相等<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-409">The following example demonstrates how to compare roughly equivalent <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-410">宣告它們相等時，它會接受邊界的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-410">It accepts a small margin of difference when declaring them equal.</span></span>  
  
<a name="comparison-01"></a> <span data-ttu-id="02553-411">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span><span class="sxs-lookup"><span data-stu-id="02553-411">[!code-csharp[System.DateTime.Comparisons#1](~/samples/snippets/csharp/System.DateTime/DateTimeComparisons.cs#1)]</span></span>
[!code-vb[System.DateTime.Comparisons#1](~/samples/snippets/visualbasic/System.DateTime/DateTimeComparisons.vb#1)]  

### <a name="com-interop-considerations"></a><span data-ttu-id="02553-412">COM interop 的考量</span><span class="sxs-lookup"><span data-stu-id="02553-412">COM interop considerations</span></span>  

<span data-ttu-id="02553-413">A<xref:System.DateTime>傳送到 COM 應用程式，然後傳送回到受管理的應用程式中，值稱為往返。</span><span class="sxs-lookup"><span data-stu-id="02553-413">A <xref:System.DateTime> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.</span></span> <span data-ttu-id="02553-414">不過，<xref:System.DateTime>只指定時間的值並不會如您所料反覆存取。</span><span class="sxs-lookup"><span data-stu-id="02553-414">However, a <xref:System.DateTime> value that specifies only a time does not round-trip as you might expect.</span></span>  
  
<span data-ttu-id="02553-415">如果您反覆存取只有時間，例如下午 3 點，則最後的日期和時間為自 1899 年 12 月 30 日</span><span class="sxs-lookup"><span data-stu-id="02553-415">If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.</span></span> <span data-ttu-id="02553-416">下午 3:00，而不是 年 1 月 1日日公元 0001</span><span class="sxs-lookup"><span data-stu-id="02553-416">at 3:00 P.M., instead of January, 1, 0001 C.E.</span></span> <span data-ttu-id="02553-417">在下午 3:00</span><span class="sxs-lookup"><span data-stu-id="02553-417">at 3:00 P.M.</span></span> <span data-ttu-id="02553-418">.NET Framework 和 COM 假設只有一次指定時預設的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-418">The .NET Framework and COM assume a default date when only a time is specified.</span></span> <span data-ttu-id="02553-419">不過，COM 系統會假設 1899 年 12 月 30 日西元，基底日期而.NET Framework 會假設基底日期的年 1 月 1 日公元 0001</span><span class="sxs-lookup"><span data-stu-id="02553-419">However, the COM system assumes a base date of December 30, 1899 C.E., while the .NET Framework assumes a base date of January, 1, 0001 C.E.</span></span>  
  
<span data-ttu-id="02553-420">當只有一次從.NET Framework 傳遞至 COM 時，特殊的處理會執行，將時間轉換為 COM 所使用的格式</span><span class="sxs-lookup"><span data-stu-id="02553-420">When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.</span></span> <span data-ttu-id="02553-421">當只有一次從 COM 傳遞至.NET Framework 時，合法的日期和時間，或自 1899 年 12 月 30 日之前會損毀，因為不執行任何特殊處理。</span><span class="sxs-lookup"><span data-stu-id="02553-421">When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.</span></span> <span data-ttu-id="02553-422">如果日期從 COM 開始其往返，.NET Framework 和 COM 會保留日期。</span><span class="sxs-lookup"><span data-stu-id="02553-422">If a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</span></span>  
  
<span data-ttu-id="02553-423">.NET Framework 和 COM 的行為表示如果您的應用程式的來回行程<xref:System.DateTime>，只指定時間，您的應用程式必須請記得修改，或略過錯誤的日期，從最後<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-423">The behavior of the .NET Framework and COM means that if your application round-trips a <xref:System.DateTime> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <xref:System.DateTime> object.</span></span>  
     
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="02553-424">此型別的所有成員都是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="02553-424">All members of this type are thread safe.</span></span> <span data-ttu-id="02553-425">若要修改執行個體狀態會顯示的成員實際上會傳回新的值進行初始化的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="02553-425">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="02553-426">為與任何其他型別，讀取和寫入共用的變數，其中包含這個型別的執行個體必須受到鎖定，以確保執行緒安全性。</span><span class="sxs-lookup"><span data-stu-id="02553-426">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.DateTimeOffset" />
    <altmember cref="T:System.TimeSpan" />
    <altmember cref="T:System.Globalization.Calendar" />
    <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
    <altmember cref="T:System.TimeZoneInfo" />
    <related type="Article" href="~/docs/standard/datetime/choosing-between-datetime.md"><span data-ttu-id="02553-427">在 DateTime、DateTimeOffset、 TimeSpan 和  TimeZoneInfo 之間選擇</span><span class="sxs-lookup"><span data-stu-id="02553-427">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</span></span></related>
    <related type="Article" href="~/docs/standard/datetime/working-with-calendars.md"><span data-ttu-id="02553-428">使用行事曆</span><span class="sxs-lookup"><span data-stu-id="02553-428">Working with Calendars</span></span></related>
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="02553-429">範例：.NET Framework 4 格式化公用程式</span><span class="sxs-lookup"><span data-stu-id="02553-429">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-430">初始化 <see cref="T:System.DateTime" /> 結構的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="02553-430">Initializes a new instance of the <see cref="T:System.DateTime" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 -&gt; DateTime" Usage="new System.DateTime ticks" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="02553-431">以 0001 年 1 月 1 日 00:00:00.000 (西曆) 以來經過的 100 奈秒間隔數表示的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-431">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <summary><span data-ttu-id="02553-432">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為刻度的指定數目。</span><span class="sxs-lookup"><span data-stu-id="02553-432">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-433"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="02553-433">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="02553-434">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-434">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-435">下列範例示範的其中一個<xref:System.DateTime>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-435">The following example demonstrates one of the <xref:System.DateTime> constructors.</span></span>  
  
 [!code-cpp[datetime.ctor_Int64#1](~/samples/snippets/cpp/VS_Snippets_CLR/datetime.ctor_Int64/CPP/ticks.cpp#1)]
 [!code-csharp[datetime.ctor_Int64#1](~/samples/snippets/csharp/VS_Snippets_CLR/datetime.ctor_Int64/CS/ticks.cs#1)]
 [!code-vb[datetime.ctor_Int64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/datetime.ctor_Int64/VB/ticks.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-436"><paramref name="ticks" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-436"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (long ticks, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 ticks, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int64,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ticks As Long, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(long ticks, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int64 * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (ticks, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ticks" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="ticks"><span data-ttu-id="02553-437">以 0001 年 1 月 1 日 00:00:00.000 (西曆) 以來經過的 100 奈秒間隔數表示的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-437">A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</span></span></param>
        <param name="kind"><span data-ttu-id="02553-438">指出 <paramref name="ticks" /> 是指定本地時間或國際標準時間 (UTC)，或是兩者皆非的其中一個列舉值。</span><span class="sxs-lookup"><span data-stu-id="02553-438">One of the enumeration values that indicates whether <paramref name="ticks" /> specifies a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="02553-439">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定的刻度數以及國際標準時間 (UTC) 或本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-439">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-440">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-440">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-441"><paramref name="ticks" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-441"><paramref name="ticks" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-442"><paramref name="kind" /> 不是其中一個 <see cref="T:System.DateTimeKind" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-442"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-443">年份 (1 到 9999)。</span><span class="sxs-lookup"><span data-stu-id="02553-443">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="02553-444">月份 (1 到 12)。</span><span class="sxs-lookup"><span data-stu-id="02553-444">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="02553-445">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-445">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <summary><span data-ttu-id="02553-446">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定的年、月和日。</span><span class="sxs-lookup"><span data-stu-id="02553-446">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-447">這個建構函式解譯`year`， `month`，和`day`為年、 月和西曆中的一天。</span><span class="sxs-lookup"><span data-stu-id="02553-447">This constructor interprets `year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="02553-448">若要具現化<xref:System.DateTime>使用另一個日曆，呼叫中的年、 月和日值<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-448">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="02553-449">為產生的一天時間<xref:System.DateTime>為午夜 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="02553-449">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="02553-450"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-450">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-451">下列範例會使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29>建構函式來具現化<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-451">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-452">此範例也會說明這個多載會建立<xref:System.DateTime>其時間元件會等於午夜的值 (或 0:00)。</span><span class="sxs-lookup"><span data-stu-id="02553-452">The example also illustrates that this overload creates a <xref:System.DateTime> value whose time component equals midnight (or 0:00).</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#1)]
 [!code-vb[System.DateTime.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-453"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-453"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="02553-454">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-454">-or-</span></span> 
 <span data-ttu-id="02553-455"><paramref name="month" /> 小於 1 或大於 12。</span><span class="sxs-lookup"><span data-stu-id="02553-455"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="02553-456">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-456">-or-</span></span> 
 <span data-ttu-id="02553-457"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-457"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-458">年 (1 到 <paramref name="calendar" /> 中的年數)。</span><span class="sxs-lookup"><span data-stu-id="02553-458">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="02553-459">月 (1 到 <paramref name="calendar" /> 中的月數)。</span><span class="sxs-lookup"><span data-stu-id="02553-459">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="02553-460">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-460">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="calendar"><span data-ttu-id="02553-461">用以解譯 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-461">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="02553-462">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定行事曆的指定年、月和日。</span><span class="sxs-lookup"><span data-stu-id="02553-462">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, and day for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-463">為產生的一天時間<xref:System.DateTime>為午夜 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="02553-463">The time of day for the resulting <xref:System.DateTime> is midnight (00:00:00).</span></span> <span data-ttu-id="02553-464"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="02553-464">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="02553-465">允許的值，如`year`， `month`，並`day`取決於`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-465">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="02553-466">如果指定的日期和時間無法使用來表示，會擲回例外狀況`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-466">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="02553-467"><xref:System.Globalization>命名空間提供數個行事曆，包括<xref:System.Globalization.GregorianCalendar>和<xref:System.Globalization.JulianCalendar>。</span><span class="sxs-lookup"><span data-stu-id="02553-467">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-468">下列範例會呼叫<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>建構函式兩次來具現化兩個<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-468">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-469">第一次呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.PersianCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-469">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="02553-470">因為波斯曆無法指定為文化特性的預設月曆，顯示日期與波斯曆中中需要個別呼叫其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>， <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>，和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-470">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="02553-471">第二個建構函式呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.HijriCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-471">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="02553-472">此範例會變更目前的文化特性為阿拉伯文 （敘利亞），並目前文化特性的預設曆法變更為回曆。</span><span class="sxs-lookup"><span data-stu-id="02553-472">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="02553-473">因為阿拉伯回曆是目前的文化特性預設月曆，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用它來設定日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-473">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="02553-474">還原先前的目前文化特性 （這在此情況下是英文 （美國）） 時，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用目前文化特性的預設西曆日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-474">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample2.cs#2)]
 [!code-vb[System.DateTime.Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-475"><paramref name="calendar" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-475"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-476"><paramref name="year" /> 不在 <paramref name="calendar" /> 支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="02553-476"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-477">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-477">-or-</span></span> 
 <span data-ttu-id="02553-478"><paramref name="month" /> 小於 1 或大於 <paramref name="calendar" /> 中的月數。</span><span class="sxs-lookup"><span data-stu-id="02553-478"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-479">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-479">-or-</span></span> 
 <span data-ttu-id="02553-480"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-480"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-481">年份 (1 到 9999)。</span><span class="sxs-lookup"><span data-stu-id="02553-481">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="02553-482">月份 (1 到 12)。</span><span class="sxs-lookup"><span data-stu-id="02553-482">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="02553-483">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-483">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-484">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-484">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-485">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-485">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-486">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-486">The seconds (0 through 59).</span></span></param>
        <summary><span data-ttu-id="02553-487">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定的年、月、日、時、分和秒。</span><span class="sxs-lookup"><span data-stu-id="02553-487">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-488"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="02553-488">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="02553-489">這個建構函式解譯`year`， `month`，和`day`為年、 月和西曆中的一天。</span><span class="sxs-lookup"><span data-stu-id="02553-489">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="02553-490">若要具現化<xref:System.DateTime>使用另一個日曆，呼叫中的年、 月和日值<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-490">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="02553-491">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-491">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-492">下列範例會使用<xref:System.DateTime.%23ctor%2A>建構函式來具現化<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-492">The following example uses the <xref:System.DateTime.%23ctor%2A> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#3)]
 [!code-vb[System.DateTime.Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-493"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-493"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="02553-494">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-494">-or-</span></span> 
 <span data-ttu-id="02553-495"><paramref name="month" /> 小於 1 或大於 12。</span><span class="sxs-lookup"><span data-stu-id="02553-495"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="02553-496">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-496">-or-</span></span> 
 <span data-ttu-id="02553-497"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-497"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-498">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-498">-or-</span></span> 
 <span data-ttu-id="02553-499"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-499"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="02553-500">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-500">-or-</span></span> 
 <span data-ttu-id="02553-501"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-501"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-502">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-502">-or-</span></span> 
 <span data-ttu-id="02553-503"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-503"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-504">年份 (1 到 9999)。</span><span class="sxs-lookup"><span data-stu-id="02553-504">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="02553-505">月份 (1 到 12)。</span><span class="sxs-lookup"><span data-stu-id="02553-505">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="02553-506">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-506">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-507">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-507">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-508">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-508">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-509">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-509">The seconds (0 through 59).</span></span></param>
        <param name="kind"><span data-ttu-id="02553-510">指出 <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" /> 和 <paramref name="second" /> 是指定本地時間或國際標準時間 (UTC)，或是兩者皆非的其中一個列舉值。</span><span class="sxs-lookup"><span data-stu-id="02553-510">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" /> and <paramref name="second" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="02553-511">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定年、月、日、時、分、秒以及國際標準時間 (UTC) 或本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-511">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-512">這個建構函式解譯`year`， `month`，和`day`為年、 月和西曆中的一天。</span><span class="sxs-lookup"><span data-stu-id="02553-512">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="02553-513">若要具現化<xref:System.DateTime>使用另一個日曆，呼叫中的年、 月和日值<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-513">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="02553-514">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-514">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-515">下列範例會使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29>建構函式來具現化<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-515">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#7)]
 [!code-vb[System.DateTime.Constructor#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-516"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-516"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="02553-517">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-517">-or-</span></span> 
 <span data-ttu-id="02553-518"><paramref name="month" /> 小於 1 或大於 12。</span><span class="sxs-lookup"><span data-stu-id="02553-518"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="02553-519">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-519">-or-</span></span> 
 <span data-ttu-id="02553-520"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-520"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-521">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-521">-or-</span></span> 
 <span data-ttu-id="02553-522"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-522"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="02553-523">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-523">-or-</span></span> 
 <span data-ttu-id="02553-524"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-524"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-525">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-525">-or-</span></span> 
 <span data-ttu-id="02553-526"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-526"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-527"><paramref name="kind" /> 不是其中一個 <see cref="T:System.DateTimeKind" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-527"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-528">年 (1 到 <paramref name="calendar" /> 中的年數)。</span><span class="sxs-lookup"><span data-stu-id="02553-528">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="02553-529">月 (1 到 <paramref name="calendar" /> 中的月數)。</span><span class="sxs-lookup"><span data-stu-id="02553-529">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="02553-530">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-530">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-531">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-531">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-532">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-532">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-533">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-533">The seconds (0 through 59).</span></span></param>
        <param name="calendar"><span data-ttu-id="02553-534">用以解譯 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-534">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="02553-535">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定行事曆的指定年、月、日、時、分和秒。</span><span class="sxs-lookup"><span data-stu-id="02553-535">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-536"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="02553-536">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="02553-537">允許的值，如`year`， `month`，並`day`取決於`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-537">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="02553-538">如果指定的日期和時間無法使用來表示，會擲回例外狀況`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-538">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="02553-539"><xref:System.Globalization>命名空間提供數個行事曆，包括<xref:System.Globalization.GregorianCalendar>和<xref:System.Globalization.JulianCalendar>。</span><span class="sxs-lookup"><span data-stu-id="02553-539">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-540">下列範例會呼叫<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>建構函式兩次來具現化兩個<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-540">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-541">第一次呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.PersianCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-541">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="02553-542">因為波斯曆無法指定為文化特性的預設月曆，顯示日期與波斯曆中中需要個別呼叫其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>， <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>，和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-542">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="02553-543">第二個建構函式呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.HijriCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-543">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="02553-544">此範例會變更目前的文化特性為阿拉伯文 （敘利亞），並目前文化特性的預設曆法變更為回曆。</span><span class="sxs-lookup"><span data-stu-id="02553-544">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="02553-545">因為阿拉伯回曆是目前的文化特性預設月曆，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用它來設定日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-545">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="02553-546">還原先前的目前文化特性 （這在此情況下是英文 （美國）） 時，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用目前文化特性的預設西曆日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-546">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample4.cs#4)]
 [!code-vb[System.DateTime.Constructor#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-547"><paramref name="calendar" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-547"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-548"><paramref name="year" /> 不在 <paramref name="calendar" /> 支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="02553-548"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-549">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-549">-or-</span></span> 
 <span data-ttu-id="02553-550"><paramref name="month" /> 小於 1 或大於 <paramref name="calendar" /> 中的月數。</span><span class="sxs-lookup"><span data-stu-id="02553-550"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-551">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-551">-or-</span></span> 
 <span data-ttu-id="02553-552"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-552"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-553">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-553">-or-</span></span> 
 <span data-ttu-id="02553-554"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-554"><paramref name="hour" /> is less than 0 or greater than 23</span></span> 
<span data-ttu-id="02553-555">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-555">-or-</span></span> 
 <span data-ttu-id="02553-556"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-556"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-557">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-557">-or-</span></span> 
 <span data-ttu-id="02553-558"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-558"><paramref name="second" /> is less than 0 or greater than 59.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
        <Parameter Name="day" Type="System.Int32" />
        <Parameter Name="hour" Type="System.Int32" />
        <Parameter Name="minute" Type="System.Int32" />
        <Parameter Name="second" Type="System.Int32" />
        <Parameter Name="millisecond" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-559">年份 (1 到 9999)。</span><span class="sxs-lookup"><span data-stu-id="02553-559">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="02553-560">月份 (1 到 12)。</span><span class="sxs-lookup"><span data-stu-id="02553-560">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="02553-561">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-561">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-562">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-562">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-563">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-563">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-564">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-564">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="02553-565">毫秒 (0 到 999)。</span><span class="sxs-lookup"><span data-stu-id="02553-565">The milliseconds (0 through 999).</span></span></param>
        <summary><span data-ttu-id="02553-566">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定的年、月、日、時、分、秒和毫秒。</span><span class="sxs-lookup"><span data-stu-id="02553-566">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-567">這個建構函式解譯`year`， `month`，和`day`為年、 月和西曆中的一天。</span><span class="sxs-lookup"><span data-stu-id="02553-567">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="02553-568">若要具現化<xref:System.DateTime>使用另一個日曆，呼叫中的年、 月和日值<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-568">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor.</span></span>  
  
 <span data-ttu-id="02553-569"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="02553-569">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="02553-570">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-570">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-571">下列範例會使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>建構函式來具現化<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-571">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#5)]
 [!code-vb[System.DateTime.Constructor#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-572"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-572"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="02553-573">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-573">-or-</span></span> 
 <span data-ttu-id="02553-574"><paramref name="month" /> 小於 1 或大於 12。</span><span class="sxs-lookup"><span data-stu-id="02553-574"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="02553-575">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-575">-or-</span></span> 
 <span data-ttu-id="02553-576"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-576"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-577">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-577">-or-</span></span> 
 <span data-ttu-id="02553-578"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-578"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="02553-579">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-579">-or-</span></span> 
 <span data-ttu-id="02553-580"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-580"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-581">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-581">-or-</span></span> 
 <span data-ttu-id="02553-582"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-582"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-583">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-583">-or-</span></span> 
 <span data-ttu-id="02553-584"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="02553-584"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (year As Integer, month As Integer, day As Integer, hour As Integer, minute As Integer, second As Integer, millisecond As Integer, kind As DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-585">年份 (1 到 9999)。</span><span class="sxs-lookup"><span data-stu-id="02553-585">The year (1 through 9999).</span></span></param>
        <param name="month"><span data-ttu-id="02553-586">月份 (1 到 12)。</span><span class="sxs-lookup"><span data-stu-id="02553-586">The month (1 through 12).</span></span></param>
        <param name="day"><span data-ttu-id="02553-587">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-587">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-588">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-588">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-589">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-589">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-590">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-590">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="02553-591">毫秒 (0 到 999)。</span><span class="sxs-lookup"><span data-stu-id="02553-591">The milliseconds (0 through 999).</span></span></param>
        <param name="kind"><span data-ttu-id="02553-592">指出 <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" /> 和 <paramref name="millisecond" /> 是指定本地時間或國際標準時間 (UTC)，或是兩者皆非的其中一個列舉值。</span><span class="sxs-lookup"><span data-stu-id="02553-592">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="02553-593">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定年、月、日、時、分、秒、毫秒以及國際標準時間 (UTC) 或本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-593">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-594">這個建構函式解譯`year`， `month`，和`day`為年、 月和西曆中的一天。</span><span class="sxs-lookup"><span data-stu-id="02553-594">This constructor interprets`year`, `month`, and `day` as a year, month, and day in the Gregorian calendar.</span></span> <span data-ttu-id="02553-595">若要具現化<xref:System.DateTime>使用另一個日曆，呼叫中的年、 月和日值<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-595">To instantiate a <xref:System.DateTime> value by using the year, month, and day in another calendar, call the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor.</span></span>  
  
 <span data-ttu-id="02553-596">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-596">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-597">下列範例會使用<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29>建構函式來具現化<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-597">The following example uses the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.DateTimeKind%29> constructor to instantiate a <xref:System.DateTime> value.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample1.cs#8)]
 [!code-vb[System.DateTime.Constructor#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-598"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-598"><paramref name="year" /> is less than 1 or greater than 9999.</span></span>  
  
<span data-ttu-id="02553-599">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-599">-or-</span></span> 
 <span data-ttu-id="02553-600"><paramref name="month" /> 小於 1 或大於 12。</span><span class="sxs-lookup"><span data-stu-id="02553-600"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="02553-601">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-601">-or-</span></span> 
 <span data-ttu-id="02553-602"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-602"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-603">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-603">-or-</span></span> 
 <span data-ttu-id="02553-604"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-604"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="02553-605">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-605">-or-</span></span> 
 <span data-ttu-id="02553-606"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-606"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-607">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-607">-or-</span></span> 
 <span data-ttu-id="02553-608"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-608"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-609">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-609">-or-</span></span> 
 <span data-ttu-id="02553-610"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="02553-610"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-611"><paramref name="kind" /> 不是其中一個 <see cref="T:System.DateTimeKind" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-611"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-612">年 (1 到 <paramref name="calendar" /> 中的年數)。</span><span class="sxs-lookup"><span data-stu-id="02553-612">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="02553-613">月 (1 到 <paramref name="calendar" /> 中的月數)。</span><span class="sxs-lookup"><span data-stu-id="02553-613">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="02553-614">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-614">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-615">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-615">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-616">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-616">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-617">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-617">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="02553-618">毫秒 (0 到 999)。</span><span class="sxs-lookup"><span data-stu-id="02553-618">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="02553-619">用以解譯 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-619">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <summary><span data-ttu-id="02553-620">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定行事曆的指定年、月、日、時、分、秒和毫秒。</span><span class="sxs-lookup"><span data-stu-id="02553-620">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-621"><xref:System.DateTime.Kind%2A> 屬性會初始化為 <xref:System.DateTimeKind.Unspecified>。</span><span class="sxs-lookup"><span data-stu-id="02553-621">The <xref:System.DateTime.Kind%2A> property is initialized to <xref:System.DateTimeKind.Unspecified>.</span></span>  
  
 <span data-ttu-id="02553-622">允許的值，如`year`， `month`，並`day`取決於`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-622">The allowable values for `year`, `month`, and `day` depend on `calendar`.</span></span> <span data-ttu-id="02553-623">如果指定的日期和時間無法使用來表示，會擲回例外狀況`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-623">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="02553-624">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-624">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="02553-625"><xref:System.Globalization>命名空間提供數個行事曆，包括<xref:System.Globalization.GregorianCalendar>和<xref:System.Globalization.JulianCalendar>。</span><span class="sxs-lookup"><span data-stu-id="02553-625">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-626">下列範例會呼叫<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29>建構函式兩次來具現化兩個<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-626">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-627">第一次呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.PersianCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-627">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="02553-628">因為波斯曆無法指定為文化特性的預設月曆，顯示日期與波斯曆中中需要個別呼叫其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>， <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>，和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-628">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="02553-629">第二個建構函式呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.HijriCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-629">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="02553-630">此範例會變更目前的文化特性為阿拉伯文 （敘利亞），並目前文化特性的預設曆法變更為回曆。</span><span class="sxs-lookup"><span data-stu-id="02553-630">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="02553-631">因為阿拉伯回曆是目前的文化特性預設月曆，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用它來設定日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-631">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="02553-632">還原先前的目前文化特性 （這在此情況下是英文 （美國）） 時，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用目前文化特性的預設西曆日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-632">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample6.cs#6)]
 [!code-vb[System.DateTime.Constructor#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-633"><paramref name="calendar" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-633"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-634"><paramref name="year" /> 不在 <paramref name="calendar" /> 支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="02553-634"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-635">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-635">-or-</span></span> 
 <span data-ttu-id="02553-636"><paramref name="month" /> 小於 1 或大於 <paramref name="calendar" /> 中的月數。</span><span class="sxs-lookup"><span data-stu-id="02553-636"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-637">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-637">-or-</span></span> 
 <span data-ttu-id="02553-638"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-638"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-639">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-639">-or-</span></span> 
 <span data-ttu-id="02553-640"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-640"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="02553-641">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-641">-or-</span></span> 
 <span data-ttu-id="02553-642"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-642"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-643">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-643">-or-</span></span> 
 <span data-ttu-id="02553-644"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-644"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-645">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-645">-or-</span></span> 
 <span data-ttu-id="02553-646"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="02553-646"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 year, int32 month, int32 day, int32 hour, int32 minute, int32 second, int32 millisecond, class System.Globalization.Calendar calendar, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, System::Globalization::Calendar ^ calendar, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="new DateTime : int * int * int * int * int * int * int * System.Globalization.Calendar * DateTimeKind -&gt; DateTime" Usage="new System.DateTime (year, month, day, hour, minute, second, millisecond, calendar, kind)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="month" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="day" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hour" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="minute" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="second" Type="System.Int32" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="millisecond" Type="System.Int32" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="calendar" Type="System.Globalization.Calendar" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="8" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-647">年 (1 到 <paramref name="calendar" /> 中的年數)。</span><span class="sxs-lookup"><span data-stu-id="02553-647">The year (1 through the number of years in <paramref name="calendar" />).</span></span></param>
        <param name="month"><span data-ttu-id="02553-648">月 (1 到 <paramref name="calendar" /> 中的月數)。</span><span class="sxs-lookup"><span data-stu-id="02553-648">The month (1 through the number of months in <paramref name="calendar" />).</span></span></param>
        <param name="day"><span data-ttu-id="02553-649">日 (1 到 <paramref name="month" /> 中的天數)。</span><span class="sxs-lookup"><span data-stu-id="02553-649">The day (1 through the number of days in <paramref name="month" />).</span></span></param>
        <param name="hour"><span data-ttu-id="02553-650">小時 (0 到 23)。</span><span class="sxs-lookup"><span data-stu-id="02553-650">The hours (0 through 23).</span></span></param>
        <param name="minute"><span data-ttu-id="02553-651">分鐘 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-651">The minutes (0 through 59).</span></span></param>
        <param name="second"><span data-ttu-id="02553-652">秒數 (0 到 59)。</span><span class="sxs-lookup"><span data-stu-id="02553-652">The seconds (0 through 59).</span></span></param>
        <param name="millisecond"><span data-ttu-id="02553-653">毫秒 (0 到 999)。</span><span class="sxs-lookup"><span data-stu-id="02553-653">The milliseconds (0 through 999).</span></span></param>
        <param name="calendar"><span data-ttu-id="02553-654">用以解譯 <paramref name="year" />、<paramref name="month" /> 和 <paramref name="day" /> 的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-654">The calendar that is used to interpret <paramref name="year" />, <paramref name="month" />, and <paramref name="day" />.</span></span></param>
        <param name="kind"><span data-ttu-id="02553-655">指出 <paramref name="year" />、<paramref name="month" />、<paramref name="day" />、<paramref name="hour" />、<paramref name="minute" />、<paramref name="second" /> 和 <paramref name="millisecond" /> 是指定本地時間或國際標準時間 (UTC)，或是兩者皆非的其中一個列舉值。</span><span class="sxs-lookup"><span data-stu-id="02553-655">One of the enumeration values that indicates whether <paramref name="year" />, <paramref name="month" />, <paramref name="day" />, <paramref name="hour" />, <paramref name="minute" />, <paramref name="second" />, and <paramref name="millisecond" /> specify a local time, Coordinated Universal Time (UTC), or neither.</span></span></param>
        <summary><span data-ttu-id="02553-656">將 <see cref="T:System.DateTime" /> 結構的新執行個體初始化為指定行事曆的指定年、月、日、時、分、秒、毫秒以及國際標準時間 (UTC) 或本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-656">Initializes a new instance of the <see cref="T:System.DateTime" /> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-657">允許的值，如`year`， `month`，並`day`參數取決於`calendar`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-657">The allowable values for `year`, `month`, and `day` parameters depend on the `calendar` parameter.</span></span> <span data-ttu-id="02553-658">如果指定的日期和時間無法使用來表示，會擲回例外狀況`calendar`。</span><span class="sxs-lookup"><span data-stu-id="02553-658">An exception is thrown if the specified date and time cannot be expressed using `calendar`.</span></span>  
  
 <span data-ttu-id="02553-659">中的可攜性的日期和時間資料或有限的度的時區感知是重要的應用程式，您可以使用對應<xref:System.DateTimeOffset>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-659">For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <xref:System.DateTimeOffset> constructor.</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

 <span data-ttu-id="02553-660"><xref:System.Globalization>命名空間提供數個行事曆，包括<xref:System.Globalization.GregorianCalendar>和<xref:System.Globalization.JulianCalendar>。</span><span class="sxs-lookup"><span data-stu-id="02553-660">The <xref:System.Globalization> namespace provides several calendars including <xref:System.Globalization.GregorianCalendar> and <xref:System.Globalization.JulianCalendar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-661">下列範例會呼叫<xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29>建構函式兩次來具現化兩個<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-661">The following example calls the <xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29> constructor twice to instantiate two <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-662">第一次呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.PersianCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-662">The first call instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.PersianCalendar> object.</span></span> <span data-ttu-id="02553-663">因為波斯曆無法指定為文化特性的預設月曆，顯示日期與波斯曆中中需要個別呼叫其<xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>， <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>，和<xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-663">Because the Persian calendar cannot be designated as the default calendar for a culture, displaying a date in the Persian calendar requires individual calls to its <xref:System.Globalization.PersianCalendar.GetMonth%2A?displayProperty=nameWithType>, <xref:System.Globalization.PersianCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>, and <xref:System.Globalization.PersianCalendar.GetYear%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="02553-664">第二個建構函式呼叫會具現化<xref:System.DateTime>值使用<xref:System.Globalization.HijriCalendar>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-664">The second call to the constructor instantiates a <xref:System.DateTime> value by using a <xref:System.Globalization.HijriCalendar> object.</span></span> <span data-ttu-id="02553-665">此範例會變更目前的文化特性為阿拉伯文 （敘利亞），並目前文化特性的預設曆法變更為回曆。</span><span class="sxs-lookup"><span data-stu-id="02553-665">The example changes the current culture to Arabic (Syria) and changes the current culture's default calendar to the Hijri calendar.</span></span> <span data-ttu-id="02553-666">因為阿拉伯回曆是目前的文化特性預設月曆，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用它來設定日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-666">Because Hijri is the current culture's default calendar, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses it to format the date.</span></span> <span data-ttu-id="02553-667">還原先前的目前文化特性 （這在此情況下是英文 （美國）） 時，<xref:System.Console.WriteLine%2A?displayProperty=nameWithType>方法會使用目前文化特性的預設西曆日期格式。</span><span class="sxs-lookup"><span data-stu-id="02553-667">When the previous current culture (which is English (United States) in this case) is restored, the <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> method uses the current culture's default Gregorian calendar to format the date.</span></span>  
  
 [!code-csharp[System.DateTime.Constructor#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.constructor/cs/ctorexample9.cs#9)]
 [!code-vb[System.DateTime.Constructor#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.constructor/vb/ctorexample9.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-668"><paramref name="calendar" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-668"><paramref name="calendar" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-669"><paramref name="year" /> 不在 <paramref name="calendar" /> 支援的範圍內。</span><span class="sxs-lookup"><span data-stu-id="02553-669"><paramref name="year" /> is not in the range supported by <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-670">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-670">-or-</span></span> 
 <span data-ttu-id="02553-671"><paramref name="month" /> 小於 1 或大於 <paramref name="calendar" /> 中的月數。</span><span class="sxs-lookup"><span data-stu-id="02553-671"><paramref name="month" /> is less than 1 or greater than the number of months in <paramref name="calendar" />.</span></span>  
  
<span data-ttu-id="02553-672">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-672">-or-</span></span> 
 <span data-ttu-id="02553-673"><paramref name="day" /> 小於 1 或大於 <paramref name="month" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-673"><paramref name="day" /> is less than 1 or greater than the number of days in <paramref name="month" />.</span></span>  
  
<span data-ttu-id="02553-674">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-674">-or-</span></span> 
 <span data-ttu-id="02553-675"><paramref name="hour" /> 小於 0 或大於 23。</span><span class="sxs-lookup"><span data-stu-id="02553-675"><paramref name="hour" /> is less than 0 or greater than 23.</span></span>  
  
<span data-ttu-id="02553-676">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-676">-or-</span></span> 
 <span data-ttu-id="02553-677"><paramref name="minute" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-677"><paramref name="minute" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-678">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-678">-or-</span></span> 
 <span data-ttu-id="02553-679"><paramref name="second" /> 小於 0 或大於 59。</span><span class="sxs-lookup"><span data-stu-id="02553-679"><paramref name="second" /> is less than 0 or greater than 59.</span></span>  
  
<span data-ttu-id="02553-680">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-680">-or-</span></span> 
 <span data-ttu-id="02553-681"><paramref name="millisecond" /> 小於 0 或大於 999。</span><span class="sxs-lookup"><span data-stu-id="02553-681"><paramref name="millisecond" /> is less than 0 or greater than 999.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-682"><paramref name="kind" /> 不是其中一個 <see cref="T:System.DateTimeKind" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-682"><paramref name="kind" /> is not one of the <see cref="T:System.DateTimeKind" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public DateTime Add (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Add(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Add(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Add(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Add : TimeSpan -&gt; DateTime" Usage="dateTime.Add value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-683">正數或負數時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-683">A positive or negative time interval.</span></span></param>
        <summary><span data-ttu-id="02553-684">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定之 <see cref="T:System.TimeSpan" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="02553-684">Returns a new <see cref="T:System.DateTime" /> that adds the value of the specified <see cref="T:System.TimeSpan" /> to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-685">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示時間間隔的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-685">An object whose value is the sum of the date and time represented by this instance and the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-686">您可以使用<xref:System.DateTime.Add%2A>方法來加入單一作業中的一種以上的時間間隔 （天、 小時、 分鐘、 秒或毫秒為單位）。</span><span class="sxs-lookup"><span data-stu-id="02553-686">You can use the <xref:System.DateTime.Add%2A> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</span></span> <span data-ttu-id="02553-687">這個方法的行為完全相同的加法運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-687">This method's behavior is identical to that of the addition operator.</span></span> <span data-ttu-id="02553-688"><xref:System.DateTime>結構也支援特殊的新增方法 (例如<xref:System.DateTime.AddDays%2A>， <xref:System.DateTime.AddHours%2A>，和<xref:System.DateTime.AddMinutes%2A>) 的每個時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-688">The <xref:System.DateTime> structure also supports specialized addition methods (such as <xref:System.DateTime.AddDays%2A>, <xref:System.DateTime.AddHours%2A>, and <xref:System.DateTime.AddMinutes%2A>) for each time interval.</span></span>  
  
 <span data-ttu-id="02553-689"><xref:System.DateTime.Add%2A>方法會採用帳戶潤年和月，當執行日期算術中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-689">The <xref:System.DateTime.Add%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
 <span data-ttu-id="02553-690">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-690">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-691">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-691">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="02553-692"><xref:System.DateTime.Kind%2A>屬性的新<xref:System.DateTime>執行個體是目前的執行個體相同。</span><span class="sxs-lookup"><span data-stu-id="02553-692">The <xref:System.DateTime.Kind%2A> property of the new <xref:System.DateTime> instance is the same as that of the current instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-693">下列範例示範<xref:System.DateTime.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-693">The following example demonstrates the <xref:System.DateTime.Add%2A> method.</span></span> <span data-ttu-id="02553-694">它會計算為 36 的天 （864 小時），從目前星期幾。</span><span class="sxs-lookup"><span data-stu-id="02553-694">It calculates the day of the week that is 36 days (864 hours) from this moment.</span></span>  
  
 [!code-cpp[DateTime.Add#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Add/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Add/CS/class1.cs#1)]
 [!code-vb[DateTime.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Add/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-695">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-695">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="M:System.TimeSpan.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-696">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-696">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public DateTime AddDays (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddDays(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddDays(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDays (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddDays(double value);" />
      <MemberSignature Language="F#" Value="member this.AddDays : double -&gt; DateTime" Usage="dateTime.AddDays value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-697">整數和小數的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-697">A number of whole and fractional days.</span></span> <span data-ttu-id="02553-698"><paramref name="value" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-698">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="02553-699">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-699">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of days to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-700">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示天數的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-700">An object whose value is the sum of the date and time represented by this instance and the number of days represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-701">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-701">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-702">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-702">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-703">小數點後的部分`value`是一天的分數部分。</span><span class="sxs-lookup"><span data-stu-id="02553-703">The fractional part of `value` is the fractional part of a day.</span></span> <span data-ttu-id="02553-704">比方說，4.5 就相當於 4 天、 12 小時，0 分 0 秒，0 毫秒，以及 0 刻度。</span><span class="sxs-lookup"><span data-stu-id="02553-704">For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="02553-705">`value`參數四捨五入至最接近的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-705">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="02553-706"><xref:System.DateTime.AddDays%2A>方法會採用帳戶潤年和月，當執行日期算術中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-706">The <xref:System.DateTime.AddDays%2A> method takes into account leap years and the number of days in a month when performing date arithmetic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-707">下列範例會使用<xref:System.DateTime.AddDays%2A>方法來判斷星期幾 36 目前的日期後的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-707">The following example uses the <xref:System.DateTime.AddDays%2A> method to determine the day of the week 36 days after the current date.</span></span>  
  
 [!code-cpp[DateTime.AddDays#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.AddDays/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.AddDays#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.AddDays/CS/class1.cs#1)]
 [!code-vb[DateTime.AddDays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.AddDays/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-708">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-708">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public DateTime AddHours (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddHours(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddHours(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddHours (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddHours(double value);" />
      <MemberSignature Language="F#" Value="member this.AddHours : double -&gt; DateTime" Usage="dateTime.AddHours value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-709">整數和小數的時數。</span><span class="sxs-lookup"><span data-stu-id="02553-709">A number of whole and fractional hours.</span></span> <span data-ttu-id="02553-710"><paramref name="value" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-710">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="02553-711">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的時數。</span><span class="sxs-lookup"><span data-stu-id="02553-711">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of hours to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-712">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示時數的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-712">An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-713">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-713">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-714">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-714">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span> <span data-ttu-id="02553-715"><xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>物件是屬於相同`value`。</span><span class="sxs-lookup"><span data-stu-id="02553-715">The <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is the same as that of `value`.</span></span>  
  
 <span data-ttu-id="02553-716">小數點後的部分`value`是一小時的小數部分。</span><span class="sxs-lookup"><span data-stu-id="02553-716">The fractional part of `value` is the fractional part of an hour.</span></span> <span data-ttu-id="02553-717">比方說，4.5 就相當於 4 小時 30 分鐘，0 秒，0 毫秒，以及 0 刻度。</span><span class="sxs-lookup"><span data-stu-id="02553-717">For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="02553-718">`value`參數四捨五入至最接近的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-718">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
 <span data-ttu-id="02553-719">將小於一小時的時間間隔轉換成一小部分可能會涉及遺失有效位數，如果結果為非終止重複十進位數。</span><span class="sxs-lookup"><span data-stu-id="02553-719">Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.</span></span> <span data-ttu-id="02553-720">（例如，一分鐘的時間是 0.016667 一小時的時間）。如果這是有問題，您可以使用<xref:System.DateTime.Add%2A>方法，它可讓您在單一方法呼叫中指定的時間間隔的多個類型，並讓您不需要將時間間隔轉換成一小時的小數部分。</span><span class="sxs-lookup"><span data-stu-id="02553-720">(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <xref:System.DateTime.Add%2A> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-721">下列範例會使用<xref:System.DateTime.AddHours%2A>方法將許多整數和小數的值加入至日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-721">The following example uses the <xref:System.DateTime.AddHours%2A> method to add a number of whole and fractional values to a date and time.</span></span> <span data-ttu-id="02553-722">它也會說明因包含小數部分的值傳遞給方法的有效位數遺失。</span><span class="sxs-lookup"><span data-stu-id="02553-722">It also illustrates the loss of precision caused by passing the method a value that includes a fractional component.</span></span>  
  
 [!code-csharp[System.DateTime.AddHours#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.AddHours/cs/AddHours1.cs#1)]
 [!code-vb[System.DateTime.AddHours#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.AddHours/vb/AddHours1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-723">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-723">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-724">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-724">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public DateTime AddMilliseconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMilliseconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMilliseconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMilliseconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMilliseconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMilliseconds : double -&gt; DateTime" Usage="dateTime.AddMilliseconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-725">整數和小數的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-725">A number of whole and fractional milliseconds.</span></span> <span data-ttu-id="02553-726"><paramref name="value" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-726">The <paramref name="value" /> parameter can be negative or positive.</span></span> <span data-ttu-id="02553-727">請注意，這個值會四捨五入為最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="02553-727">Note that this value is rounded to the nearest integer.</span></span></param>
        <summary><span data-ttu-id="02553-728">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-728">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of milliseconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-729">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示毫秒數的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-729">An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-730">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-730">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-731">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-731">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-732">小數點後的部分`value`是 1 毫秒的小數部分。</span><span class="sxs-lookup"><span data-stu-id="02553-732">The fractional part of `value` is the fractional part of a millisecond.</span></span> <span data-ttu-id="02553-733">比方說，4.5 相當於 4 毫秒以及 5000 次滴答聲，一毫秒 = 10000 刻度。</span><span class="sxs-lookup"><span data-stu-id="02553-733">For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</span></span>  
  
 <span data-ttu-id="02553-734">`value`參數四捨五入至最接近的整數。</span><span class="sxs-lookup"><span data-stu-id="02553-734">The `value` parameter is rounded to the nearest integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-735">下列範例會使用<xref:System.DateTime.AddMilliseconds%2A>方法，以加入毫秒和 1.5 毫秒<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-735">The following example uses the <xref:System.DateTime.AddMilliseconds%2A> method to add one millisecond and 1.5 milliseconds to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-736">它接著會顯示每個新的值，並顯示它與原始值之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-736">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="02553-737">作為時間範圍和的刻度數，會顯示差異。</span><span class="sxs-lookup"><span data-stu-id="02553-737">The difference is displayed both as a time span and as a number of ticks.</span></span> <span data-ttu-id="02553-738">此範例可以清楚一毫秒等於 10000 刻度。</span><span class="sxs-lookup"><span data-stu-id="02553-738">The example makes it clear that one millisecond equals 10,000 ticks.</span></span> <span data-ttu-id="02553-739">它也會顯示毫秒會捨入，然後再執行加法;<xref:System.DateTime>所產生的原始日期中加入 1.5 的毫秒值為 2 毫秒大於原始日期。</span><span class="sxs-lookup"><span data-stu-id="02553-739">It also shows that fractional milliseconds are rounded before performing the addition; the <xref:System.DateTime> value that results from adding 1.5 milliseconds to the original date is 2 milliseconds greater than the original date.</span></span>  
  
 [!code-csharp[System.DateTime.AddMilliseconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmilliseconds/cs/addmilliseconds2.cs#1)]
 [!code-vb[System.DateTime.AddMilliseconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmilliseconds/vb/addmilliseconds2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-740">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-740">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-741">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-741">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public DateTime AddMinutes (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMinutes(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMinutes(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMinutes (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMinutes(double value);" />
      <MemberSignature Language="F#" Value="member this.AddMinutes : double -&gt; DateTime" Usage="dateTime.AddMinutes value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-742">整數和小數的分鐘數。</span><span class="sxs-lookup"><span data-stu-id="02553-742">A number of whole and fractional minutes.</span></span> <span data-ttu-id="02553-743"><paramref name="value" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-743">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="02553-744">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的分鐘數。</span><span class="sxs-lookup"><span data-stu-id="02553-744">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of minutes to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-745">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示分鐘數的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-745">An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-746">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-746">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-747">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-747">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-748">小數點後的部分`value`是一分鐘的小數部分。</span><span class="sxs-lookup"><span data-stu-id="02553-748">The fractional part of `value` is the fractional part of a minute.</span></span> <span data-ttu-id="02553-749">比方說，4.5 就相當於 4 分鐘、 30 秒，0 毫秒，以及 0 刻度。</span><span class="sxs-lookup"><span data-stu-id="02553-749">For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="02553-750">`value`參數四捨五入至最接近的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-750">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-751">下列範例會使用<xref:System.DateTime.AddMinutes%2A>方法將許多整數和小數的值加入至日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-751">The following example uses the <xref:System.DateTime.AddMinutes%2A> method to add a number of whole and fractional values to a date and time.</span></span>  
  
 [!code-cpp[System.DateTime.AddMinutes#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.addminutes/cpp/addminutes1.cpp#1)]
 [!code-csharp[System.DateTime.AddMinutes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addminutes/cs/addminutes1.cs#1)]
 [!code-vb[System.DateTime.AddMinutes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addminutes/vb/addminutes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-752">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-752">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-753">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-753">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public DateTime AddMonths (int months);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddMonths(int32 months) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddMonths(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMonths (months As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddMonths(int months);" />
      <MemberSignature Language="F#" Value="member this.AddMonths : int -&gt; DateTime" Usage="dateTime.AddMonths months" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="months" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="months"><span data-ttu-id="02553-754">月份數。</span><span class="sxs-lookup"><span data-stu-id="02553-754">A number of months.</span></span> <span data-ttu-id="02553-755"><paramref name="months" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-755">The <paramref name="months" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="02553-756">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的月數。</span><span class="sxs-lookup"><span data-stu-id="02553-756">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of months to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-757">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="months" /> 的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-757">An object whose value is the sum of the date and time represented by this instance and <paramref name="months" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-758">這個方法不會變更這個值<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-758">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-759">相反地，它會傳回新<xref:System.DateTime>物件，其值為此作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-759">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-760"><xref:System.DateTime.AddMonths%2A>方法會計算產生的月份和年份，納入帳戶潤年和月中的天數，然後調整產生的日期部分<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-760">The <xref:System.DateTime.AddMonths%2A> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-761">如果產生的日期不是有效的日子，產生的月份中，會使用產生的月份的最後一個有效的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-761">If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.</span></span> <span data-ttu-id="02553-762">範例中，年 3 月 31 + 1 個月 = 年 4 月 30 日和年 3 月 31-1 個月 = 年 2 月 28 的非潤年及年 2 月 29，閏年的。</span><span class="sxs-lookup"><span data-stu-id="02553-762">For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</span></span>  
  
 <span data-ttu-id="02553-763">產生的日期時間部分<xref:System.DateTime>物件仍會維持與這個執行個體相同。</span><span class="sxs-lookup"><span data-stu-id="02553-763">The time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-764">下列範例會將最後一天的 2015 年 12 月，介於 0 到 15 個月。</span><span class="sxs-lookup"><span data-stu-id="02553-764">The following example adds between zero and fifteen months to the last day of December, 2015.</span></span> <span data-ttu-id="02553-765">在此情況下，AddMonths 方法會傳回每個月的最後一天的日期，並已成功處理潤年。</span><span class="sxs-lookup"><span data-stu-id="02553-765">In this case, the AddMonths method returns the date of the last day of each month, and successfully handles leap years.</span></span>  
  
 [!code-csharp[System.DateTime.AddMonths#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addmonths/cs/addmonths1.cs#1)]
 [!code-vb[System.DateTime.AddMonths#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addmonths/vb/addmonths1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-766">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-766">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span>  
  
<span data-ttu-id="02553-767">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-767">-or-</span></span> 
 <span data-ttu-id="02553-768"><paramref name="months" /> 小於 -120,000 或大於 120,000。</span><span class="sxs-lookup"><span data-stu-id="02553-768"><paramref name="months" /> is less than -120,000 or greater than 120,000.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public DateTime AddSeconds (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddSeconds(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddSeconds(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSeconds (value As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddSeconds(double value);" />
      <MemberSignature Language="F#" Value="member this.AddSeconds : double -&gt; DateTime" Usage="dateTime.AddSeconds value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-769">整數和小數的秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-769">A number of whole and fractional seconds.</span></span> <span data-ttu-id="02553-770"><paramref name="value" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-770">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="02553-771">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-771">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of seconds to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-772">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示秒數的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-772">An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-773">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-773">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-774">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-774">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-775">小數點後的部分`value`是一秒的小數部分。</span><span class="sxs-lookup"><span data-stu-id="02553-775">The fractional part of `value` is the fractional part of a second.</span></span> <span data-ttu-id="02553-776">比方說，4.5 就相當於 4 秒、 500 毫秒，以及 0 刻度。</span><span class="sxs-lookup"><span data-stu-id="02553-776">For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</span></span>  
  
 <span data-ttu-id="02553-777">`value`參數四捨五入至最接近的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-777">The `value` parameter is rounded to the nearest millisecond.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-778">下列範例會使用<xref:System.DateTime.AddSeconds%2A>方法，將某一天中的 30 秒以及秒數<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-778">The following example uses the <xref:System.DateTime.AddSeconds%2A> method to add 30 seconds and the number of seconds in one day to a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-779">它接著會顯示每個新的值，並顯示它與原始值之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-779">It then displays each new value and displays the difference between it and the original value.</span></span> <span data-ttu-id="02553-780">作為時間範圍和的刻度數，會顯示差異。</span><span class="sxs-lookup"><span data-stu-id="02553-780">The difference is displayed both as a time span and as a number of ticks.</span></span>  
  
 [!code-csharp[System.DateTime.AddSeconds#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addseconds/cs/addseconds1.cs#1)]
 [!code-vb[System.DateTime.AddSeconds#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addseconds/vb/addseconds1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-781">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-781">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Double" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-782">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-782">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddTicks">
      <MemberSignature Language="C#" Value="public DateTime AddTicks (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddTicks(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddTicks(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddTicks (value As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddTicks(long value);" />
      <MemberSignature Language="F#" Value="member this.AddTicks : int64 -&gt; DateTime" Usage="dateTime.AddTicks value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-783">100 毫微秒刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-783">A number of 100-nanosecond ticks.</span></span> <span data-ttu-id="02553-784"><paramref name="value" /> 參數可以是正數或負數。</span><span class="sxs-lookup"><span data-stu-id="02553-784">The <paramref name="value" /> parameter can be positive or negative.</span></span></param>
        <summary><span data-ttu-id="02553-785">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-785">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of ticks to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-786">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示時間的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-786">An object whose value is the sum of the date and time represented by this instance and the time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-787">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-787">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-788">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-788">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-789">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-789">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.Int64" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-790">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-790">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public DateTime AddYears (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime AddYears(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.AddYears(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddYears (value As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime AddYears(int value);" />
      <MemberSignature Language="F#" Value="member this.AddYears : int -&gt; DateTime" Usage="dateTime.AddYears value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-791">年份數。</span><span class="sxs-lookup"><span data-stu-id="02553-791">A number of years.</span></span> <span data-ttu-id="02553-792"><paramref name="value" /> 參數可以是負數或正數。</span><span class="sxs-lookup"><span data-stu-id="02553-792">The <paramref name="value" /> parameter can be negative or positive.</span></span></param>
        <summary><span data-ttu-id="02553-793">傳回新的 <see cref="T:System.DateTime" />，將這個執行個體的值加上指定的年數。</span><span class="sxs-lookup"><span data-stu-id="02553-793">Returns a new <see cref="T:System.DateTime" /> that adds the specified number of years to the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-794">物件，其值為這個執行個體所表示日期和時間加上 <paramref name="value" /> 所表示年數的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-794">An object whose value is the sum of the date and time represented by this instance and the number of years represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-795">這個方法不會變更這個值<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-795">This method does not change the value of this <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-796">相反地，它會傳回新<xref:System.DateTime>物件，其值為此作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-796">Instead, it returns a new <xref:System.DateTime> object whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-797"><xref:System.DateTime.AddYears%2A>方法計算產生的 year 潤年時納入考量。</span><span class="sxs-lookup"><span data-stu-id="02553-797">The <xref:System.DateTime.AddYears%2A> method calculates the resulting year taking into account leap years.</span></span> <span data-ttu-id="02553-798">產生的月份和日期時間部分<xref:System.DateTime>物件仍會維持與這個執行個體相同。</span><span class="sxs-lookup"><span data-stu-id="02553-798">The month and time-of-day part of the resulting <xref:System.DateTime> object remains the same as this instance.</span></span>  
  
 <span data-ttu-id="02553-799">如果目前的執行個體代表閏年閏日，則傳回值取決於目標日期：</span><span class="sxs-lookup"><span data-stu-id="02553-799">If the current instance represents the leap day in a leap year, the return value depends on the target date:</span></span>  
  
-   <span data-ttu-id="02553-800">如果`value`  +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType>也是閏年，傳回值表示該年度的閏日。</span><span class="sxs-lookup"><span data-stu-id="02553-800">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is also a leap year, the return value represents the leap day in that year.</span></span> <span data-ttu-id="02553-801">比方說，如果四年的時間會新增至 2012 年 2 月 29 日，傳回的日期是 2016 年 2 月 29 日。</span><span class="sxs-lookup"><span data-stu-id="02553-801">For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.</span></span>  
  
-   <span data-ttu-id="02553-802">如果`value`  +  <xref:System.DateTime.Year%2A?displayProperty=nameWithType>不是閏年，傳回值表示閏日，在該年度的前一天。</span><span class="sxs-lookup"><span data-stu-id="02553-802">If `value` + <xref:System.DateTime.Year%2A?displayProperty=nameWithType> is not a leap year, the return value represents the day before the leap day in that year.</span></span> <span data-ttu-id="02553-803">比方說，如果一年加入至 2012 年 2 月 29 日，傳回的日期是 2013 年 2 月 28 日。</span><span class="sxs-lookup"><span data-stu-id="02553-803">For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.</span></span>  
  
 <span data-ttu-id="02553-804">下列範例說明如何利用<xref:System.DateTime.AddYears%2A>方法使用<xref:System.DateTime>代表閏年的一天的值。</span><span class="sxs-lookup"><span data-stu-id="02553-804">The following example illustrates using the <xref:System.DateTime.AddYears%2A> method with a <xref:System.DateTime> value that represents a leap year day.</span></span> <span data-ttu-id="02553-805">它就會顯示日期早於 15 的年和十五幾年來，請依照下列 2000 年 2 月 29 日。</span><span class="sxs-lookup"><span data-stu-id="02553-805">It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.</span></span>  
  
 [!code-csharp[System.DateTime.AddYears#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)]
 [!code-vb[System.DateTime.AddYears#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-806"><paramref name="value" /> 或產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-806"><paramref name="value" /> or the resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (t1 As DateTime, t2 As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Compare : DateTime * DateTime -&gt; int" Usage="System.DateTime.Compare (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="02553-807">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-807">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="02553-808">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-808">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-809">比較 <see cref="T:System.DateTime" /> 的兩個執行個體，並傳回整數，這個整數表示第一個執行個體早於、同於或晚於第二個執行個體。</span><span class="sxs-lookup"><span data-stu-id="02553-809">Compares two instances of <see cref="T:System.DateTime" /> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</span></span></summary>
        <returns><span data-ttu-id="02553-810">帶正負號的數字，該數字表示 <paramref name="t1" /> 和 <paramref name="t2" /> 的相對值。</span><span class="sxs-lookup"><span data-stu-id="02553-810">A signed number indicating the relative values of <paramref name="t1" /> and <paramref name="t2" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="02553-811">實值類型</span><span class="sxs-lookup"><span data-stu-id="02553-811">Value Type</span></span> 
 </term><description> <span data-ttu-id="02553-812">條件</span><span class="sxs-lookup"><span data-stu-id="02553-812">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="02553-813">小於零</span><span class="sxs-lookup"><span data-stu-id="02553-813">Less than zero</span></span> 
 </term><description><span data-ttu-id="02553-814"><paramref name="t1" /> 早於 <paramref name="t2" />。</span><span class="sxs-lookup"><span data-stu-id="02553-814"><paramref name="t1" /> is earlier than <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="02553-815">零</span><span class="sxs-lookup"><span data-stu-id="02553-815">Zero</span></span> 
 </term><description><span data-ttu-id="02553-816"><paramref name="t1" /> 與 <paramref name="t2" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="02553-816"><paramref name="t1" /> is the same as <paramref name="t2" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="02553-817">大於零</span><span class="sxs-lookup"><span data-stu-id="02553-817">Greater than zero</span></span> 
 </term><description><span data-ttu-id="02553-818"><paramref name="t1" /> 晚於 <paramref name="t2" />。</span><span class="sxs-lookup"><span data-stu-id="02553-818"><paramref name="t1" /> is later than <paramref name="t2" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-819">若要判斷的關聯性`t1`來`t2`，則<xref:System.DateTime.Compare%2A>方法會比較<xref:System.DateTime.Ticks%2A>屬性`t1`和`t2`，但會忽略其<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-819">To determine the relationship of `t1` to `t2`, the <xref:System.DateTime.Compare%2A> method compares the <xref:System.DateTime.Ticks%2A> property of `t1` and `t2` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="02553-820">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-820">Before comparing <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-821">下列範例示範<xref:System.DateTime.Compare%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-821">The following example demonstrates the <xref:System.DateTime.Compare%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.compare/cs/compare1.cs#1)]
 [!code-vb[System.DateTime.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.compare/vb/compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-822">比較這個執行個體的值與指定的 <see cref="T:System.DateTime" /> 值，指出這個執行個體早於、同於或晚於指定的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-822">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-823">兩個多載<xref:System.DateTime.CompareTo%2A>方法傳回帶正負號的數字，指出這個執行個體的相對價值而`value`引數下, 表所示。</span><span class="sxs-lookup"><span data-stu-id="02553-823">The two overloads of the <xref:System.DateTime.CompareTo%2A> method return a signed number that indicates the relative value of this instance and the `value` argument, as shown in the following table.</span></span>  
  
|<span data-ttu-id="02553-824">值</span><span class="sxs-lookup"><span data-stu-id="02553-824">Value</span></span>|<span data-ttu-id="02553-825">描述</span><span class="sxs-lookup"><span data-stu-id="02553-825">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="02553-826">小於零</span><span class="sxs-lookup"><span data-stu-id="02553-826">Less than zero</span></span>|<span data-ttu-id="02553-827">這個執行個體早於 `value`。</span><span class="sxs-lookup"><span data-stu-id="02553-827">This instance is earlier than `value`.</span></span>|  
|<span data-ttu-id="02553-828">零</span><span class="sxs-lookup"><span data-stu-id="02553-828">Zero</span></span>|<span data-ttu-id="02553-829">這個執行個體和 `value` 相同。</span><span class="sxs-lookup"><span data-stu-id="02553-829">This instance is the same as `value`.</span></span>|  
|<span data-ttu-id="02553-830">大於零</span><span class="sxs-lookup"><span data-stu-id="02553-830">Greater than zero</span></span>|<span data-ttu-id="02553-831">這個執行個體晚於 `value`。</span><span class="sxs-lookup"><span data-stu-id="02553-831">This instance is later than `value`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(DateTime value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : DateTime -&gt; int&#xA;override this.CompareTo : DateTime -&gt; int" Usage="dateTime.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-832">要與目前執行個體相比較的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-832">The object to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="02553-833">比較這個執行個體的值與指定的 <see cref="T:System.DateTime" /> 值，並且傳回一個整數，指出這個執行個體是早於、同於或晚於指定的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-833">Compares the value of this instance to a specified <see cref="T:System.DateTime" /> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="02553-834">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 參數的相對值。</span><span class="sxs-lookup"><span data-stu-id="02553-834">A signed number indicating the relative values of this instance and the <paramref name="value" /> parameter.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="02553-835">值</span><span class="sxs-lookup"><span data-stu-id="02553-835">Value</span></span> 
 </term><description> <span data-ttu-id="02553-836">描述</span><span class="sxs-lookup"><span data-stu-id="02553-836">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="02553-837">小於零</span><span class="sxs-lookup"><span data-stu-id="02553-837">Less than zero</span></span> 
 </term><description> <span data-ttu-id="02553-838">這個執行個體早於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="02553-838">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="02553-839">零</span><span class="sxs-lookup"><span data-stu-id="02553-839">Zero</span></span> 
 </term><description> <span data-ttu-id="02553-840">這個執行個體和 <paramref name="value" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="02553-840">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="02553-841">大於零</span><span class="sxs-lookup"><span data-stu-id="02553-841">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="02553-842">這個執行個體晚於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="02553-842">This instance is later than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-843">若要判斷目前的執行個體的關聯性`value`，則<xref:System.DateTime.CompareTo%2A>方法會比較<xref:System.DateTime.Ticks%2A>目前的執行個體的屬性和`value`，但會忽略其<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-843">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span>  <span data-ttu-id="02553-844">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-844">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-845">您可以藉由比較的值及其<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-845">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="02553-846">這個方法會實作<xref:System.IComparable%601?displayProperty=nameWithType>介面並執行稍微優於<xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType>方法多載，因為它沒有轉換`value`物件的參數。</span><span class="sxs-lookup"><span data-stu-id="02553-846">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=nameWithType> method overload because it does not have to convert the `value` parameter to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-847">下列範例將三個會具現化<xref:System.DateTime>物件，代表今天的日期，另一個表示的日期之前，一年，且第三個代表未來一年的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-847">The following example instantiates three <xref:System.DateTime> objects, one that represents today's date, another that represents the date one year previously, and a third that represents the date one year in the future.</span></span> <span data-ttu-id="02553-848">然後它會呼叫<xref:System.DateTime.CompareTo%28System.DateTime%29>方法，並顯示比較的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-848">It then calls the <xref:System.DateTime.CompareTo%28System.DateTime%29> method and displays the result of the comparison.</span></span>  
  
 [!code-csharp[DateTime.CompareTo.2#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo.2/CS/CompareTo_CS1_24564.cs#1)]
 [!code-vb[DateTime.CompareTo.2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo.2/VB/CompareTo_VB1_24564.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="dateTime.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-849">要比較的 Boxed 物件，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-849">A boxed object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="02553-850">比較這個執行個體的值與含有指定之 <see cref="T:System.DateTime" /> 值的指定物件，並且傳回一個整數，指出這個執行個體是早於、同於或晚於指定的 <see cref="T:System.DateTime" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-850">Compares the value of this instance to a specified object that contains a specified <see cref="T:System.DateTime" /> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:System.DateTime" /> value.</span></span></summary>
        <returns><span data-ttu-id="02553-851">帶正負號的數字，指出這個執行個體與 <paramref name="value" /> 的相對值。</span><span class="sxs-lookup"><span data-stu-id="02553-851">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="02553-852">值</span><span class="sxs-lookup"><span data-stu-id="02553-852">Value</span></span> 
 </term><description> <span data-ttu-id="02553-853">描述</span><span class="sxs-lookup"><span data-stu-id="02553-853">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="02553-854">小於零</span><span class="sxs-lookup"><span data-stu-id="02553-854">Less than zero</span></span> 
 </term><description> <span data-ttu-id="02553-855">這個執行個體早於 <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="02553-855">This instance is earlier than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="02553-856">零</span><span class="sxs-lookup"><span data-stu-id="02553-856">Zero</span></span> 
 </term><description> <span data-ttu-id="02553-857">這個執行個體和 <paramref name="value" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="02553-857">This instance is the same as <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="02553-858">大於零</span><span class="sxs-lookup"><span data-stu-id="02553-858">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="02553-859">這個執行個體晚於 <paramref name="value" />，或者 <paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-859">This instance is later than <paramref name="value" />, or <paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-860">若要判斷目前的執行個體的關聯性`value`，則<xref:System.DateTime.CompareTo%2A>方法會比較<xref:System.DateTime.Ticks%2A>目前的執行個體的屬性和`value`，但會忽略其<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-860">To determine the relationship of the current instance to `value`, the <xref:System.DateTime.CompareTo%2A> method compares the <xref:System.DateTime.Ticks%2A> property of the current instance and `value` but ignores their <xref:System.DateTime.Kind%2A> property.</span></span> <span data-ttu-id="02553-861">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-861">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-862">您可以藉由比較的值及其<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-862">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 <span data-ttu-id="02553-863">任何執行個體<xref:System.DateTime>，不論其值會被視為大於`null`。</span><span class="sxs-lookup"><span data-stu-id="02553-863">Any instance of <xref:System.DateTime>, regardless of its value, is considered greater than `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-864">下列範例示範<xref:System.DateTime.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-864">The following example demonstrates the <xref:System.DateTime.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[DateTime.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.CompareTo/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.CompareTo/CS/class1.cs#1)]
 [!code-vb[DateTime.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.CompareTo/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-865"><paramref name="value" /> 不是 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-865"><paramref name="value" /> is not a <see cref="T:System.DateTime" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Date">
      <MemberSignature Language="C#" Value="public DateTime Date { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Date" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Date" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Date As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Date { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Date : DateTime" Usage="System.DateTime.Date" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-866">取得這個執行個體的日期部分。</span><span class="sxs-lookup"><span data-stu-id="02553-866">Gets the date component of this instance.</span></span></summary>
        <value><span data-ttu-id="02553-867">新的物件，具有與這個執行個體相同的日期，並將時間值設定為午夜 12:00:00 (00:00:00)。</span><span class="sxs-lookup"><span data-stu-id="02553-867">A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-868">值<xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值是目前的執行個體相同。</span><span class="sxs-lookup"><span data-stu-id="02553-868">The value of the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is the same as that of the current instance.</span></span>  
  
 <span data-ttu-id="02553-869">因為<xref:System.DateTime>型別代表兩個日期和時間在單一的類型中，務必要避免錯誤解譯所傳回的日期<xref:System.DateTime.Date%2A>屬性做為日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-869">Because the <xref:System.DateTime> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <xref:System.DateTime.Date%2A> property as a date and time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-870">下列範例會使用<xref:System.DateTime.Date%2A>屬性來擷取的日期元件<xref:System.DateTime>與時間元件設定為零的值 (或 0:00:00 或午夜)。</span><span class="sxs-lookup"><span data-stu-id="02553-870">The following example uses the <xref:System.DateTime.Date%2A> property to extract the date component of a <xref:System.DateTime> value with its time component set to zero (or 0:00:00, or midnight).</span></span> <span data-ttu-id="02553-871">它也說明了，根據格式字串，用來顯示<xref:System.DateTime>值，才會出現在格式化輸出，可以繼續時間元件。</span><span class="sxs-lookup"><span data-stu-id="02553-871">It also illustrates that, depending on the format string used when displaying the <xref:System.DateTime> value, the time component can continue to appear in formatted output.</span></span>  
  
 [!code-cpp[System.DateTime.Date#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Date/cpp/date1.cpp#1)]
 [!code-csharp[System.DateTime.Date#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Date/cs/Date1.cs#1)]
 [!code-vb[System.DateTime.Date#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Date/vb/Date1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public int Day { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Day" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Day" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Day As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Day { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Day : int" Usage="System.DateTime.Day" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-872">取得由這個執行個體表示的月份天數。</span><span class="sxs-lookup"><span data-stu-id="02553-872">Gets the day of the month represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-873">日期元件，以 1 到 31 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-873">The day component, expressed as a value between 1 and 31.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-874"><xref:System.DateTime.Day%2A>屬性一律會傳回當月日期西曆，即使目前<xref:System.DateTime>值具現化使用一些其他的行事曆，或如果目前執行緒文化特性的預設曆法不是西曆。</span><span class="sxs-lookup"><span data-stu-id="02553-874">The <xref:System.DateTime.Day%2A> property always returns the day of the month in the Gregorian calendar, even if the current <xref:System.DateTime> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.</span></span> <span data-ttu-id="02553-875">若要擷取特定日期，使用一些其他的行事曆月份天數，呼叫該行事曆<xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-875">To retrieve the day of the month of a particular date using some other calendar, call that calendar's <xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-876">下列範例會使用這兩者<xref:System.DateTime.Day%2A>屬性和<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>方法來擷取的月份天數<xref:System.DateTime>使用回曆具現化的值。</span><span class="sxs-lookup"><span data-stu-id="02553-876">The following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month for a <xref:System.DateTime> value that is instantiated using the Hijri calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)]
 [!code-vb[System.DateTime.Day#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)]  
  
 <span data-ttu-id="02553-877">同樣地，下列範例會使用這兩者<xref:System.DateTime.Day%2A>屬性和<xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType>方法來擷取目前執行緒文化特性時 AR-SA，其使用阿拉伯回曆作為其預設月曆月份天數。</span><span class="sxs-lookup"><span data-stu-id="02553-877">Similarly, the following example uses both the <xref:System.DateTime.Day%2A> property and the <xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=nameWithType> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</span></span>  
  
 [!code-csharp[System.DateTime.Day#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)]
 [!code-vb[System.DateTime.Day#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="02553-878">下列範例示範<xref:System.DateTime.Day%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-878">The following example demonstrates the <xref:System.DateTime.Day%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DayOfWeek">
      <MemberSignature Language="C#" Value="public DayOfWeek DayOfWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DayOfWeek DayOfWeek" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfWeek As DayOfWeek" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DayOfWeek DayOfWeek { DayOfWeek get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfWeek : DayOfWeek" Usage="System.DateTime.DayOfWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DayOfWeek</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-879">取得由這個執行個體表示的一週天數。</span><span class="sxs-lookup"><span data-stu-id="02553-879">Gets the day of the week represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-880">列舉的常數，表示這個 <see cref="T:System.DateTime" /> 值代表的是一週的哪一天。</span><span class="sxs-lookup"><span data-stu-id="02553-880">An enumerated constant that indicates the day of the week of this <see cref="T:System.DateTime" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-881">中之常值<xref:System.DayOfWeek>列舉型別的範圍從<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>至<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-881">The value of the constants in the <xref:System.DayOfWeek> enumeration ranges from <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType> to <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-882">如果轉型成整數，其值的範圍是從零 (表示<xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) 到 6 (表示<xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="02553-882">If cast to an integer, its value ranges from zero (which indicates <xref:System.DayOfWeek.Sunday?displayProperty=nameWithType>) to six (which indicates <xref:System.DayOfWeek.Saturday?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="02553-883"><xref:System.DateTime.DayOfWeek%2A>屬性會傳回列舉的常數; 它不會反映在系統的地區及語言設定。</span><span class="sxs-lookup"><span data-stu-id="02553-883">The <xref:System.DateTime.DayOfWeek%2A> property returns an enumerated constant; it does not reflect a system's regional and language settings.</span></span> <span data-ttu-id="02553-884">若要擷取字串，表示針對特定日期當地語系化的工作日名稱，請呼叫其中一個多載<xref:System.DateTime.ToString%2A>方法，其中包含`format`參數並將它傳遞請`ddd`或`dddd`自訂格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-884">To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <xref:System.DateTime.ToString%2A> method that includes a `format` parameter and pass it either the `ddd` or `dddd` custom format strings.</span></span> <span data-ttu-id="02553-885">如需詳細資訊，請參閱[如何：從特定日期擷取一星期的哪一日](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-885">For details, see [How to: Extract the Day of the Week from a Specific Date](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-886">下列範例示範<xref:System.DateTime.DayOfWeek%2A>屬性和<xref:System.DayOfWeek?displayProperty=nameWithType>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="02553-886">The following example demonstrates the <xref:System.DateTime.DayOfWeek%2A> property and the <xref:System.DayOfWeek?displayProperty=nameWithType> enumeration.</span></span>  
  
 [!code-cpp[DateTime.DayOfWeek#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DayOfWeek/CPP/dow.cpp#1)]
 [!code-csharp[DateTime.DayOfWeek#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DayOfWeek/CS/dow.cs#1)]
 [!code-vb[DateTime.DayOfWeek#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DayOfWeek/VB/dow.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public int DayOfYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DayOfYear" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.DayOfYear" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DayOfYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DayOfYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DayOfYear : int" Usage="System.DateTime.DayOfYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-887">取得由這個執行個體表示的一年天數。</span><span class="sxs-lookup"><span data-stu-id="02553-887">Gets the day of the year represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-888">一年中的日期，以 1 到 366 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-888">The day of the year, expressed as a value between 1 and 366.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-889"><xref:System.DateTime.DayOfYear%2A>屬性考量潤年時，它會計算年份的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-889">The <xref:System.DateTime.DayOfYear%2A> property takes leap years into account when it calculates the day of the year.</span></span> <span data-ttu-id="02553-890">屬性值一律會反映西曆日曆，不論目前執行緒文化特性的現行曆法年份的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-890">The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.</span></span> <span data-ttu-id="02553-891">若要擷取在不同的行事曆中年份的日期，請呼叫<xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType>該行事曆的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-891">To retrieve the day of the year in a different calendar, call the <xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=nameWithType> method of that calendar.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-892">下列範例會在西曆中顯示 2010年 2020年年的年度年 12 月 31 日。</span><span class="sxs-lookup"><span data-stu-id="02553-892">The following example displays the day of the year of December 31 for the years 2010-2020 in the Gregorian calendar.</span></span> <span data-ttu-id="02553-893">請注意，此範例會顯示 December 31 是潤年中年份的第 366 天。</span><span class="sxs-lookup"><span data-stu-id="02553-893">Note that the example shows that December 31 is the 366th day of the year in leap years.</span></span>  
  
 [!code-csharp[System.DateTime.DayOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.dayofyear/cs/dayofyear2.cs#1)]
 [!code-vb[System.DateTime.DayOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.dayofyear/vb/dayofyear2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="DaysInMonth">
      <MemberSignature Language="C#" Value="public static int DaysInMonth (int year, int month);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DaysInMonth(int32 year, int32 month) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DaysInMonth (year As Integer, month As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DaysInMonth(int year, int month);" />
      <MemberSignature Language="F#" Value="static member DaysInMonth : int * int -&gt; int" Usage="System.DateTime.DaysInMonth (year, month)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
        <Parameter Name="month" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-894">年。</span><span class="sxs-lookup"><span data-stu-id="02553-894">The year.</span></span></param>
        <param name="month"><span data-ttu-id="02553-895">月 (範圍從 1 到 12 的數字)。</span><span class="sxs-lookup"><span data-stu-id="02553-895">The month (a number ranging from 1 to 12).</span></span></param>
        <summary><span data-ttu-id="02553-896">傳回所指定年份中指定月份的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-896">Returns the number of days in the specified month and year.</span></span></summary>
        <returns><span data-ttu-id="02553-897">指定 <paramref name="month" /> 的 <paramref name="year" /> 中的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-897">The number of days in <paramref name="month" /> for the specified <paramref name="year" />.</span></span>  
  
<span data-ttu-id="02553-898">例如，如果 <paramref name="month" /> 等於 2 (表示二月)，傳回值是 28 或 29 (根據 <paramref name="year" /> 是否為閏年)。</span><span class="sxs-lookup"><span data-stu-id="02553-898">For example, if <paramref name="month" /> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year" /> is a leap year.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-899"><xref:System.DateTime.DaysInMonth%2A>方法一律會解譯`month`和`year`因為西曆年份和月份行事曆即使西曆不是目前的文化特性的現行曆法。</span><span class="sxs-lookup"><span data-stu-id="02553-899">The <xref:System.DateTime.DaysInMonth%2A> method always interprets `month` and `year` as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.</span></span> <span data-ttu-id="02553-900">若要取得特定行事曆的指定月份中的日數，呼叫該行事曆<xref:System.Globalization.Calendar.GetDaysInMonth%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-900">To get the number of days in a specified month of a particular calendar, call that calendar's <xref:System.Globalization.Calendar.GetDaysInMonth%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-901">下列範例示範如何使用<xref:System.DateTime.DaysInMonth%2A>方法，以判斷年 7 月 2001 年 2 月的日數 1998 非-年 （閏年），1996 年 2 月 （閏年）。</span><span class="sxs-lookup"><span data-stu-id="02553-901">The following example demonstrates how to use the <xref:System.DateTime.DaysInMonth%2A> method to determine the number of days in July 2001, February 1998 (a non-leap year), and February 1996 (a leap year).</span></span>  
  
 [!code-cpp[DateTime.DaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.DaysInMonth/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.DaysInMonth/CS/class1.cs#1)]
 [!code-vb[DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.DaysInMonth/VB/class1.vb#1)]  
  
 <span data-ttu-id="02553-902">下列範例會顯示每個月份的整數陣列中指定之年的天數。</span><span class="sxs-lookup"><span data-stu-id="02553-902">The following example displays the number of days in each month of a year specified in an integer array.</span></span>  
  
 [!code-csharp[System.DateTime.DaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.daysinmonth/cs/daysinmonth3.cs#1)]
 [!code-vb[System.DateTime.DaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.daysinmonth/vb/daysinmonth3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-903"><paramref name="month" /> 小於 1 或大於 12。</span><span class="sxs-lookup"><span data-stu-id="02553-903"><paramref name="month" /> is less than 1 or greater than 12.</span></span>  
  
<span data-ttu-id="02553-904">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-904">-or-</span></span> 
 <span data-ttu-id="02553-905"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-905"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-906">傳回值，指出兩個 <see cref="T:System.DateTime" /> 物件，或 <see cref="T:System.DateTime" /> 執行個體和另一個物件或 <see cref="T:System.DateTime" /> 是否有相同的值。</span><span class="sxs-lookup"><span data-stu-id="02553-906">Returns a value indicating whether two <see cref="T:System.DateTime" /> objects, or a <see cref="T:System.DateTime" /> instance and another object or <see cref="T:System.DateTime" />, have the same value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(DateTime value);" />
      <MemberSignature Language="F#" Value="override this.Equals : DateTime -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-907">與這個執行個體相比較的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-907">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="02553-908">傳回值，該值指出這個執行個體的值是否等於指定之 <see cref="T:System.DateTime" /> 執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="02553-908">Returns a value indicating whether the value of this instance is equal to the value of the specified <see cref="T:System.DateTime" /> instance.</span></span></summary>
        <returns><span data-ttu-id="02553-909">當 <see langword="true" /> 參數等於這個執行個體的值時為 <paramref name="value" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-909"><see langword="true" /> if the <paramref name="value" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-910">目前的執行個體和`value`相等如果其<xref:System.DateTime.Ticks%2A>屬性值是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-910">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="02553-911">其<xref:System.DateTime.Kind%2A>屬性值不會納入測試是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-911">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
 <span data-ttu-id="02553-912">這個方法會實作<xref:System.IEquatable%601?displayProperty=nameWithType>介面，並執行稍微優於<xref:System.DateTime.Equals%2A>方法因為`value`參數不需要轉換成物件。</span><span class="sxs-lookup"><span data-stu-id="02553-912">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.DateTime.Equals%2A> method because the `value` parameter does not have to be converted to an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-913">下列範例示範<xref:System.DateTime.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-913">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.Object)" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dateTime.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-914">與這個執行個體相比較的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-914">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="02553-915">傳回值，指出這個執行個體 (Instance) 是否和指定的物件相等。</span><span class="sxs-lookup"><span data-stu-id="02553-915">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="02553-916">如果 <see langword="true" /> 是 <paramref name="value" /> 的執行個體，並且等於這個執行個體的值，則為 <see cref="T:System.DateTime" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-916"><see langword="true" /> if <paramref name="value" /> is an instance of <see cref="T:System.DateTime" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-917">目前的執行個體和`value`相等如果其<xref:System.DateTime.Ticks%2A>屬性值是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-917">The current instance and `value` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="02553-918">其<xref:System.DateTime.Kind%2A>屬性值不會納入測試是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-918">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-919">下列範例示範<xref:System.DateTime.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-919">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.Equals-Instance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/cs/sample.cs#1)]
 [!code-vb[System.DateTime.Equals-Instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Equals-Instance/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Equals(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member Equals : DateTime * DateTime -&gt; bool" Usage="System.DateTime.Equals (t1, t2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="02553-920">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-920">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="02553-921">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-921">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-922">傳回值，指出兩個 <see cref="T:System.DateTime" /> 執行個體是否有相同的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-922">Returns a value indicating whether two <see cref="T:System.DateTime" /> instances  have the same date and time value.</span></span></summary>
        <returns><span data-ttu-id="02553-923">當兩個值相等時為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-923"><see langword="true" /> if the two values are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-924">`t1` 並`t2`相等如果其<xref:System.DateTime.Ticks%2A>屬性值是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-924">`t1` and `t2` are equal if their <xref:System.DateTime.Ticks%2A> property values are equal.</span></span> <span data-ttu-id="02553-925">其<xref:System.DateTime.Kind%2A>屬性值不會納入測試是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-925">Their <xref:System.DateTime.Kind%2A> property values are not considered in the test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-926">下列範例示範<xref:System.DateTime.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-926">The following example demonstrates the <xref:System.DateTime.Equals%2A> method.</span></span>  
  
 [!code-cpp[DateTime.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Equals/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Equals/CS/class1.cs#1)]
 [!code-vb[DateTime.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Equals/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.DateTime.Compare(System.DateTime,System.DateTime)" />
        <altmember cref="M:System.DateTime.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FromBinary">
      <MemberSignature Language="C#" Value="public static DateTime FromBinary (long dateData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromBinary(int64 dateData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromBinary(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromBinary (dateData As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromBinary(long dateData);" />
      <MemberSignature Language="F#" Value="static member FromBinary : int64 -&gt; DateTime" Usage="System.DateTime.FromBinary dateData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateData" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dateData"><span data-ttu-id="02553-927">64 位元帶正負號的整數，可在 2 位元欄位中編碼 <see cref="P:System.DateTime.Kind" /> 屬性，並在 62 位元欄位中編碼 <see cref="P:System.DateTime.Ticks" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-927">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> property in a 2-bit field and the <see cref="P:System.DateTime.Ticks" /> property in a 62-bit field.</span></span></param>
        <summary><span data-ttu-id="02553-928">還原序列化 64 位元的二進位值，並重新建立原始的序列化 <see cref="T:System.DateTime" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="02553-928">Deserializes a 64-bit binary value and recreates an original serialized <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="02553-929">物件，與 <see cref="T:System.DateTime" /> 方法所序列化的 <see cref="M:System.DateTime.ToBinary" /> 物件相等。</span><span class="sxs-lookup"><span data-stu-id="02553-929">An object that is equivalent to the <see cref="T:System.DateTime" /> object that was serialized by the <see cref="M:System.DateTime.ToBinary" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-930">使用<xref:System.DateTime.ToBinary%2A>方法，以將目前值轉換成<xref:System.DateTime>二進位值的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-930">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="02553-931">接著，使用二進位值和<xref:System.DateTime.FromBinary%2A>方法來重新建立原始<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-931">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-932">在某些情況下，<xref:System.DateTime>所傳回的值<xref:System.DateTime.FromBinary%2A>方法並不相同原始<xref:System.DateTime>值提供給<xref:System.DateTime.ToBinary%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-932">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="02553-933">如需詳細資訊，請參閱下一步 區段中，「 本地時間調整 」。</span><span class="sxs-lookup"><span data-stu-id="02553-933">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="02553-934">當地時間調整</span><span class="sxs-lookup"><span data-stu-id="02553-934">Local Time Adjustment</span></span>  
 <span data-ttu-id="02553-935">當地時間，也就是調整為本地時區的國際標準時間，由<xref:System.DateTime>結構，其<xref:System.DateTime.Kind%2A>屬性具有值<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="02553-935">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="02553-936">還原本機時<xref:System.DateTime>值由所產生的二進位表示法<xref:System.DateTime.ToBinary%2A>方法，<xref:System.DateTime.FromBinary%2A>方法可能會調整重新建立的值，如此就不等於原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-936">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="02553-937">在下列狀況下可能會發生這種情形：</span><span class="sxs-lookup"><span data-stu-id="02553-937">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="02553-938">如果當地<xref:System.DateTime>物件會序列化中的某個時區<xref:System.DateTime.ToBinary%2A>方法，，然後在不同的時區，藉由還原序列化<xref:System.DateTime.FromBinary%2A>方法，表示所產生的本機時間<xref:System.DateTime>物件會自動調整第二個的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-938">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="02553-939">例如，假設<xref:System.DateTime>代表當地時間下午 3 點的物件</span><span class="sxs-lookup"><span data-stu-id="02553-939">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="02553-940">執行位於美國的應用程式使用太平洋時區<xref:System.DateTime.ToBinary%2A>方法，以將其轉換<xref:System.DateTime>二進位值的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-940">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="02553-941">執行位於美國的另一個應用程式接著會使用美國東部時區<xref:System.DateTime.FromBinary%2A>方法，將二進位值轉換到新<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-941">Another application that is executing in the U.S. Eastern Time zone then uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-942">新值<xref:System.DateTime>物件是下午 6 點，代表相同的點為原始下午 3 點的時間</span><span class="sxs-lookup"><span data-stu-id="02553-942">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="02553-943">值，但會調整為美國東部時區的當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-943">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="02553-944">如果在本機的二進位表示法<xref:System.DateTime>值表示無效的時間以當地時區的系統上<xref:System.DateTime.FromBinary%2A>是呼叫，時間會調整，讓它是否有效。</span><span class="sxs-lookup"><span data-stu-id="02553-944">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="02553-945">比方說，從標準時間轉換到日光節約時間發生的美國太平洋時區中在 2010 年 3 月 14 日的上午 2:00，時間前移一個小時，到凌晨 3:00</span><span class="sxs-lookup"><span data-stu-id="02553-945">For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="02553-946">這個小時間隔是無效的時間，也就是不存在於這個時區的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-946">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="02553-947">下列範例顯示時的時間必須落在此範圍會轉換為二進位值所<xref:System.DateTime.ToBinary%2A>方法，然後還原<xref:System.DateTime.FromBinary%2A>成為有效的時間會調整的方法，將原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-947">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="02553-948">您可以判斷是否是特定日期和時間值可能會受到修改傳遞至<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>方法，為此範例說明。</span><span class="sxs-lookup"><span data-stu-id="02553-948">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="02553-949">版本的考量</span><span class="sxs-lookup"><span data-stu-id="02553-949">Version Considerations</span></span>  
 <span data-ttu-id="02553-950">從.NET Framework 2.0 版中，開始<xref:System.DateTime>結構所組成的私用的類型欄位，指出是否在指定的時間本地時間或國際標準時間 (UTC)，或是兩者皆否，串連的私用刻度欄位，其中包含指定的日期和時間的 100 奈秒刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-950">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="02553-951">刻度數，可以使用來存取<xref:System.DateTime.Ticks%2A>屬性和 theKind 欄位可以使用存取<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-951">The number of ticks can be accessed with the <xref:System.DateTime.Ticks%2A> property and theKind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-952">在.NET Framework 2.0 中，如果您序列化之前<xref:System.DateTime>物件，以手動方式而非使用序列化介面，例如<xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>，您需要將只在刻度資料序列化<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-952">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you needed to serialize only the Ticks data in the <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-953">從.NET Framework 2.0 開始，您也必須序列化類型的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-953">Starting with the .NET Framework 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-954"><paramref name="dateData" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-954"><paramref name="dateData" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToBinary" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTime">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTime (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTime(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTime(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTime (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTime(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTime : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTime fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="02553-955">Windows 檔案時間以刻度表示。</span><span class="sxs-lookup"><span data-stu-id="02553-955">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="02553-956">將指定的 Windows 檔案時間轉換成相等的本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-956">Converts the specified Windows file time to an equivalent local time.</span></span></summary>
        <returns><span data-ttu-id="02553-957">物件，表示 <paramref name="fileTime" /> 參數所表示日期和時間的本地時間對應項。</span><span class="sxs-lookup"><span data-stu-id="02553-957">An object that represents the local time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-958">Windows 檔案時間會表示 12:00，年 1 月 1 西元 1601年日午夜起已經過的 100 奈秒間隔數的 64 位元值</span><span class="sxs-lookup"><span data-stu-id="02553-958">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="02553-959">(C.E.)國際標準時間 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-959">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="02553-960">Windows 會使用檔案的時間，來記錄應用程式建立、 存取，或寫入檔案時。</span><span class="sxs-lookup"><span data-stu-id="02553-960">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="02553-961">`fileTime`參數指定的檔案時間，以 100 奈秒刻度表示。</span><span class="sxs-lookup"><span data-stu-id="02553-961">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="02553-962">從.NET Framework 2.0 版開始，傳回值是<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-962">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-963">下列範例示範<xref:System.DateTime.FromFileTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-963">The following example demonstrates the <xref:System.DateTime.FromFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.FromFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.FromFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.FromFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.FromFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-964"><paramref name="fileTime" /> 小於 0 或代表大於 <see cref="F:System.DateTime.MaxValue" /> 的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-964"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-965">一般情況下，<see cref="M:System.DateTime.FromFileTime(System.Int64)" />方法還原<see cref="T:System.DateTime" />所儲存的值<see cref="M:System.DateTime.ToFileTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-965">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="02553-966">不過，在下列情況下的兩個值可能與不同：</span><span class="sxs-lookup"><span data-stu-id="02553-966">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="02553-967">-如果序列化和還原序列化<see cref="T:System.DateTime" />值偏高，在不同的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-967">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="02553-968">例如，如果<see cref="T:System.DateTime" />時間為下午 12:30 的值</span><span class="sxs-lookup"><span data-stu-id="02553-968">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="02553-969">在美國序列化，並再還原序列化在美國東部時區太平洋時間區域，原始的值為下午 12:30</span><span class="sxs-lookup"><span data-stu-id="02553-969">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="02553-970">已調整為上午 9:30</span><span class="sxs-lookup"><span data-stu-id="02553-970">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="02553-971">反映兩個時區之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-971">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="02553-972">-如果<see cref="T:System.DateTime" />序列化的值表示無效的時間以當地時區。</span><span class="sxs-lookup"><span data-stu-id="02553-972">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="02553-973">在此情況下，<see cref="M:System.DateTime.ToFileTime" />方法會調整還原<see cref="T:System.DateTime" />值，使其表示有效的時間以當地時區。</span><span class="sxs-lookup"><span data-stu-id="02553-973">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="02553-974">例如，從標準時間轉換到日光節約時間會發生在美國太平洋時間區域，在 2010 年 3 月 14 日到上午 2:00，時間前移一個小時，到凌晨 3:00</span><span class="sxs-lookup"><span data-stu-id="02553-974">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="02553-975">這個小時間隔是無效的時間，也就是不存在於這個時區的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-975">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="02553-976">下列範例會顯示該時的時間必須落在這個範圍會會轉換為長整數值<see cref="M:System.DateTime.ToFileTime" />方法，然後還原<see cref="M:System.DateTime.FromFileTime(System.Int64)" />成為有效的時間會調整的方法，將原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-976">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="02553-977">您可以判斷是否是特定日期和時間值可能會受到修改傳遞至<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />方法，為此範例說明。</span><span class="sxs-lookup"><span data-stu-id="02553-977">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="02553-978">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="02553-978">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="FromFileTimeUtc">
      <MemberSignature Language="C#" Value="public static DateTime FromFileTimeUtc (long fileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromFileTimeUtc(int64 fileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromFileTimeUtc(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromFileTimeUtc (fileTime As Long) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromFileTimeUtc(long fileTime);" />
      <MemberSignature Language="F#" Value="static member FromFileTimeUtc : int64 -&gt; DateTime" Usage="System.DateTime.FromFileTimeUtc fileTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fileTime"><span data-ttu-id="02553-979">Windows 檔案時間以刻度表示。</span><span class="sxs-lookup"><span data-stu-id="02553-979">A Windows file time expressed in ticks.</span></span></param>
        <summary><span data-ttu-id="02553-980">將指定的 Windows 檔案時間轉換成相等的 UTC 時間。</span><span class="sxs-lookup"><span data-stu-id="02553-980">Converts the specified Windows file time to an equivalent UTC time.</span></span></summary>
        <returns><span data-ttu-id="02553-981">物件，表示 <paramref name="fileTime" /> 參數所表示日期和時間的 UTC 時間對應項。</span><span class="sxs-lookup"><span data-stu-id="02553-981">An object that represents the UTC time equivalent of the date and time represented by the <paramref name="fileTime" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-982">Windows 檔案時間會表示 12:00，年 1 月 1 西元 1601年日午夜起已經過的 100 奈秒間隔數的 64 位元值</span><span class="sxs-lookup"><span data-stu-id="02553-982">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="02553-983">(C.E.)國際標準時間 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-983">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="02553-984">Windows 會使用檔案的時間，來記錄應用程式建立、 存取，或寫入檔案時。</span><span class="sxs-lookup"><span data-stu-id="02553-984">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="02553-985">`fileTime`參數指定的檔案時間，以 100 奈秒刻度表示。</span><span class="sxs-lookup"><span data-stu-id="02553-985">The `fileTime` parameter specifies a file time expressed in 100-nanosecond ticks.</span></span>  
  
 <span data-ttu-id="02553-986">從.NET Framework 2.0 版開始，傳回值是<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Utc>。</span><span class="sxs-lookup"><span data-stu-id="02553-986">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-987"><paramref name="fileTime" /> 小於 0 或代表大於 <see cref="F:System.DateTime.MaxValue" /> 的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-987"><paramref name="fileTime" /> is less than 0 or represents a time greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.DateTime.FromFileTime(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="FromOADate">
      <MemberSignature Language="C#" Value="public static DateTime FromOADate (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime FromOADate(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.FromOADate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromOADate (d As Double) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime FromOADate(double d);" />
      <MemberSignature Language="F#" Value="static member FromOADate : double -&gt; DateTime" Usage="System.DateTime.FromOADate d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="02553-988">OLE Automation 日期值。</span><span class="sxs-lookup"><span data-stu-id="02553-988">An OLE Automation Date value.</span></span></param>
        <summary><span data-ttu-id="02553-989">傳回等於指定 OLE Automation 日期的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-989">Returns a <see cref="T:System.DateTime" /> equivalent to the specified OLE Automation Date.</span></span></summary>
        <returns><span data-ttu-id="02553-990">物件，表示和 <paramref name="d" /> 相同的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-990">An object that represents the same date and time as <paramref name="d" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-991">`d`參數是代表日期的日期之前或之後基底，午夜 30 年 12 月 1899年的天數為雙精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="02553-991">The `d` parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</span></span> <span data-ttu-id="02553-992">正負號和整數部分`d`編碼的日期為正數或負數天加上的位移，從 30 1899 年 12 月和值的小數部分的絕對值`d`會編碼為一天加上位移，從午夜一小部分的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-992">The sign and integral part of `d` encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of `d` encodes the time of day as a fraction of a day displacement from midnight.</span></span> <span data-ttu-id="02553-993">`d` 必須是正數 2958465.99999999 透過負 657435.0 之間的值。</span><span class="sxs-lookup"><span data-stu-id="02553-993">`d` must be a value between negative 657435.0 through positive 2958465.99999999.</span></span>  
  
 <span data-ttu-id="02553-994">請注意，由於日期編碼的方式，有兩種表示任何時間的 30 年 12 月 1899年的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-994">Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</span></span> <span data-ttu-id="02553-995">例如，-0.5，0.5 表示中午 30 年 12 月 1899年，因為一天加上位移的加號或減號基底零天仍然是基底的日期，而且從午夜的半天移動中午。</span><span class="sxs-lookup"><span data-stu-id="02553-995">For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</span></span>  
  
 <span data-ttu-id="02553-996">請參閱<xref:System.DateTime.ToOADate%2A>如需有關 OLE Automation。</span><span class="sxs-lookup"><span data-stu-id="02553-996">See <xref:System.DateTime.ToOADate%2A> for more information on OLE Automation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-997">日期不是有效的 OLE Automation 日期值。</span><span class="sxs-lookup"><span data-stu-id="02553-997">The date is not a valid OLE Automation Date value.</span></span></exception>
        <altmember cref="M:System.DateTime.ToOADate" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDateTimeFormats">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-998">將這個執行個體的值轉換為標準日期和時間格式規範所支援的所有字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-998">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-999">您不應該假設多個呼叫<xref:System.DateTime.GetDateTimeFormats%2A>多載會傳回相同的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-999">You should not assume that multiple calls to the <xref:System.DateTime.GetDateTimeFormats%2A> overloads will return identical data.</span></span> <span data-ttu-id="02553-1000">依據特定的多載，如果目前的文化特性變更，使用者會覆寫個別文化特性設定，或系統的文化特性的資料，就會更新，可以變更這個方法所傳回的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1000">Depending on the specific overload, the data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1001">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1001">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats();" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : unit -&gt; string[]" Usage="dateTime.GetDateTimeFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1002">將這個執行個體的值轉換為標準日期和時間格式規範所支援的所有字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1002">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</span></span></summary>
        <returns><span data-ttu-id="02553-1003">字串陣列，其中的每個元素都是這個執行個體的值使用其中一個標準日期和時間格式規範所格式化的表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1003">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1004">所傳回的字串陣列<xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>方法就相當於結合個別的呼叫所傳回的字串陣列<xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType>與"d"、"D"、"f"、"F"、"g"、"G"、"m"、"o"、"r"、"s"、"t"、"T"、"u"、"U"，"y"標準格式字串的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1004">The string array returned by the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="02553-1005">如需有關標準格式規範的詳細資訊，請參閱[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1005">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="02553-1006">使用目前文化特性的資訊來格式化傳回值的每個項目。</span><span class="sxs-lookup"><span data-stu-id="02553-1006">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="02553-1007">如需目前的文化特性的文化特性格式資訊的詳細資訊，請參閱<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1007">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1008">這個方法會使用區分文化特性的資料，因為您不應該假設方法的多個呼叫會傳回相同的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1008">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="02553-1009">如果目前的文化特性變更，使用者會覆寫個別文化特性設定，或系統的文化特性的資料，就會更新，可以變更這個方法所傳回的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1009">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1010">下列範例示範<xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1010">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-1011">它會顯示電腦的目前文化特性中，在此案例中是 EN-US 使用所有可能的標準日期和時間格式的日期的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1011">It displays the string representation of a date using all possible standard date and time formats in the computer's current culture, which in this case is en-US.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.GetDateTimeFormats#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#1)]
 [!code-vb[DateTime.GetDateTimeFormats#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#1)]  
  
 <span data-ttu-id="02553-1012">此範例會顯示下列輸出：</span><span class="sxs-lookup"><span data-stu-id="02553-1012">The example displays the following output:</span></span>  
  
```  
7/28/2009  
7/28/09  
07/28/09  
07/28/2009  
09/07/28  
2009-07-28  
28-Jul-09  
Tuesday, July 28, 2009  
July 28, 2009  
Tuesday, 28 July, 2009  
28 July, 2009  
Tuesday, July 28, 2009 5:23 AM  
Tuesday, July 28, 2009 05:23 AM  
Tuesday, July 28, 2009 5:23  
Tuesday, July 28, 2009 05:23  
July 28, 2009 5:23 AM  
July 28, 2009 05:23 AM  
July 28, 2009 5:23  
July 28, 2009 05:23  
Tuesday, 28 July, 2009 5:23 AM  
Tuesday, 28 July, 2009 05:23 AM  
Tuesday, 28 July, 2009 5:23  
Tuesday, 28 July, 2009 05:23  
28 July, 2009 5:23 AM  
28 July, 2009 05:23 AM  
28 July, 2009 5:23  
28 July, 2009 05:23  
Tuesday, July 28, 2009 5:23:15 AM  
Tuesday, July 28, 2009 05:23:15 AM  
Tuesday, July 28, 2009 5:23:15  
Tuesday, July 28, 2009 05:23:15  
July 28, 2009 5:23:15 AM  
July 28, 2009 05:23:15 AM  
July 28, 2009 5:23:15  
July 28, 2009 05:23:15  
Tuesday, 28 July, 2009 5:23:15 AM  
Tuesday, 28 July, 2009 05:23:15 AM  
Tuesday, 28 July, 2009 5:23:15  
Tuesday, 28 July, 2009 05:23:15  
28 July, 2009 5:23:15 AM  
28 July, 2009 05:23:15 AM  
28 July, 2009 5:23:15  
28 July, 2009 05:23:15  
7/28/2009 5:23 AM  
7/28/2009 05:23 AM  
7/28/2009 5:23  
7/28/2009 05:23  
7/28/09 5:23 AM  
7/28/09 05:23 AM  
7/28/09 5:23  
7/28/09 05:23  
07/28/09 5:23 AM  
07/28/09 05:23 AM  
07/28/09 5:23  
07/28/09 05:23  
07/28/2009 5:23 AM  
07/28/2009 05:23 AM  
07/28/2009 5:23  
07/28/2009 05:23  
09/07/28 5:23 AM  
09/07/28 05:23 AM  
09/07/28 5:23  
09/07/28 05:23  
2009-07-28 5:23 AM  
2009-07-28 05:23 AM  
2009-07-28 5:23  
2009-07-28 05:23  
28-Jul-09 5:23 AM  
28-Jul-09 05:23 AM  
28-Jul-09 5:23  
28-Jul-09 05:23  
7/28/2009 5:23:15 AM  
7/28/2009 05:23:15 AM  
7/28/2009 5:23:15  
7/28/2009 05:23:15  
7/28/09 5:23:15 AM  
7/28/09 05:23:15 AM  
7/28/09 5:23:15  
7/28/09 05:23:15  
07/28/09 5:23:15 AM  
07/28/09 05:23:15 AM  
07/28/09 5:23:15  
07/28/09 05:23:15  
07/28/2009 5:23:15 AM  
07/28/2009 05:23:15 AM  
07/28/2009 5:23:15  
07/28/2009 05:23:15  
09/07/28 5:23:15 AM  
09/07/28 05:23:15 AM  
09/07/28 5:23:15  
09/07/28 05:23:15  
2009-07-28 5:23:15 AM  
2009-07-28 05:23:15 AM  
2009-07-28 5:23:15  
2009-07-28 05:23:15  
28-Jul-09 5:23:15 AM  
28-Jul-09 05:23:15 AM  
28-Jul-09 5:23:15  
28-Jul-09 05:23:15  
July 28  
July 28  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
5:23 AM  
05:23 AM  
5:23  
05:23  
5:23:15 AM  
05:23:15 AM  
5:23:15  
05:23:15  
2009-07-28 05:23:15Z  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15 PM  
Tuesday, July 28, 2009 12:23:15  
Tuesday, July 28, 2009 12:23:15  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15 PM  
July 28, 2009 12:23:15  
July 28, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15 PM  
Tuesday, 28 July, 2009 12:23:15  
Tuesday, 28 July, 2009 12:23:15  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15 PM  
28 July, 2009 12:23:15  
28 July, 2009 12:23:15  
July, 2009  
July, 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1013">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1013">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char -&gt; string[]" Usage="dateTime.GetDateTimeFormats format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="02553-1014">標準日期和時間格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1014">A standard date and time format string.</span></span></param>
        <summary><span data-ttu-id="02553-1015">將這個執行個體的值轉換為指定的標準日期和時間格式規範所支援的所有字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1015">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</span></span></summary>
        <returns><span data-ttu-id="02553-1016">字串陣列，其中的每個項目都是這個執行個體的值使用 <paramref name="format" /> 標準日期和時間格式規範所格式化的表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1016">A string array where each element is the representation of the value of this instance formatted with the <paramref name="format" /> standard date and time format specifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1017">`format`參數可以是任何的標準日期和時間格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1017">The `format` parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="02553-1018">這些包括 d、 D、 f、 F、 g、 G、 M （或 m），O （或 o），R （或 r） s、 t、 T、 u、 U 和 Y （或 y）。</span><span class="sxs-lookup"><span data-stu-id="02553-1018">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="02553-1019">如需詳細資訊，請參閱 <<c0> [ 標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1019">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="02553-1020">使用目前文化特性的資訊來格式化傳回值的每個項目。</span><span class="sxs-lookup"><span data-stu-id="02553-1020">Each element of the return value is formatted using information from the current culture.</span></span> <span data-ttu-id="02553-1021">如需目前的文化特性的文化特性格式資訊的詳細資訊，請參閱<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1021">For more information about culture-specific formatting information for the current culture, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1022">這個方法會使用區分文化特性的資料，因為您不應該假設方法的多個呼叫會傳回相同的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1022">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</span></span> <span data-ttu-id="02553-1023">如果目前的文化特性變更，使用者會覆寫個別文化特性設定，或系統的文化特性的資料，就會更新，可以變更這個方法所傳回的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1023">The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1024">下列範例示範<xref:System.DateTime.GetDateTimeFormats%28System.Char%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1024">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%29> method.</span></span> <span data-ttu-id="02553-1025">它會顯示完整日期格式規範 ("D") 會使用目前文化特性的日期的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1025">It displays the string representation of a date using the long date format specifier ("D") for the current culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#3](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#3)]
 [!code-vb[DateTime.GetDateTimeFormats#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1026"><paramref name="format" /> 不是有效的標準日期和時間格式規範字元。</span><span class="sxs-lookup"><span data-stu-id="02553-1026"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1027">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1027">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1028">物件，提供關於這個執行個體的文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1028">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="02553-1029">將這個執行個體的值轉換為標準日期和時間格式規範和指定的特定文化特性格式資訊所支援的所有字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1029">Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="02553-1030">字串陣列，其中的每個元素都是這個執行個體的值使用其中一個標準日期和時間格式規範所格式化的表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1030">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1031">所傳回的字串陣列<xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>方法就相當於結合個別的呼叫所傳回的字串陣列<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType>與"d"、"D"、"f"、"F"、"g"、"G"、"m"、"o"、"r"、"s"、"t"、"T"、"u"、"U"，"y"標準格式字串的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1031">The string array returned by the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method is equivalent to combining the string arrays returned by separate calls to the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</span></span> <span data-ttu-id="02553-1032">如需有關標準格式規範的詳細資訊，請參閱[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1032">For more information about standard format specifiers, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="02553-1033">使用所提供的特定文化特性資訊來格式化傳回值的每個項目`provider`。</span><span class="sxs-lookup"><span data-stu-id="02553-1033">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1034">這個方法會使用區分文化特性的資料，因為您不應該假設方法的多個呼叫會傳回相同的資料，除非`provider`是<xref:System.Globalization.CultureInfo>物件，表示文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="02553-1034">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="02553-1035">如果使用者覆寫個別文化特性設定，這個方法所傳回的資料可以變更`provider`或是系統的文化特性的資料更新發生`provider`。</span><span class="sxs-lookup"><span data-stu-id="02553-1035">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1036">下列範例示範<xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1036">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-1037">它會顯示用於 FR-FR 文化特性中的所有可能的標準日期和時間格式的日期的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1037">It displays the string representation of a date using all possible standard date and time formats for the fr-FR culture.</span></span>  
  
 [!code-cpp[DateTime.GetDateTimeFormats#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CPP/class1.cpp#2)]
 [!code-csharp[DateTime.GetDateTimeFormats#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#2)]
 [!code-vb[DateTime.GetDateTimeFormats#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#2)]  
  
 <span data-ttu-id="02553-1038">此範例會顯示下列輸出：</span><span class="sxs-lookup"><span data-stu-id="02553-1038">The example displays the following output:</span></span>  
  
```  
28/07/2009  
28/07/09  
28.07.09  
28-07-09  
2009-07-28  
mardi 28 juillet 2009  
28 juil. 09  
28 juillet 2009  
mardi 28 juillet 2009 05:23  
mardi 28 juillet 2009 5:23  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23  
28 juil. 09 5:23  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23  
28 juillet 2009 5:23  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
mardi 28 juillet 2009 05:23:15  
mardi 28 juillet 2009 5:23:15  
mardi 28 juillet 2009 05.23  
mardi 28 juillet 2009 05 h 23  
28 juil. 09 05:23:15  
28 juil. 09 5:23:15  
28 juil. 09 05.23  
28 juil. 09 05 h 23  
28 juillet 2009 05:23:15  
28 juillet 2009 5:23:15  
28 juillet 2009 05.23  
28 juillet 2009 05 h 23  
28/07/2009 05:23  
28/07/2009 5:23  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23  
28/07/09 5:23  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23  
28.07.09 5:23  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23  
28-07-09 5:23  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23  
2009-07-28 5:23  
2009-07-28 05.23  
2009-07-28 05 h 23  
28/07/2009 05:23:15  
28/07/2009 5:23:15  
28/07/2009 05.23  
28/07/2009 05 h 23  
28/07/09 05:23:15  
28/07/09 5:23:15  
28/07/09 05.23  
28/07/09 05 h 23  
28.07.09 05:23:15  
28.07.09 5:23:15  
28.07.09 05.23  
28.07.09 05 h 23  
28-07-09 05:23:15  
28-07-09 5:23:15  
28-07-09 05.23  
28-07-09 05 h 23  
2009-07-28 05:23:15  
2009-07-28 5:23:15  
2009-07-28 05.23  
2009-07-28 05 h 23  
28 juillet  
28 juillet  
2009-07-28T05:23:15.0160000  
2009-07-28T05:23:15.0160000  
Tue, 28 Jul 2009 05:23:15 GMT  
Tue, 28 Jul 2009 05:23:15 GMT  
2009-07-28T05:23:15  
05:23  
5:23  
05.23  
05 h 23  
05:23:15  
5:23:15  
05.23  
05 h 23  
2009-07-28 05:23:15Z  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12:23:15  
mardi 28 juillet 2009 12.23  
mardi 28 juillet 2009 12 h 23  
28 juil. 09 12:23:15  
28 juil. 09 12:23:15  
28 juil. 09 12.23  
28 juil. 09 12 h 23  
28 juillet 2009 12:23:15  
28 juillet 2009 12:23:15  
28 juillet 2009 12.23  
28 juillet 2009 12 h 23  
juillet 2009  
juillet 2009  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1039">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1039">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTimeFormats">
      <MemberSignature Language="C#" Value="public string[] GetDateTimeFormats (char format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDateTimeFormats(char format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDateTimeFormats (format As Char, provider As IFormatProvider) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDateTimeFormats(char format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.GetDateTimeFormats : char * IFormatProvider -&gt; string[]" Usage="dateTime.GetDateTimeFormats (format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Char" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="02553-1040">日期和時間格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1040">A date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1041">物件，提供關於這個執行個體的文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1041">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="02553-1042">將這個執行個體的值轉換為指定的標準日期和時間格式規範和特定文化特性格式資訊所支援的所有字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1042">Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="02553-1043">字串陣列，其中的每個元素都是這個執行個體的值使用其中一個標準日期和時間格式規範所格式化的表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1043">A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1044">格式參數可以是任何的標準日期和時間格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1044">The format parameter can be any of the standard date and time format specifiers.</span></span> <span data-ttu-id="02553-1045">這些包括 d、 D、 f、 F、 g、 G、 M （或 m），O （或 o），R （或 r） s、 t、 T、 u、 U 和 Y （或 y）。</span><span class="sxs-lookup"><span data-stu-id="02553-1045">These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</span></span> <span data-ttu-id="02553-1046">如需詳細資訊，請參閱 <<c0> [ 標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1046">For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span>  
  
 <span data-ttu-id="02553-1047">使用所提供的特定文化特性資訊來格式化傳回值的每個項目`provider`。</span><span class="sxs-lookup"><span data-stu-id="02553-1047">Each element of the return value is formatted using culture-specific information supplied by `provider`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1048">這個方法會使用區分文化特性的資料，因為您不應該假設方法的多個呼叫會傳回相同的資料，除非`provider`是<xref:System.Globalization.CultureInfo>物件，表示文化特性而異。</span><span class="sxs-lookup"><span data-stu-id="02553-1048">Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless `provider` is a <xref:System.Globalization.CultureInfo> object that represents the invariant culture.</span></span> <span data-ttu-id="02553-1049">如果使用者覆寫個別文化特性設定，這個方法所傳回的資料可以變更`provider`或是系統的文化特性的資料更新發生`provider`。</span><span class="sxs-lookup"><span data-stu-id="02553-1049">The data returned by this method can change if the user overrides the individual cultural settings of `provider` or if an update occurs to the system's cultural data for `provider`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1050">下列範例示範<xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1050">The following example demonstrates the <xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="02553-1051">它會顯示用於 FR-FR 文化特性的簡短日期格式規範 ("d") 的日期的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1051">It displays the string representations of a date using the short date format specifier ("d") for the fr-FR culture.</span></span>  
  
 [!code-csharp[DateTime.GetDateTimeFormats#4](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.GetDateTimeFormats/CS/class1.cs#4)]
 [!code-vb[DateTime.GetDateTimeFormats#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.GetDateTimeFormats/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1052"><paramref name="format" /> 不是有效的標準日期和時間格式規範字元。</span><span class="sxs-lookup"><span data-stu-id="02553-1052"><paramref name="format" /> is not a valid standard date and time format specifier character.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1053">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1053">Standard Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dateTime.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1054">傳回這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="02553-1054">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-1055">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="02553-1055">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="dateTime.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1056">傳回實值類型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1056">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1057">列舉常數 <see cref="F:System.TypeCode.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1057">The enumerated constant, <see cref="F:System.TypeCode.DateTime" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public int Hour { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Hour" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Hour" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Hour As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Hour { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Hour : int" Usage="System.DateTime.Hour" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1058">取得這個執行個體所表示日期的小時元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1058">Gets the hour component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1059">小時元件，以 0 到 23 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1059">The hour component, expressed as a value between 0 and 23.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1060">值<xref:System.DateTime.Hour%2A>屬性一律會使用 24 小時制來表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1060">The value of the <xref:System.DateTime.Hour%2A> property is always expressed using a 24-hour clock.</span></span> <span data-ttu-id="02553-1061">若要擷取的字串表示的日期和時間使用 12 小時制的小時，請呼叫<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>或<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法使用"h"自訂格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1061">To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> or <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method with the "h" custom format specifier.</span></span> <span data-ttu-id="02553-1062">例如：</span><span class="sxs-lookup"><span data-stu-id="02553-1062">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Hour#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)]
 [!code-vb[System.DateTime.Hour#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="02553-1063">下列範例示範<xref:System.DateTime.Hour%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1063">The following example demonstrates the <xref:System.DateTime.Hour%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDaylightSavingTime">
      <MemberSignature Language="C#" Value="public bool IsDaylightSavingTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDaylightSavingTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsDaylightSavingTime" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDaylightSavingTime () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDaylightSavingTime();" />
      <MemberSignature Language="F#" Value="member this.IsDaylightSavingTime : unit -&gt; bool" Usage="dateTime.IsDaylightSavingTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1064">指出這個 <see cref="T:System.DateTime" /> 執行個體是否在目前時區的日光節約時間範圍內。</span><span class="sxs-lookup"><span data-stu-id="02553-1064">Indicates whether this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the current time zone.</span></span></summary>
        <returns><span data-ttu-id="02553-1065">當 <see langword="true" /> 屬性的值為 <see cref="P:System.DateTime.Kind" /> 或 <see cref="F:System.DateTimeKind.Local" />，且這個 <see cref="F:System.DateTimeKind.Unspecified" /> 執行個體的值位於當地時區的日光節約時間範圍內時為 <see cref="T:System.DateTime" />；當 <see langword="false" /> 是 <see cref="P:System.DateTime.Kind" /> 時為 <see cref="F:System.DateTimeKind.Utc" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1065"><see langword="true" /> if the value of the <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" /> or <see cref="F:System.DateTimeKind.Unspecified" /> and the value of this instance of <see cref="T:System.DateTime" /> is within the daylight saving time range for the local time zone; <see langword="false" /> if <see cref="P:System.DateTime.Kind" /> is <see cref="F:System.DateTimeKind.Utc" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1066">這個方法會判斷是否目前<xref:System.DateTime>值落在日光節約時間範圍內的當地時區，這由<xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1066">This method determines whether the current <xref:System.DateTime> value falls within the daylight saving time range of the local time zone, which is returned by the <xref:System.TimeZoneInfo.Local%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-1067">您可以判斷是否時區支援日光節約時間擷取的值及其<xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1067">You can determine whether a time zone supports daylight saving time by retrieving the value of its <xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-1068">對於觀察日光節約時間的時區，您可以決定當轉換自日光節約時間，將藉由擷取就會發生<xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType>時區所傳回的陣列<xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1068">For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=nameWithType> array returned by the time zone's <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="02553-1069">如果目前<xref:System.DateTime>值代表當地時區中的模稜兩可或不正確的時間，則方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="02553-1069">If the current <xref:System.DateTime> value represents either an ambiguous or an invalid time in the local time zone, the method returns `false`.</span></span>  
  
 <span data-ttu-id="02553-1070">在 [!INCLUDE[winxp](~/includes/winxp-md.md)]系統<xref:System.DateTime.IsDaylightSavingTime%2A>方法會判斷目前的執行個體是否日光節約時間時，會辨識只在目前的調整規則。</span><span class="sxs-lookup"><span data-stu-id="02553-1070">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.IsDaylightSavingTime%2A> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.</span></span> <span data-ttu-id="02553-1071">如此一來，方法可能不準確地報告目前執行個體是否日光節約時間目前的調整規則生效之前的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1071">As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.TimeZoneInfo.IsDaylightSavingTime(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="IsLeapYear">
      <MemberSignature Language="C#" Value="public static bool IsLeapYear (int year);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLeapYear(int32 year) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.IsLeapYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLeapYear (year As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLeapYear(int year);" />
      <MemberSignature Language="F#" Value="static member IsLeapYear : int -&gt; bool" Usage="System.DateTime.IsLeapYear year" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="02553-1072">4 位數的年份。</span><span class="sxs-lookup"><span data-stu-id="02553-1072">A 4-digit year.</span></span></param>
        <summary><span data-ttu-id="02553-1073">傳回指定年份是否為閏年的指示。</span><span class="sxs-lookup"><span data-stu-id="02553-1073">Returns an indication whether the specified year is a leap year.</span></span></summary>
        <returns><span data-ttu-id="02553-1074">當 <see langword="true" /> 是閏年時為 <paramref name="year" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1074"><see langword="true" /> if <paramref name="year" /> is a leap year; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1075">`year` 指定為 4 位數基底 10 的數字;比方說，1996。</span><span class="sxs-lookup"><span data-stu-id="02553-1075">`year` is specified as a 4-digit base 10 number; for example, 1996.</span></span>  
  
 <span data-ttu-id="02553-1076">`year` 一律解譯為西曆中之年。</span><span class="sxs-lookup"><span data-stu-id="02553-1076">`year` is always interpreted as a year in the Gregorian calendar.</span></span> <span data-ttu-id="02553-1077">若要判斷特定年份是否為閏年中其他行事曆，呼叫月曆物件的`IsLeapYear`方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1077">To determine whether a particular year was a leap year in some other calendar, call that calendar object's `IsLeapYear` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1078">下列範例會使用<xref:System.DateTime.IsLeapYear%2A>方法，以判斷哪些之間 1994年和 2014 年都是閏年。</span><span class="sxs-lookup"><span data-stu-id="02553-1078">The following example uses the <xref:System.DateTime.IsLeapYear%2A> method to determine which years between 1994 and 2014 are leap years.</span></span> <span data-ttu-id="02553-1079">此範例也說明結果時<xref:System.DateTime.AddYears%2A>方法用來將一年新增至為閏日。</span><span class="sxs-lookup"><span data-stu-id="02553-1079">The example also illustrates the result when the <xref:System.DateTime.AddYears%2A> method is used to add a year to a leap day.</span></span>  
  
 [!code-csharp[System.DateTime.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/cs/IsLeapYear1.cs#1)]
 [!code-vb[System.DateTime.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.IsLeapYear/vb/IsLeapYear1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1080"><paramref name="year" /> 小於 1 或大於 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-1080"><paramref name="year" /> is less than 1 or greater than 9999.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public DateTimeKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeKind Kind" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Kind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Kind As DateTimeKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeKind Kind { DateTimeKind get(); };" />
      <MemberSignature Language="F#" Value="member this.Kind : DateTimeKind" Usage="System.DateTime.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1081">取得值，指出這個執行個體表示的時間是根據本地時間、國際標準時間 (UTC)，或兩者皆非。</span><span class="sxs-lookup"><span data-stu-id="02553-1081">Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</span></span></summary>
        <value><span data-ttu-id="02553-1082">一個列舉值，表示目前時間表示的是什麼時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1082">One of the enumeration values that indicates what the current time represents.</span></span> <span data-ttu-id="02553-1083">預設為 <see cref="F:System.DateTimeKind.Unspecified" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1083">The default is <see cref="F:System.DateTimeKind.Unspecified" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1084">您可以明確設定<xref:System.DateTime.Kind%2A>屬性的新<xref:System.DateTime>特定的值<xref:System.DateTimeKind>值，藉由呼叫<xref:System.DateTime.SpecifyKind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1084">You can explicitly set the <xref:System.DateTime.Kind%2A> property of a new <xref:System.DateTime> value to a particular <xref:System.DateTimeKind> value by calling the <xref:System.DateTime.SpecifyKind%2A> method.</span></span>  
  
 <span data-ttu-id="02553-1085"><xref:System.DateTime.Kind%2A>屬性可讓<xref:System.DateTime>值，以清楚地反映 Coordinated Universal Time (UTC) 或本機時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1085">The <xref:System.DateTime.Kind%2A> property allows a <xref:System.DateTime> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.</span></span> <span data-ttu-id="02553-1086">相反地，<xref:System.DateTimeOffset>結構可以明確地反映任何時區中的任何時間為單一點的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1086">In contrast, the <xref:System.DateTimeOffset> structure can unambiguously reflect any time in any time zone as a single point in time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1087">下列範例會使用<xref:System.DateTime.SpecifyKind%2A>方法，示範如何<xref:System.DateTime.Kind%2A>屬性會影響<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>轉換方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1087">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MaxValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxValue : DateTime" Usage="System.DateTime.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1088">代表 <see cref="T:System.DateTime" /> 最大的可能值。</span><span class="sxs-lookup"><span data-stu-id="02553-1088">Represents the largest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="02553-1089">此欄位為唯讀。</span><span class="sxs-lookup"><span data-stu-id="02553-1089">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1090">這個常數的值相當於 23:59:59.9999999 UTC，年 12 月 31 日西曆，00:00:00 UTC，10000 年 1 月 1 日之前的只有一個 100 奈秒刻度中的 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-1090">The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</span></span>  
  
 <span data-ttu-id="02553-1091">有些月曆，這類<xref:System.Globalization.ThaiBuddhistCalendar>，支援早於上方的日期範圍<xref:System.DateTime.MaxValue>。</span><span class="sxs-lookup"><span data-stu-id="02553-1091">Some calendars, such as the <xref:System.Globalization.ThaiBuddhistCalendar>, support an upper date range that is earlier than <xref:System.DateTime.MaxValue>.</span></span> <span data-ttu-id="02553-1092">在這些情況下，嘗試存取<xref:System.DateTime.MaxValue>變數指派或格式化和剖析作業可能會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="02553-1092">In these cases, trying to access <xref:System.DateTime.MaxValue> in variable assignments or formatting and parsing operations can throw an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="02553-1093">而不是擷取的值<xref:System.DateTime.MaxValue?displayProperty=nameWithType>，您可以擷取從指定的文化特性最有效的日期值的<xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1093">Rather than retrieving the value of <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, you can retrieve the value of the specified culture's latest valid date value from the <xref:System.Globalization.Calendar.MaxSupportedDateTime?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1094">下列範例會具現化<xref:System.DateTime>物件，並傳遞其建構函式<xref:System.Int64>值，表示刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-1094">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="02553-1095">然後再叫用建構函式，範例會確保這個值是否大於或等於`DateTime.MinValue.Ticks`且小於或等於`DateTime.MaxValue.Ticks`。</span><span class="sxs-lookup"><span data-stu-id="02553-1095">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="02553-1096">如果沒有，則會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="02553-1096">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DateTime.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public int Millisecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Millisecond" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Millisecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Millisecond As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Millisecond { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Millisecond : int" Usage="System.DateTime.Millisecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1097">取得這個執行個體所表示日期的毫秒元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1097">Gets the milliseconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1098">毫秒元件，以 0 到 999 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1098">The milliseconds component, expressed as a value between 0 and 999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1099">您可以顯示的字串表示<xref:System.DateTime.Millisecond%2A>屬性使用"fff"格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1099">You can display the string representation of the <xref:System.DateTime.Millisecond%2A> property by using the "fff" format specifier.</span></span> <span data-ttu-id="02553-1100">例如，下列程式碼會顯示包含的毫秒數的日期和時間，在主控台中的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1100">For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)]
 [!code-vb[System.DateTime.Millisecond#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)]  
  
 <span data-ttu-id="02553-1101">您也可以使用"o"標準格式規範來顯示與其他元件的日期和時間值的毫秒數元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1101">You can also display the millisecond component together with the other components of a date and time value by using the "o" standard format specifier.</span></span> <span data-ttu-id="02553-1102">例如：</span><span class="sxs-lookup"><span data-stu-id="02553-1102">For example:</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)]
 [!code-vb[System.DateTime.Millisecond#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)]  
  
 <span data-ttu-id="02553-1103">不過，"o"格式規範是較不反覆存取或儲存比顯示<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-1103">However, the "o" format specifier is intended less for displaying than for round-tripping or storing a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-1104">您也可以使用自訂格式字串，如下列範例所示，以顯示與其他日期和時間元件的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-1104">You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</span></span>  
  
 [!code-csharp[System.DateTime.Millisecond#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)]
 [!code-vb[System.DateTime.Millisecond#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="02553-1105">下列範例示範<xref:System.DateTime.Millisecond%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1105">The following example demonstrates the <xref:System.DateTime.Millisecond%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public int Minute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Minute" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Minute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minute As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Minute { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Minute : int" Usage="System.DateTime.Minute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1106">取得這個執行個體所表示日期的分鐘元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1106">Gets the minute component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1107">分鐘元件，以 0 到 59 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1107">The minute component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02553-1108">下列範例示範<xref:System.DateTime.Minute%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1108">The following example demonstrates the <xref:System.DateTime.Minute%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public static readonly DateTime MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime MinValue" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinValue As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime MinValue;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinValue : DateTime" Usage="System.DateTime.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1109">代表 <see cref="T:System.DateTime" /> 最小的可能值。</span><span class="sxs-lookup"><span data-stu-id="02553-1109">Represents the smallest possible value of <see cref="T:System.DateTime" />.</span></span> <span data-ttu-id="02553-1110">此欄位為唯讀。</span><span class="sxs-lookup"><span data-stu-id="02553-1110">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1111">這個常數的值相當於 00:00:00.0000000 UTC，年 1 月 1 日 0001，西曆中。</span><span class="sxs-lookup"><span data-stu-id="02553-1111">The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</span></span>  
  
 <span data-ttu-id="02553-1112"><xref:System.DateTime.MinValue> 定義日期和時間指派到未初始化<xref:System.DateTime>變數。</span><span class="sxs-lookup"><span data-stu-id="02553-1112"><xref:System.DateTime.MinValue> defines the date and time that is assigned to an uninitialized <xref:System.DateTime> variable.</span></span> <span data-ttu-id="02553-1113">下列範例將說明這點。</span><span class="sxs-lookup"><span data-stu-id="02553-1113">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)]
 [!code-vb[System.DateTime.MinValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)]  
  
 <span data-ttu-id="02553-1114"><xref:System.DateTime.MinValue>並<xref:System.DateTime.MaxValue>屬性可用來確保值位於支援的範圍中再傳遞給<xref:System.DateTime>建構函式。</span><span class="sxs-lookup"><span data-stu-id="02553-1114">The <xref:System.DateTime.MinValue> and <xref:System.DateTime.MaxValue> properties can be used to ensure that a value lies within the supported range before passing it to a <xref:System.DateTime> constructor.</span></span> <span data-ttu-id="02553-1115">範例 > 一節中的程式碼說明這個使用方式。</span><span class="sxs-lookup"><span data-stu-id="02553-1115">The code in the Example section illustrates this usage.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1116">下列範例會具現化<xref:System.DateTime>物件，並傳遞其建構函式<xref:System.Int64>值，表示刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-1116">The following example instantiates a <xref:System.DateTime> object by passing its constructor an <xref:System.Int64> value that represents a number of ticks.</span></span> <span data-ttu-id="02553-1117">然後再叫用建構函式，範例會確保這個值是否大於或等於`DateTime.MinValue.Ticks`且小於或等於`DateTime.MaxValue.Ticks`。</span><span class="sxs-lookup"><span data-stu-id="02553-1117">Before invoking the constructor, the example ensures that this value is greater than or equal to `DateTime.MinValue.Ticks` and less than or equal to `DateTime.MaxValue.Ticks`.</span></span> <span data-ttu-id="02553-1118">如果沒有，則會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="02553-1118">If not, it throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 [!code-csharp[System.DateTime.MinValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#2)]
 [!code-vb[System.DateTime.MinValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public int Month { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Month" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Month" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Month As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Month { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Month : int" Usage="System.DateTime.Month" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1119">取得這個執行個體所表示日期的月份元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1119">Gets the month component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1120">月份元件，以 1 到 12 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1120">The month component, expressed as a value between 1 and 12.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02553-1121">下列範例示範<xref:System.DateTime.Month%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1121">The following example demonstrates the <xref:System.DateTime.Month%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Now">
      <MemberSignature Language="C#" Value="public static DateTime Now { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Now" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Now" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Now As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Now { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Now : DateTime" Usage="System.DateTime.Now" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1122">取得 <see cref="T:System.DateTime" /> 物件，此物件會設定為這部電腦上目前的日期和時間，以本地時間表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1122">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the local time.</span></span></summary>
        <value><span data-ttu-id="02553-1123">物件，其值為目前的本地日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1123">An object whose value is the current local date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1124"><xref:System.DateTime.Now%2A>屬性會傳回<xref:System.DateTime>值，表示目前的日期和時間，在本機電腦上的。</span><span class="sxs-lookup"><span data-stu-id="02553-1124">The <xref:System.DateTime.Now%2A> property returns a <xref:System.DateTime> value that represents the current date and time on the local computer.</span></span> <span data-ttu-id="02553-1125">請注意，沒有之間的差異<xref:System.DateTime>值，表示 0001 年 1 月 1 日午夜起已經過的刻度數的字串表示法<xref:System.DateTime>表示的日期和時間值中的值特定-特定文化特性的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1125">Note that there is a difference between a <xref:System.DateTime> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <xref:System.DateTime> value, which expresses a date and time value in a culture-specific-specific format.</span></span> <span data-ttu-id="02553-1126">如需格式的日期和時間值的資訊，請參閱<xref:System.DateTime.ToString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1126">For information on formatting date and time values, see the <xref:System.DateTime.ToString%2A> method.</span></span> <span data-ttu-id="02553-1127">下列範例會顯示簡短日期和時間字串中的特定文化特性格式數字。</span><span class="sxs-lookup"><span data-stu-id="02553-1127">The following example displays the short date and time string in a number of culture-specific formats.</span></span>  
  
 [!code-cpp[System.DateTime.Now#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)]
 [!code-csharp[System.DateTime.Now#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)]
 [!code-vb[System.DateTime.Now#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)]  
  
 <span data-ttu-id="02553-1128">這個屬性的解析取決於系統計時器，這取決於基礎作業系統。</span><span class="sxs-lookup"><span data-stu-id="02553-1128">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="02553-1129">它通常是介於 0.5 至 15 毫秒。</span><span class="sxs-lookup"><span data-stu-id="02553-1129">It tends to be between 0.5 and 15 milliseconds.</span></span> <span data-ttu-id="02553-1130">如此一來，重複呼叫<xref:System.DateTime.Now%2A>屬性在短時間間隔內，例如內嵌的迴圈，可能會傳回相同的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1130">As a result, repeated calls to the <xref:System.DateTime.Now%2A> property in a short time interval, such as in a loop, may return the same value.</span></span>  
  
 <span data-ttu-id="02553-1131"><xref:System.DateTime.Now%2A>屬性經常用來測量效能。</span><span class="sxs-lookup"><span data-stu-id="02553-1131">The <xref:System.DateTime.Now%2A> property is frequently used to measure performance.</span></span> <span data-ttu-id="02553-1132">不過，因為其低的解析度，而不適合用為效能評定工具。</span><span class="sxs-lookup"><span data-stu-id="02553-1132">However, because of its low resolution, it is not suitable for use as a benchmarking tool.</span></span> <span data-ttu-id="02553-1133">更好的替代做法是使用<xref:System.Diagnostics.Stopwatch>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-1133">A better alternative is to use the <xref:System.Diagnostics.Stopwatch> class.</span></span>  
  
 <span data-ttu-id="02553-1134">從.NET Framework 2.0 版開始，傳回值是<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>屬性會傳回<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1134">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1135">您也可以使用<xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType>屬性來擷取目前本機日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1135">You can also use the <xref:System.DateTimeOffset.Now%2A?displayProperty=nameWithType> property to retrieve the current local date and time.</span></span> <span data-ttu-id="02553-1136">它可讓以明確表示為單點的時間，接著該時間使值成為可攜式跨電腦的當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1136">It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1137">下列範例會使用<xref:System.DateTime.Now%2A>和<xref:System.DateTime.UtcNow%2A>屬性，以擷取目前本機日期和時間和目前的通用協調 (UTC) 日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1137">The following example uses the <xref:System.DateTime.Now%2A> and <xref:System.DateTime.UtcNow%2A> properties to retrieve the current local date and time and the current universal coordinated (UTC) date and time.</span></span> <span data-ttu-id="02553-1138">然後會使用數字文化特性的格式化慣例的值，以及顯示字串，其<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1138">It then uses the formatting conventions of a number of cultures to display the strings, along with the values of the their <xref:System.DateTime.Kind%2A> properties.</span></span>  
  
 [!code-cpp[System.DateTime.Now#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now2.cpp#3)]
 [!code-csharp[System.DateTime.Now#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now2.cs#3)]
 [!code-vb[System.DateTime.Now#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.Now" />
        <altmember cref="P:System.DateTime.UtcNow" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static DateTime operator + (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Addition(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Addition(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator +(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( + ) : DateTime * TimeSpan -&gt; DateTime" Usage="d + t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="02553-1139">要加上的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-1139">The date and time value to add.</span></span></param>
        <param name="t"><span data-ttu-id="02553-1140">要加入的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1140">The time interval to add.</span></span></param>
        <summary><span data-ttu-id="02553-1141">將指定的日期和時間加上指定的時間間隔，產生新的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1141">Adds a specified time interval to a specified date and time, yielding a new date and time.</span></span></summary>
        <returns><span data-ttu-id="02553-1142">物件，這個物件是 <paramref name="d" /> 和 <paramref name="t" /> 之值的總和。</span><span class="sxs-lookup"><span data-stu-id="02553-1142">An object that is the sum of the values of <paramref name="d" /> and <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="02553-1143">這個運算子的對等方法是 <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1143">The equivalent method for this operator is <xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="02553-1144">下列範例會示範加法運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-1144">The following example demonstrates the addition operator.</span></span>  
  
 [!code-cpp[DateTime Operators#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#1)]
 [!code-csharp[DateTime Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#1)]
 [!code-vb[DateTime Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1145">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1145">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Add(System.TimeSpan)" />
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-1146">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-1146">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Equality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : DateTime * DateTime -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="02553-1147">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1147">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="02553-1148">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1148">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-1149">判斷 <see cref="T:System.DateTime" /> 的兩個指定執行個體是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-1149">Determines whether two specified instances of <see cref="T:System.DateTime" /> are equal.</span></span></summary>
        <returns><span data-ttu-id="02553-1150">當 <see langword="true" /> 和 <paramref name="d1" /> 代表相同的日期和時間時為 <paramref name="d2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1150"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1151"><xref:System.DateTime.op_Equality%2A>運算子會判斷兩個<xref:System.DateTime>藉由比較其刻度數的值是否相等。</span><span class="sxs-lookup"><span data-stu-id="02553-1151">The <xref:System.DateTime.op_Equality%2A> operator determines whether two <xref:System.DateTime> values are equal by comparing their number of ticks.</span></span> <span data-ttu-id="02553-1152">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1152">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1153">只要比較其 <xref:System.DateTime.Kind%2A> 屬性的值，即可做到這一點。</span><span class="sxs-lookup"><span data-stu-id="02553-1153">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1154">這個運算子的對等方法是 <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1154">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="02553-1155">下列範例示範等號比較運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-1155">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[DateTime Operators#2](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime Operators/CPP/class1.cpp#2)]
 [!code-csharp[DateTime Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime Operators/CS/class1.cs#2)]
 [!code-vb[DateTime Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime Operators/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Equals(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="02553-1156">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1156">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="02553-1157">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1157">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-1158">判斷某個指定的 <see cref="T:System.DateTime" /> 是否晚於另一個指定的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1158">Determines whether one specified <see cref="T:System.DateTime" /> is later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1159">當 <see langword="true" /> 晚於 <paramref name="t1" /> 時為 <paramref name="t2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1159"><see langword="true" /> if <paramref name="t1" /> is later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1160"><xref:System.DateTime.op_GreaterThan%2A>運算子會判斷兩個之間的關聯性<xref:System.DateTime>藉由比較其刻度數的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1160">The <xref:System.DateTime.op_GreaterThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="02553-1161">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1161">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1162">只要比較其 <xref:System.DateTime.Kind%2A> 屬性的值，即可做到這一點。</span><span class="sxs-lookup"><span data-stu-id="02553-1162">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1163">這個運算子的對等方法是 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1163">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_GreaterThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &gt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="02553-1164">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1164">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="02553-1165">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1165">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-1166">判斷某個指定之 <see cref="T:System.DateTime" /> 表示的是同於還是晚於另一個指定之 <see cref="T:System.DateTime" /> 的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1166">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or later than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1167">當 <see langword="true" /> 與 <paramref name="t1" /> 為同時或更晚時為 <paramref name="t2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1167"><see langword="true" /> if <paramref name="t1" /> is the same as or later than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1168"><xref:System.DateTime.op_GreaterThanOrEqual%2A>運算子會判斷兩個之間的關聯性<xref:System.DateTime>藉由比較其刻度數的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1168">The <xref:System.DateTime.op_GreaterThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="02553-1169">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1169">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1170">只要比較其 <xref:System.DateTime.Kind%2A> 屬性的值，即可做到這一點。</span><span class="sxs-lookup"><span data-stu-id="02553-1170">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1171">這個運算子的對等方法是 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1171">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Inequality(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As DateTime, d2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : DateTime * DateTime -&gt; bool" Usage="System.DateTime.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="02553-1172">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1172">The first object to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="02553-1173">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1173">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-1174">判斷 <see cref="T:System.DateTime" /> 的兩個指定執行個體是否不相等。</span><span class="sxs-lookup"><span data-stu-id="02553-1174">Determines whether two specified instances of <see cref="T:System.DateTime" /> are not equal.</span></span></summary>
        <returns><span data-ttu-id="02553-1175">當 <see langword="true" /> 和 <paramref name="d1" /> 不代表相同的日期和時間時為 <paramref name="d2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1175"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not represent the same date and time; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1176"><xref:System.DateTime.op_Inequality%2A>運算子會判斷兩個<xref:System.DateTime>值是否不相等比較它們的刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-1176">The <xref:System.DateTime.op_Inequality%2A> operator determines whether two <xref:System.DateTime> values are not equal by comparing their number of ticks.</span></span> <span data-ttu-id="02553-1177">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1177">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1178">只要比較其 <xref:System.DateTime.Kind%2A> 屬性的值，即可做到這一點。</span><span class="sxs-lookup"><span data-stu-id="02553-1178">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1179">這個運算子的對等方法是 <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1179">The equivalent method for this operator is <xref:System.DateTime.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThan(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt; t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="02553-1180">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1180">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="02553-1181">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1181">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-1182">判斷某個指定的 <see cref="T:System.DateTime" /> 是否早於另一個指定的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1182">Determines whether one specified <see cref="T:System.DateTime" /> is earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1183">當 <see langword="true" /> 早於 <paramref name="t1" /> 時為 <paramref name="t2" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1183"><see langword="true" /> if <paramref name="t1" /> is earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1184"><xref:System.DateTime.op_LessThan%2A>運算子會判斷兩個之間的關聯性<xref:System.DateTime>藉由比較其刻度數的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1184">The <xref:System.DateTime.op_LessThan%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="02553-1185">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1185">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1186">只要比較其 <xref:System.DateTime.Kind%2A> 屬性的值，即可做到這一點。</span><span class="sxs-lookup"><span data-stu-id="02553-1186">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1187">這個運算子的對等方法是 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1187">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (DateTime t1, DateTime t2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.DateTime t1, valuetype System.DateTime t2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_LessThanOrEqual(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (t1 As DateTime, t2 As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(DateTime t1, DateTime t2);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : DateTime * DateTime -&gt; bool" Usage="t1 &lt;= t2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t1" Type="System.DateTime" />
        <Parameter Name="t2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="t1"><span data-ttu-id="02553-1188">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1188">The first object to compare.</span></span></param>
        <param name="t2"><span data-ttu-id="02553-1189">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1189">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="02553-1190">判斷某個指定之 <see cref="T:System.DateTime" /> 表示的是同於還是早於另一個指定之 <see cref="T:System.DateTime" /> 的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1190">Determines whether one specified <see cref="T:System.DateTime" /> represents a date and time that is the same as or earlier than another specified <see cref="T:System.DateTime" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1191">當 <paramref name="t1" /> 與 <paramref name="t2" /> 為同時或更早時為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1191"><see langword="true" /> if <paramref name="t1" /> is the same as or earlier than <paramref name="t2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1192"><xref:System.DateTime.op_LessThanOrEqual%2A>運算子會判斷兩個之間的關聯性<xref:System.DateTime>藉由比較其刻度數的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1192">The <xref:System.DateTime.op_LessThanOrEqual%2A> operator determines the relationship between two <xref:System.DateTime> values by comparing their number of ticks.</span></span> <span data-ttu-id="02553-1193">比較之前<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1193">Before comparing <xref:System.DateTime> objects, make sure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1194">只要比較其 <xref:System.DateTime.Kind%2A> 屬性的值，即可做到這一點。</span><span class="sxs-lookup"><span data-stu-id="02553-1194">You can do this by comparing the values of their <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1195">這個運算子的對等方法是 <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1195">The equivalent method for this operator is <xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.CompareTo(System.DateTime)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Subtraction">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-1196">從指定的 <see cref="T:System.DateTime" /> 減去指定的 <see cref="T:System.DateTime" /> 或 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1196">Subtracts a specified <see cref="T:System.DateTime" /> or<see cref="T:System.TimeSpan" /> from a specified <see cref="T:System.DateTime" />.</span></span></summary>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static TimeSpan operator - (DateTime d1, DateTime d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.TimeSpan op_Subtraction(valuetype System.DateTime d1, valuetype System.DateTime d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d1 As DateTime, d2 As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan operator -(DateTime d1, DateTime d2);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * DateTime -&gt; TimeSpan" Usage="d1 - d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.DateTime" />
        <Parameter Name="d2" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="02553-1197">位於減號左邊的日期和時間值 (被減數)。</span><span class="sxs-lookup"><span data-stu-id="02553-1197">The date and time value to subtract from (the minuend).</span></span></param>
        <param name="d2"><span data-ttu-id="02553-1198">位於減號右邊的日期和時間值 (減數)。</span><span class="sxs-lookup"><span data-stu-id="02553-1198">The date and time value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="02553-1199">將另一個指定的日期和時間減去指定的日期和時間，並傳回時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1199">Subtracts a specified date and time from another specified date and time and returns a time interval.</span></span></summary>
        <returns><span data-ttu-id="02553-1200"><paramref name="d1" /> 和 <paramref name="d2" /> 之間的時間間隔，也就是 <paramref name="d1" /> 減 <paramref name="d2" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1200">The time interval between <paramref name="d1" /> and <paramref name="d2" />; that is, <paramref name="d1" /> minus <paramref name="d2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1201"><xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29>方法不會考慮值<xref:System.DateTime.Kind%2A>兩個屬性<xref:System.DateTime>值時執行減法運算。</span><span class="sxs-lookup"><span data-stu-id="02553-1201">The <xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="02553-1202">再減去<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1202">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1203">否則，結果將包含時間的時區之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1203">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1204"><xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType>方法會考量執行減法運算時的時區之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1204">The <xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
 <span data-ttu-id="02553-1205">這個運算子的對等方法是 <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1205">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="02553-1206">下列範例示範<xref:System.DateTime.Subtract%2A>方法和減法運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-1206">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.Subtract(System.DateTime)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-1207">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-1207">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static DateTime operator - (DateTime d, TimeSpan t);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.DateTime op_Subtraction(valuetype System.DateTime d, valuetype System.TimeSpan t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.op_Subtraction(System.DateTime,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (d As DateTime, t As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime operator -(DateTime d, TimeSpan t);" />
      <MemberSignature Language="F#" Value="static member ( - ) : DateTime * TimeSpan -&gt; DateTime" Usage="d - t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.DateTime" />
        <Parameter Name="t" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="02553-1208">位於減號左邊的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-1208">The date and time value to subtract from.</span></span></param>
        <param name="t"><span data-ttu-id="02553-1209">要減去的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1209">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="02553-1210">將指定的日期和時間減去指定的時間間隔，並傳回新的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1210">Subtracts a specified time interval from a specified date and time and returns a new date and time.</span></span></summary>
        <returns><span data-ttu-id="02553-1211">物件，其值為 <paramref name="d" /> 值減掉 <paramref name="t" /> 值的差異值。</span><span class="sxs-lookup"><span data-stu-id="02553-1211">An object whose value is the value of <paramref name="d" /> minus the value of <paramref name="t" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1212">這個方法值減去刻度`t`刻度值`d`。</span><span class="sxs-lookup"><span data-stu-id="02553-1212">This method subtracts the ticks value of `t` from the ticks value of `d`.</span></span>  
  
 <span data-ttu-id="02553-1213">這個運算子的對等方法是 <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1213">The equivalent method for this operator is <xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="02553-1214">下列範例示範<xref:System.DateTime.Subtract%2A>方法和減法運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-1214">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1215">產生的 <see cref="T:System.DateTime" /> 小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1215">The resulting <see cref="T:System.DateTime" /> is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.DateTime.Subtract(System.TimeSpan)" />
        <altmember cref="P:System.DateTime.Ticks" />
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-1216">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-1216">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-1217">將日期和時間的字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1217">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1218">本節內容：</span><span class="sxs-lookup"><span data-stu-id="02553-1218">In this section:</span></span>  
  
- [<span data-ttu-id="02553-1219">我呼叫的方法？</span><span class="sxs-lookup"><span data-stu-id="02553-1219">Which method do I call?</span></span>](#Tasks)
- [<span data-ttu-id="02553-1220">要剖析的字串</span><span class="sxs-lookup"><span data-stu-id="02553-1220">The string to parse</span></span>](#StringToParse)
- [<span data-ttu-id="02553-1221">剖析和文化特性的慣例</span><span class="sxs-lookup"><span data-stu-id="02553-1221">Parsing and cultural conventions</span></span>](#Culture)
- [<span data-ttu-id="02553-1222">剖析和樣式項目</span><span class="sxs-lookup"><span data-stu-id="02553-1222">Parsing and style elements</span></span>](#Styles)
- [<span data-ttu-id="02553-1223">傳回值和 DateTime.Kind</span><span class="sxs-lookup"><span data-stu-id="02553-1223">The return value and DateTime.Kind</span></span>](#kind)
 
<a name="Tasks"></a>   
### <a name="which-method-do-i-call"></a><span data-ttu-id="02553-1224">我呼叫的方法？</span><span class="sxs-lookup"><span data-stu-id="02553-1224">Which method do I call?</span></span>  
  
|<span data-ttu-id="02553-1225">以</span><span class="sxs-lookup"><span data-stu-id="02553-1225">To</span></span>|<span data-ttu-id="02553-1226">Call</span><span class="sxs-lookup"><span data-stu-id="02553-1226">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="02553-1227">使用目前文化特性的慣例來剖析日期和時間的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1227">Parse a date and time string by using the conventions of the current culture.</span></span>|<span data-ttu-id="02553-1228"><xref:System.DateTime.Parse%28System.String%29> 多載</span><span class="sxs-lookup"><span data-stu-id="02553-1228"><xref:System.DateTime.Parse%28System.String%29> overload</span></span>|  
|<span data-ttu-id="02553-1229">使用特定文化特性的慣例，以剖析日期和時間的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1229">Parse a date and time string by using the conventions of a specific culture.</span></span>|<span data-ttu-id="02553-1230"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 多載 (請參閱[剖析和文化習俗](#Culture))</span><span class="sxs-lookup"><span data-stu-id="02553-1230"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> overload (see [Parsing and Cultural Conventions](#Culture))</span></span>|  
|<span data-ttu-id="02553-1231">剖析日期和時間的字串使用特殊的樣式項目 （例如空白字元或不含空白）。</span><span class="sxs-lookup"><span data-stu-id="02553-1231">Parse a date and time string with special style elements (such as white space or no white space).</span></span>|<span data-ttu-id="02553-1232"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 多載</span><span class="sxs-lookup"><span data-stu-id="02553-1232"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="02553-1233">剖析日期和時間的字串必須以特定格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1233">Parse a date and time string that must be in a particular format.</span></span>|<span data-ttu-id="02553-1234"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 或 <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1234"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType></span></span>|
|<span data-ttu-id="02553-1235">剖析日期和時間的字串，並執行轉換為 UTC 或本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1235">Parse a date and time string and perform a conversion to UTC or local time.</span></span>|<span data-ttu-id="02553-1236"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> 多載</span><span class="sxs-lookup"><span data-stu-id="02553-1236"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload</span></span>|  
|<span data-ttu-id="02553-1237">剖析日期和時間的字串，而不需要處理的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="02553-1237">Parse a date and time string without handling exceptions.</span></span>|<span data-ttu-id="02553-1238"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="02553-1238"><xref:System.DateTime.TryParse%2A?displayProperty=nameWithType> method</span></span>|  
|<span data-ttu-id="02553-1239">還原執行格式化作業 （來回） 建立的日期和時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-1239">Restore (round-trip) a date and time value created by a formatting operation.</span></span>|<span data-ttu-id="02553-1240">傳遞的"o"或"r"標準格式字串<xref:System.DateTime.ToString%28System.String%29>方法，並呼叫<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>多載 <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="02553-1240">Pass the "o" or "r" standard format string to the <xref:System.DateTime.ToString%28System.String%29> method, and call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload with <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType></span></span>|  
|<span data-ttu-id="02553-1241">剖析固定格式的日期和時間字串跨電腦 （和可能的文化特性） 的界限。</span><span class="sxs-lookup"><span data-stu-id="02553-1241">Parse a date and time string in a fixed format across machine (and possibly cultural) boundaries.</span></span>|<span data-ttu-id="02553-1242"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> 或<xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType>方法</span><span class="sxs-lookup"><span data-stu-id="02553-1242"><xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> or <xref:System.DateTime.TryParseExact%2A?displayProperty=nameWithType> method</span></span>|  
  
<a name="StringToParse"></a>   
### <a name="the-string-to-parse"></a><span data-ttu-id="02553-1243">要剖析的字串</span><span class="sxs-lookup"><span data-stu-id="02553-1243">The string to parse</span></span>  
 <span data-ttu-id="02553-1244"><xref:System.DateTime.Parse%2A>方法會嘗試將日期和時間值的字串表示轉換成其<xref:System.DateTime>相等。</span><span class="sxs-lookup"><span data-stu-id="02553-1244">The <xref:System.DateTime.Parse%2A> method tries to convert the string representation of a date and time value to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="02553-1245">它會嘗試將輸入的字串完全剖析而不擲回<xref:System.FormatException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="02553-1245">It tries to parse the input string completely without throwing a <xref:System.FormatException> exception.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1246">如果剖析作業失敗，因為無法辨識的字串格式，所以<xref:System.DateTime.Parse%2A>方法會擲回<xref:System.FormatException>，而<xref:System.DateTime.TryParse%2A>方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="02553-1246">If the parsing operation fails because of an unrecognized string format, the <xref:System.DateTime.Parse%2A> method throws a <xref:System.FormatException>, whereas the <xref:System.DateTime.TryParse%2A> method returns `false`.</span></span> <span data-ttu-id="02553-1247">因為例外狀況處理可能很耗費資源，您應該使用<xref:System.DateTime.Parse%2A>當預期在剖析作業成功，因為輸入的來源是受信任。</span><span class="sxs-lookup"><span data-stu-id="02553-1247">Because exception handling can be expensive, you should use <xref:System.DateTime.Parse%2A> when the parsing operation is expected to succeed because the input source is trusted.</span></span> <span data-ttu-id="02553-1248"><xref:System.DateTime.TryParse%2A> 當剖析失敗有可能，特別是因為輸入的來源不受信任，或您有合理的預設值來取代未成功剖析的字串，則會是偏好。</span><span class="sxs-lookup"><span data-stu-id="02553-1248"><xref:System.DateTime.TryParse%2A> is preferable when parsing failures are likely, particularly because an input source is not trusted, or you have reasonable default values to substitute for strings that do not parse successfully.</span></span>   

 <span data-ttu-id="02553-1249">要剖析的字串可以採用任何下列形式：</span><span class="sxs-lookup"><span data-stu-id="02553-1249">The string to be parsed can take any of the following forms:</span></span>  
  
-   <span data-ttu-id="02553-1250">含有日期和時間元件的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1250">A string with a date and a time component.</span></span>  
  
-   <span data-ttu-id="02553-1251">含日期，但沒有時間部分的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1251">A string with a date but no time component.</span></span> <span data-ttu-id="02553-1252">如果時間元件不存在，則方法會假設午夜 12:00。</span><span class="sxs-lookup"><span data-stu-id="02553-1252">If the time component is absent, the method assumes 12:00 midnight.</span></span> <span data-ttu-id="02553-1253">如果日期元件有兩位數年份，則會轉換成根據年份<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>目前的文化特性的現行曆法或指定的文化特性的現行曆法的 (如果您使用多載具有非 null`provider`引數)。</span><span class="sxs-lookup"><span data-stu-id="02553-1253">If the date component has a two-digit year, it is converted to a year based on the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> of the current culture's current calendar or the specified culture's current calendar (if you use an overload with a non-null `provider` argument).</span></span>  
  
- <span data-ttu-id="02553-1254">字串，包含只月份和年份的日期元件，但沒有日元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1254">A string with a date component that includes only the month and the year but no day component.</span></span> <span data-ttu-id="02553-1255">此方法會假設每月的第一天。</span><span class="sxs-lookup"><span data-stu-id="02553-1255">The method assumes the first day of the month.</span></span>

- <span data-ttu-id="02553-1256">字串，包含每月和日的日期元件，但沒有年元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1256">A string with a date component that includes only the month and the day but no year component.</span></span> <span data-ttu-id="02553-1257">此方法會假設目前的年份。</span><span class="sxs-lookup"><span data-stu-id="02553-1257">The method assumes the current year.</span></span>

-   <span data-ttu-id="02553-1258">包含時間但不含日期項目的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1258">A string with a time but no date component.</span></span> <span data-ttu-id="02553-1259">此方法假設目前的日期，除非您呼叫<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>多載，並包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>在`styles`引數，在其中案例的方法會假設年 1 月 1 日的日期以 0001。</span><span class="sxs-lookup"><span data-stu-id="02553-1259">The method assumes the current date unless you call the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>  

- <span data-ttu-id="02553-1260">字串，具有時間元件，其中包含在一小時和 AM/PM 指示項，與任何日期元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1260">A string with a time component that includes only the hour and an AM/PM designator, with no date component.</span></span> <span data-ttu-id="02553-1261">此方法會假設目前的日期和時間與沒有分鐘和不含秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-1261">The method assumes the current date and a time with no minutes and no seconds.</span></span> <span data-ttu-id="02553-1262">您可以變更此行為，藉由呼叫<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>多載，並包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>在`styles`引數，在其中案例的方法會假設年 1 月 1 日的日期以 0001。</span><span class="sxs-lookup"><span data-stu-id="02553-1262">You can change this behavior by calling the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload and include <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> in the `styles` argument, in which case the method assumes a date of January 1, 0001.</span></span>

-   <span data-ttu-id="02553-1263">字串，包含時區資訊，並符合 ISO 8601 標準。</span><span class="sxs-lookup"><span data-stu-id="02553-1263">A string that includes time zone information and conforms to ISO 8601.</span></span> <span data-ttu-id="02553-1264">在下列範例中，第一個字串將指定 Coordinated Universal Time (UTC) 和第二個指定的時間相差七個小時的時區中早於 UTC:</span><span class="sxs-lookup"><span data-stu-id="02553-1264">In the following examples, the first string designates Coordinated Universal Time (UTC), and the second designates the time in a time zone that's seven hours earlier than UTC:</span></span>  
  
    <span data-ttu-id="02553-1265">"2008-11-01T19:35:00.0000000Z"</span><span class="sxs-lookup"><span data-stu-id="02553-1265">"2008-11-01T19:35:00.0000000Z"</span></span>   
    <span data-ttu-id="02553-1266">"2008-11-01T19:35:00.0000000-07:00"</span><span class="sxs-lookup"><span data-stu-id="02553-1266">"2008-11-01T19:35:00.0000000-07:00"</span></span>  
  
-   <span data-ttu-id="02553-1267">字串，包含 GMT 指示項，並符合 RFC 1123 時間格式;例如：</span><span class="sxs-lookup"><span data-stu-id="02553-1267">A string that includes the GMT designator and conforms to the RFC 1123 time format; for example:</span></span>  
  
     <span data-ttu-id="02553-1268">「 2008 年 11 月 01 日，星期六格林威治時間 19:35:00"</span><span class="sxs-lookup"><span data-stu-id="02553-1268">"Sat, 01 Nov 2008 19:35:00 GMT"</span></span>  
  
-   <span data-ttu-id="02553-1269">字串，其中包含的日期和時間的時區位移的資訊; 以及例如：</span><span class="sxs-lookup"><span data-stu-id="02553-1269">A string that includes the date and time along with time zone offset information; for example:</span></span>  
  
     <span data-ttu-id="02553-1270">"03/01/2009 05:42:00 -5:00"</span><span class="sxs-lookup"><span data-stu-id="02553-1270">"03/01/2009 05:42:00 -5:00"</span></span>  

<span data-ttu-id="02553-1271">下列範例會使用目前的文化特性，在此案例中是 EN-US 文化特性的格式化慣例來剖析中每種格式的字串：</span><span class="sxs-lookup"><span data-stu-id="02553-1271">The following example parses strings in each of these formats by using the formatting conventions of the current culture, which in this case is the en-US culture:</span></span>

[!code-csharp-interactive[Default parsing](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse6.cs)]
[!code-vb[Default parsing](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse6.vb)]  
  
 <span data-ttu-id="02553-1272">如果輸入的字串代表閏年中為閏日，在使用之曆法所剖析的方法 (請參閱[剖析和文化特性的慣例](#Culture))，則<xref:System.DateTime.Parse%2A>方法已成功剖析字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1272">If the input string represents a leap day in a leap year in the calendar used by the parsing method (see [Parsing and cultural conventions](#Culture)), the <xref:System.DateTime.Parse%2A> method parses the string successfully.</span></span> <span data-ttu-id="02553-1273">如果輸入的字串代表為閏日在非為閏年，則方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="02553-1273">If the input string represents a leap day in a non-leap year, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="02553-1274">因為<xref:System.DateTime.Parse%2A>方法會嘗試剖析日期字串表示，並使用目前或指定的文化特性，嘗試將字串剖析跨不同的文化特性的格式化規則的時間可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-1274">Because the <xref:System.DateTime.Parse%2A> method tries to parse the string representation of a date and time by using the formatting rules of the current or a specified culture, trying to parse a string across different cultures can fail.</span></span> <span data-ttu-id="02553-1275">若要剖析的特定日期和時間格式，在不同的地區設定，使用其中一個多載<xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType>方法，並提供格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1275">To parse a specific date and time format across different locales, use one of the overloads of the <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> method and provide a format specifier.</span></span>  
  
<a name="Culture"></a>   
### <a name="parsing-and-cultural-conventions"></a><span data-ttu-id="02553-1276">剖析和文化特性的慣例</span><span class="sxs-lookup"><span data-stu-id="02553-1276">Parsing and cultural conventions</span></span>  
 <span data-ttu-id="02553-1277">所有多載<xref:System.DateTime.Parse%2A>方法會區分文化特性除非要剖析的字串 (表示`s`下表) 符合 ISO 8601 模式。</span><span class="sxs-lookup"><span data-stu-id="02553-1277">All overloads of the <xref:System.DateTime.Parse%2A> method are culture-sensitive unless the string to be parsed (which is represented by `s` in the following table) conforms to the ISO 8601 pattern.</span></span> <span data-ttu-id="02553-1278">剖析作業所使用的格式設定資訊中<xref:System.Globalization.DateTimeFormatInfo>物件衍生，如下所示：</span><span class="sxs-lookup"><span data-stu-id="02553-1278">The parsing operation uses the formatting information in a <xref:System.Globalization.DateTimeFormatInfo> object that is derived as follows:</span></span>  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

|<span data-ttu-id="02553-1279">如果您呼叫</span><span class="sxs-lookup"><span data-stu-id="02553-1279">If you call</span></span>|<span data-ttu-id="02553-1280">和`provider`是</span><span class="sxs-lookup"><span data-stu-id="02553-1280">And `provider` is</span></span>|<span data-ttu-id="02553-1281">格式設定資訊衍生自</span><span class="sxs-lookup"><span data-stu-id="02553-1281">Formatting information is derived from</span></span>|  
|-----------------|-----------------------|--------------------------------------------|  
|<xref:System.DateTime.Parse%28System.String%29>|-|<span data-ttu-id="02553-1282">目前執行緒文化特性 (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>屬性)</span><span class="sxs-lookup"><span data-stu-id="02553-1282">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="02553-1283"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="02553-1283"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="02553-1284">A<xref:System.Globalization.DateTimeFormatInfo>物件</span><span class="sxs-lookup"><span data-stu-id="02553-1284">a <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|<span data-ttu-id="02553-1285">指定<xref:System.Globalization.DateTimeFormatInfo>物件</span><span class="sxs-lookup"><span data-stu-id="02553-1285">The specified <xref:System.Globalization.DateTimeFormatInfo> object</span></span>|  
|<span data-ttu-id="02553-1286"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="02553-1286"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|`null`|<span data-ttu-id="02553-1287">目前執行緒文化特性 (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>屬性)</span><span class="sxs-lookup"><span data-stu-id="02553-1287">The current thread culture (<xref:System.Globalization.DateTimeFormatInfo.CurrentInfo%2A?displayProperty=nameWithType> property)</span></span>|  
|<span data-ttu-id="02553-1288"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="02553-1288"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="02553-1289">A<xref:System.Globalization.CultureInfo>物件</span><span class="sxs-lookup"><span data-stu-id="02553-1289">a <xref:System.Globalization.CultureInfo> object</span></span>|<span data-ttu-id="02553-1290"><xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> 屬性</span><span class="sxs-lookup"><span data-stu-id="02553-1290">The <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property</span></span>|  
|<span data-ttu-id="02553-1291"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> 或 <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span><span class="sxs-lookup"><span data-stu-id="02553-1291"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29> or <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29></span></span>|<span data-ttu-id="02553-1292">自訂<xref:System.IFormatProvider>實作</span><span class="sxs-lookup"><span data-stu-id="02553-1292">Custom <xref:System.IFormatProvider> implementation</span></span>|<span data-ttu-id="02553-1293"><xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> 方法</span><span class="sxs-lookup"><span data-stu-id="02553-1293">The <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method</span></span>|  
  
 <span data-ttu-id="02553-1294">當格式化資訊衍生自<xref:System.Globalization.DateTimeFormatInfo>物件，<xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType>屬性會定義剖析作業中所使用的行事曆。</span><span class="sxs-lookup"><span data-stu-id="02553-1294">When formatting information is derived from a <xref:System.Globalization.DateTimeFormatInfo> object, the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=nameWithType> property defines the calendar used in the parsing operation.</span></span>  
  
 <span data-ttu-id="02553-1295">如果您使用來剖析日期和時間字串<xref:System.Globalization.DateTimeFormatInfo>物件以自訂不同於標準的文化特性的設定，請使用<xref:System.DateTime.ParseExact%2A>方法，而非<xref:System.DateTime.Parse%2A>方法，以提升成功轉換的機率。</span><span class="sxs-lookup"><span data-stu-id="02553-1295">If you parse a date and time string by using a <xref:System.Globalization.DateTimeFormatInfo> object with customized settings that are different from those of a standard culture, use the <xref:System.DateTime.ParseExact%2A> method instead of the <xref:System.DateTime.Parse%2A> method to improve the chances for a successful conversion.</span></span> <span data-ttu-id="02553-1296">非標準日期和時間字串可以是複雜且很難剖析。</span><span class="sxs-lookup"><span data-stu-id="02553-1296">A non-standard date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="02553-1297"><xref:System.DateTime.Parse%2A>方法會嘗試剖析的字串與數個隱含的剖析模式，其中都可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-1297">The <xref:System.DateTime.Parse%2A> method tries to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="02553-1298">相反地，<xref:System.DateTime.ParseExact%2A>方法需要您明確地指定一或多個實際的剖析模式可能會成功。</span><span class="sxs-lookup"><span data-stu-id="02553-1298">In contrast, the <xref:System.DateTime.ParseExact%2A> method requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span> <span data-ttu-id="02553-1299">如需詳細資訊，請參閱中的 < DateTimeFormatInfo 和動態資料 > 一節<xref:System.Globalization.DateTimeFormatInfo>主題。</span><span class="sxs-lookup"><span data-stu-id="02553-1299">For more information, see the "DateTimeFormatInfo and Dynamic Data" section in the <xref:System.Globalization.DateTimeFormatInfo> topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1300">請注意特定文化特性的格式化慣例是動態的而且可能會受到變更影響。</span><span class="sxs-lookup"><span data-stu-id="02553-1300">Note that the formatting conventions for a particular culture are dynamic and can be subject to change.</span></span> <span data-ttu-id="02553-1301">這表示，依賴預設值 （目前） 的文化特性或格式設定慣例的剖析作業指定<xref:System.IFormatProvider>代表文化特性而異的文化特性以外的物件可能會發生下列任一項非預期地失敗：</span><span class="sxs-lookup"><span data-stu-id="02553-1301">This means that parsing operations that depend on the formatting conventions of the default (current) culture or that specify an <xref:System.IFormatProvider> object that represents a culture other than the invariant culture can unexpectedly fail if any of the following occurs:</span></span>  
>   
> -   <span data-ttu-id="02553-1302">.NET Framework 的或現有的.NET framework 版本的更新結果的主要或次要版本之間已經變更的特定文化特性的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1302">The culture-specific data has changed between major or minor versions of the .NET Framework or as the result of an update to the existing version of the .NET Framework.</span></span>  
> -   <span data-ttu-id="02553-1303">特定文化特性的資料會反映使用者喜好設定，電腦或工作階段而有所不同。</span><span class="sxs-lookup"><span data-stu-id="02553-1303">The culture-specific data reflects user preferences, which can vary from machine to machine or session to session.</span></span>  
> -   <span data-ttu-id="02553-1304">特定文化特性的資料代表取代的文化特性來覆寫標準文化特性或自訂的文化特性的設定。</span><span class="sxs-lookup"><span data-stu-id="02553-1304">The culture-specific data represents a replacement culture that overrides the settings of a standard culture or a custom culture.</span></span>  
>   
>  <span data-ttu-id="02553-1305">若要避免在剖析日期和時間的字串與文化特性的資料變更相關聯的問題，您就可以使用文化特性而異，來剖析日期和時間字串，或您可以呼叫<xref:System.DateTime.ParseExact%2A>或<xref:System.DateTime.TryParseExact%2A>方法並指定確切的格式要剖析的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1305">To prevent the difficulties in parsing data and time strings that are associated with changes in cultural data, you can parse date and time strings by using the invariant culture, or you can call the <xref:System.DateTime.ParseExact%2A> or <xref:System.DateTime.TryParseExact%2A> method and specify the exact format of the string to be parsed.</span></span> <span data-ttu-id="02553-1306">如果您要序列化和還原序列化日期和時間資料，您可以使用的格式化慣例的文化特性而異，或您可以序列化和還原序列化<xref:System.DateTime>以二進位格式的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1306">If you are serializing and deserializing date and time data, you can either use the formatting conventions of the invariant culture, or you can serialize and deserialize the <xref:System.DateTime> value in a binary format.</span></span>  
>   
>  <span data-ttu-id="02553-1307">如需詳細資訊，請參閱 「 動態的文化特性資料 」 一節<xref:System.Globalization.CultureInfo>主題和 「 持續性的 DateTime 值 」 一節中<xref:System.DateTime>主題。</span><span class="sxs-lookup"><span data-stu-id="02553-1307">For more information see the "Dynamic culture data" section in the <xref:System.Globalization.CultureInfo> topic and the "Persisting DateTime values" section in the <xref:System.DateTime> topic.</span></span>  
  
<a name="Styles"></a>   
### <a name="parsing-and-style-elements"></a><span data-ttu-id="02553-1308">剖析和樣式項目</span><span class="sxs-lookup"><span data-stu-id="02553-1308">Parsing and style elements</span></span>  
 <span data-ttu-id="02553-1309">所有<xref:System.DateTime.Parse%2A>多載略過前置、 內部或尾端空格字元，輸入字串中的 (表示`s`下表中)。</span><span class="sxs-lookup"><span data-stu-id="02553-1309">All <xref:System.DateTime.Parse%2A> overloads ignore leading, inner, or trailing white-space characters in the input string (which is represented by `s` in the following table).</span></span> <span data-ttu-id="02553-1310">日期和時間可以是一組的開頭和尾端數字符號字元 （"#"，U + 0023），而且必須尾隨一或多個 NULL 字元 (U + 0000)。</span><span class="sxs-lookup"><span data-stu-id="02553-1310">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ("#", U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="02553-1311">颾魤 ㄛ<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>多載具有`styles`參數所組成的一或多個成員<xref:System.Globalization.DateTimeStyles>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="02553-1311">In addition, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> overload has a `styles` parameter that consists of one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration.</span></span> <span data-ttu-id="02553-1312">此參數會定義如何`s`應解譯和剖析作業應該如何將轉換`s`日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1312">This parameter defines how `s` should be interpreted and how the parse operation should convert `s` to a date and time.</span></span> <span data-ttu-id="02553-1313">下表描述每個效果<xref:System.Globalization.DateTimeStyles>在剖析作業的成員。</span><span class="sxs-lookup"><span data-stu-id="02553-1313">The following table describes the effect of each <xref:System.Globalization.DateTimeStyles> member on the parse operation.</span></span>  
  
|<span data-ttu-id="02553-1314">DateTimeStyles 成員</span><span class="sxs-lookup"><span data-stu-id="02553-1314">DateTimeStyles member</span></span>|<span data-ttu-id="02553-1315">在轉換的效果</span><span class="sxs-lookup"><span data-stu-id="02553-1315">Effect on conversion</span></span>|  
|---------------------------|--------------------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="02553-1316">剖析`s`而且，如果有需要，將它轉換成 UTC，，如下所示：</span><span class="sxs-lookup"><span data-stu-id="02553-1316">Parses `s` and, if necessary, converts it to UTC, as follows:</span></span><br /><br /> <span data-ttu-id="02553-1317">-如果`s`包含時區時差，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeLocal>旗標，這個方法會剖析字串，呼叫<xref:System.DateTime.ToUniversalTime%2A>轉換傳回<xref:System.DateTime>值UTC，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1317">-   If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="02553-1318">-如果`s`表示它代表 UTC，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeUniversal>旗標，方法剖析字串，會執行任何時區轉換對傳回<xref:System.DateTime>值，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1318">-   If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span><br /><span data-ttu-id="02553-1319">-在所有其他的情況下，此旗標會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="02553-1319">-   In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="02553-1320">這個值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-1320">This value is ignored.</span></span> <span data-ttu-id="02553-1321">內部空白字元一律允許的日期和時間項目中`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1321">Inner white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="02553-1322">這個值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-1322">This value is ignored.</span></span> <span data-ttu-id="02553-1323">中的日期和時間項目一律允許前置空白字元`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1323">Leading white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="02553-1324">這個值會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-1324">This value is ignored.</span></span> <span data-ttu-id="02553-1325">中的日期和時間項目一律允許尾端泛空白字元`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1325">Trailing white space is always permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="02553-1326">指定`s`可能包含前置、 內部和尾端空白字元。</span><span class="sxs-lookup"><span data-stu-id="02553-1326">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="02553-1327">這是預設行為。</span><span class="sxs-lookup"><span data-stu-id="02553-1327">This is the default behavior.</span></span> <span data-ttu-id="02553-1328">它不能覆寫透過提供更具限制性<xref:System.Globalization.DateTimeStyles>列舉值，例如<xref:System.Globalization.DateTimeStyles.None>。</span><span class="sxs-lookup"><span data-stu-id="02553-1328">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="02553-1329">指定當`s`缺少會假設任何時區資訊時，本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1329">Specifies that if `s` lacks any time zone information, local time is assumed.</span></span> <span data-ttu-id="02553-1330">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>旗標已存在，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>值設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1330">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="02553-1331">指定當`s`缺少會假設任何時區資訊，UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1331">Specifies that if `s` lacks any time zone information, UTC is assumed.</span></span> <span data-ttu-id="02553-1332">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>旗標存在，則方法會將轉換傳回<xref:System.DateTime>值與 UTC 於當地時間和設定其<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1332">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="02553-1333">雖然有效，但會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="02553-1333">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="02553-1334">針對包含時區資訊的字串，會嘗試防止日期和時間字串轉換成<xref:System.DateTime>值，表示本地時間，和其<xref:System.DateTime.Kind%2A>屬性設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1334">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value that represents a local time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1335">一般而言，這類字串由呼叫<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法並使用"o"、"r"或"u"標準格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1335">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method and by using the "o", "r", or "u" standard format specifier.</span></span>|  

<a name="kind"></a>   
### <a name="the-return-value-and-datetimekind"></a><span data-ttu-id="02553-1336">傳回值和 DateTime.Kind</span><span class="sxs-lookup"><span data-stu-id="02553-1336">The return value and DateTime.Kind</span></span>

<span data-ttu-id="02553-1337">`DateTime.Parse`多載會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind>屬性包含時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1337">The `DateTime.Parse` overloads return a <xref:System.DateTime> value whose <xref:System.DateTime.Kind> property includes time zone information.</span></span> <span data-ttu-id="02553-1338">它可能表示，時間：</span><span class="sxs-lookup"><span data-stu-id="02553-1338">It can indicate that the time is:</span></span>

- <span data-ttu-id="02553-1339">國際標準時間 (<xref:System.DateTimeKind.Utc?displayProperty=fullName>)。</span><span class="sxs-lookup"><span data-stu-id="02553-1339">Coordinated Universal Time (<xref:System.DateTimeKind.Utc?displayProperty=fullName>).</span></span>
- <span data-ttu-id="02553-1340">在當地時區的時間 (<xref:System.DateTimeKind.Local?displayProperty=fullName>)。</span><span class="sxs-lookup"><span data-stu-id="02553-1340">The time in the local time zone (<xref:System.DateTimeKind.Local?displayProperty=fullName>).</span></span>
- <span data-ttu-id="02553-1341">未知的時區時間 (xref:System.DateTimeKind.Unspecified?displayProperty=fullName >)。</span><span class="sxs-lookup"><span data-stu-id="02553-1341">The time in an unknown time zone (xref:System.DateTimeKind.Unspecified?displayProperty=fullName>).</span></span>
 
 <span data-ttu-id="02553-1342">一般而言，<xref:System.DateTime.Parse%2A>方法會傳回<xref:System.DateTime>物件，其<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1342">Generally, the <xref:System.DateTime.Parse%2A> method returns a <xref:System.DateTime> object whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1343">不過，<xref:System.DateTime.Parse%2A>方法也可能會在執行時區轉換，並將值<xref:System.DateTime.Kind%2A>屬性以不同的方式，根據的值`s`和`styles`參數：</span><span class="sxs-lookup"><span data-stu-id="02553-1343">However, the <xref:System.DateTime.Parse%2A> method may also perform time zone conversion and set the value of the <xref:System.DateTime.Kind%2A> property differently, depending on the values of the `s` and `styles` parameters:</span></span>  
  
|<span data-ttu-id="02553-1344">如果</span><span class="sxs-lookup"><span data-stu-id="02553-1344">If</span></span>|<span data-ttu-id="02553-1345">時區轉換</span><span class="sxs-lookup"><span data-stu-id="02553-1345">Time zone conversion</span></span>|<span data-ttu-id="02553-1346">類型屬性</span><span class="sxs-lookup"><span data-stu-id="02553-1346">Kind property</span></span>|  
|--------|--------------------------|-------------------|  
|<span data-ttu-id="02553-1347">`s` 包含時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1347">`s` contains time zone information.</span></span>|<span data-ttu-id="02553-1348">日期和時間是以當地時區轉換為的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1348">The date and time is converted to the time in the local time zone.</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|  
|<span data-ttu-id="02553-1349">`s` 包含時區資訊，以及`styles`包含<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>旗標。</span><span class="sxs-lookup"><span data-stu-id="02553-1349">`s` contains time zone information, and `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag.</span></span>|<span data-ttu-id="02553-1350">日期和時間會轉換為 Coordinated Universal Time (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-1350">The date and time is converted to Coordinated Universal Time (UTC).</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
|<span data-ttu-id="02553-1351">`s` 包含 Z 或 GMT 的時區指示項，並`styles`包含<xref:System.Globalization.DateTimeStyles.RoundtripKind>旗標。</span><span class="sxs-lookup"><span data-stu-id="02553-1351">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag.</span></span>|<span data-ttu-id="02553-1352">日期和時間視為 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1352">The date and time are interpreted as UTC.</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|  
  
 <span data-ttu-id="02553-1353">下列範例會將日期字串，包含以當地時區的時區資訊的時間：</span><span class="sxs-lookup"><span data-stu-id="02553-1353">The following example converts date strings that contain time zone information to the time in the local time zone:</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse2.cs#2)]
 [!code-vb[System.DateTime.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse2.vb#2)]  

  <span data-ttu-id="02553-1354">您也可以保留的日期和時間的值<xref:System.DateTime.Kind%2A>屬性的格式設定和使用剖析作業期間<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="02553-1354">You can also preserve the value of a date and time's <xref:System.DateTime.Kind%2A> property during a formatting and parsing operation by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="02553-1355">下列範例說明如何<xref:System.Globalization.DateTimeStyles.RoundtripKind>旗標會影響剖析的作業上<xref:System.DateTime>使用"o"、"r"或"u"格式規範會轉換為字串的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1355">The following example illustrates how the <xref:System.Globalization.DateTimeStyles.RoundtripKind> flag affects the parsing operation on <xref:System.DateTime> values that are converted to strings by using the "o", "r", or "u" format specifier.</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse5.cs#5)]
 [!code-vb[System.DateTime.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse5.vb#5)]  
  
### Examples

<span data-ttu-id="02553-1356">呼叫的數個範例`DateTime.Parse`方法散佈整個[備註](#remarks)這篇文章，並在個別的文件中的區段`DateTime.Parse`多載。</span><span class="sxs-lookup"><span data-stu-id="02553-1356">Numerous examples that call the `DateTime.Parse` method are interspersed throughout the [Remarks](#remarks) section of this article and in the documentation for the individual `DateTime.Parse` overloads.</span></span>

[!INCLUDE[interactive-note](~/includes/csharp-interactive-with-utc-note.md)]

<span data-ttu-id="02553-1357">您也可以下載一組完整的`DateTime.Parse`中所包含的範例[適用於 C# 的.NET Core 2.0 專案](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip)並[適用於 Visual Basic.NET Core 2.0 專案](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip)，從[dotnet /範例 GitHub 儲存機制](https://github.com/dotnet/samples)。</span><span class="sxs-lookup"><span data-stu-id="02553-1357">You can also download a complete set of `DateTime.Parse` examples, which are included in a [.NET Core 2.0 project for C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/DateTime.Parse.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/DateTime.Parse.zip), from the [dotnet/samples GitHub repository](https://github.com/dotnet/samples).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
        <altmember cref="Overload:System.DateTime.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; DateTime" Usage="System.DateTime.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1358">字串，包含要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1358">A string that contains a date and time to convert.</span></span> <span data-ttu-id="02553-1359">如需詳細資訊，請參閱[要剖析的字串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="02553-1359">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <summary><span data-ttu-id="02553-1360">使用目前執行緒文化特性的慣例，將日期和時間的字串表示轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1360">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using the conventions of the current thread culture.</span></span></summary>
        <returns><span data-ttu-id="02553-1361">物件，與 <paramref name="s" /> 中包含的日期和時間相等。</span><span class="sxs-lookup"><span data-stu-id="02553-1361">An object that is equivalent to the date and time contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="02553-1362">如果`s`包含時區資訊，這個方法會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>，並將轉換的日期和時間在`s`為當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1362">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="02553-1363">否則，它會執行任何時區轉換，並傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1363">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="02553-1364">這個多載會嘗試剖析`s`使用目前文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-1364">This overload attempts to parse `s` by using the formatting conventions of the current culture.</span></span> <span data-ttu-id="02553-1365">目前的文化特性會由<xref:System.Globalization.CultureInfo.CurrentCulture>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1365">The current culture is indicated by the <xref:System.Globalization.CultureInfo.CurrentCulture> property.</span></span> <span data-ttu-id="02553-1366">若要使用之特定文化特性的格式化慣例將字串剖析，呼叫<xref:System.DateTime.Parse(System.String,System.IFormatProvider)>或<xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)>多載。</span><span class="sxs-lookup"><span data-stu-id="02553-1366">To parse a string using the formatting conventions of a specific culture, call the <xref:System.DateTime.Parse(System.String,System.IFormatProvider)> or the <xref:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)> overloads.</span></span>

<span data-ttu-id="02553-1367">這個多載會嘗試剖析`s`使用<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="02553-1367">This overload attempts to parse `s` by using <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="02553-1368">範例</span><span class="sxs-lookup"><span data-stu-id="02553-1368">Example</span></span>

<span data-ttu-id="02553-1369">下列範例會剖析由數個日期和時間值的字串表示法：</span><span class="sxs-lookup"><span data-stu-id="02553-1369">The following example parses the string representation of several date and time values by:</span></span>

- <span data-ttu-id="02553-1370">使用預設的格式提供者，提供用來產生輸出範例中的電腦的目前執行緒文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-1370">Using the default format provider, which provides the formatting conventions of the current thread culture of the computer used to produce the example output.</span></span> <span data-ttu-id="02553-1371">此範例的輸出會反映 EN-US 文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-1371">The output from this example reflects the formatting conventions of the en-US culture.</span></span>

- <span data-ttu-id="02553-1372">使用預設樣式值，亦即<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1372">Using the default style value, which is <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWIthType>.</span></span> 

<span data-ttu-id="02553-1373">它會處理<xref:System.FormatException>當方法嘗試使用其他文化特性剖析的日期和時間的字串表示時，會擲回的例外狀況的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-1373">It handles the <xref:System.FormatException> exception that is thrown when the method tries to parse the string representation of a date and time by using some other culture's formatting conventions.</span></span> <span data-ttu-id="02553-1374">它也會示範如何成功地剖析日期和時間值，不會使用目前執行緒文化特性的格式化慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-1374">It also shows how to successfully parse a date and time value that does not use the formatting conventions of the current thread culture.</span></span>  
  
 [!code-csharp-interactive[System.DateTime.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.DateTime.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse1.vb#1)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1375"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1375"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1376"><paramref name="s" /> 不包含日期與時間的有效字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1376"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-1377">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-1377">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1378">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1378">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1379">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1379">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1380">字串，包含要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1380">A string that contains a date and time to convert.</span></span> <span data-ttu-id="02553-1381">如需詳細資訊，請參閱[要剖析的字串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="02553-1381">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1382">提供關於 <paramref name="s" /> 之特定文化特性格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1382">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="02553-1383">請參閱[剖析和文化特性慣例](#Culture)</span><span class="sxs-lookup"><span data-stu-id="02553-1383">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <summary><span data-ttu-id="02553-1384">使用特定文化特性格式資訊，將日期和時間的字串表示轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1384">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="02553-1385">物件，與 <paramref name="s" /> 中包含的日期和時間相等，如 <paramref name="provider" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1385">An object that is equivalent to the date and time contained in <paramref name="s" /> as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="02553-1386">如果`s`包含時區資訊，這個方法會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>，並將轉換的日期和時間在`s`為當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1386">If `s` contains time zone information, this method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> and converts the date and time in `s` to local time.</span></span> <span data-ttu-id="02553-1387">否則，它會執行任何時區轉換，並傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1387">Otherwise, it performs no time zone conversion and returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span>

<span data-ttu-id="02553-1388">這個多載會嘗試剖析`s`使用<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType>樣式。</span><span class="sxs-lookup"><span data-stu-id="02553-1388">This overload attempts to parse `s` by using the <xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces?displayProperty=nameWithType> style.</span></span>

## <a name="example"></a><span data-ttu-id="02553-1389">範例</span><span class="sxs-lookup"><span data-stu-id="02553-1389">Example</span></span>

<span data-ttu-id="02553-1390">下列範例會使用 EN-US、 FR-FR 和 DE-DE 文化特性的慣例來剖析日期字串的陣列。</span><span class="sxs-lookup"><span data-stu-id="02553-1390">The following example parses an array of date strings by using the conventions of the en-US, fr-FR, and de-DE cultures.</span></span> <span data-ttu-id="02553-1391">它會示範單一日期的字串表示可以以不同方式解譯跨不同的文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1391">It demonstrates that the string representations of a single date can be interpreted differently across different cultures.</span></span>  
  
[!code-csharp-interactive[System.DateTime.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse3.cs#3)]
[!code-vb[System.DateTime.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1392"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1392"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1393"><paramref name="s" /> 不包含日期與時間的有效字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1393"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-1394">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-1394">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1395">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1395">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1396">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1396">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider = null, System.Globalization.DateTimeStyles styles = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional provider As IFormatProvider = null, Optional styles As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1397">包含要剖析字串的記憶體範圍。</span><span class="sxs-lookup"><span data-stu-id="02553-1397">The memory span that contains the string to parse.</span></span> <span data-ttu-id="02553-1398">如需詳細資訊，請參閱[要剖析的字串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="02553-1398">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1399">提供關於 <paramref name="s" /> 之特定文化特性格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1399">An object that supplies culture-specific format information about <paramref name="s" />.</span></span>  <span data-ttu-id="02553-1400">請參閱[剖析和文化特性慣例](#Culture)</span><span class="sxs-lookup"><span data-stu-id="02553-1400">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="02553-1401">列舉值的位元組合，表示可以在 <paramref name="s" /> 中出現使剖析作業成功，以及定義如何解譯剖析的日期與目前時區或目前日期之間關聯性的樣式項目。</span><span class="sxs-lookup"><span data-stu-id="02553-1401">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="02553-1402">一般會指定的值是 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1402">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="02553-1403">使用文化特定格式資訊及格式化樣式，將包含日期與時間字串表示的記憶體範圍轉換成相等 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1403">Converts a memory span that contains string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="02553-1404">物件，與 <paramref name="s" /> 中包含的日期和時間相等，如 <paramref name="provider" /> 和 <paramref name="styles" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1404">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1405"><paramref name="s" /> 不包含日期與時間的有效字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1405"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-1406"><paramref name="styles" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合。</span><span class="sxs-lookup"><span data-stu-id="02553-1406"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="02553-1407">如需範例，請參閱 <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 與 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1407">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime Parse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider, styles As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime Parse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.Parse (s, provider, styles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1408">字串，包含要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1408">A string that contains a date and time to convert.</span></span> <span data-ttu-id="02553-1409">如需詳細資訊，請參閱[要剖析的字串](#StringToParse)。</span><span class="sxs-lookup"><span data-stu-id="02553-1409">See [The string to parse](#StringToParse) for more information.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1410">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1410">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span>  <span data-ttu-id="02553-1411">請參閱[剖析和文化特性慣例](#Culture)</span><span class="sxs-lookup"><span data-stu-id="02553-1411">See [Parsing and cultural conventions](#Culture)</span></span></param>
        <param name="styles"><span data-ttu-id="02553-1412">列舉值的位元組合，表示可以在 <paramref name="s" /> 中出現使剖析作業成功，以及定義如何解譯剖析的日期與目前時區或目前日期之間關聯性的樣式項目。</span><span class="sxs-lookup"><span data-stu-id="02553-1412">A bitwise combination of the enumeration values that indicates the style elements that can be present in <paramref name="s" /> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="02553-1413">一般會指定的值是 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1413">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="02553-1414">使用特定文化特性格式資訊及格式樣式，將日期和時間的字串表示轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1414">Converts the string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent by using culture-specific format information and a formatting style.</span></span></summary>
        <returns><span data-ttu-id="02553-1415">物件，與 <paramref name="s" /> 中包含的日期和時間相等，如 <paramref name="provider" /> 和 <paramref name="styles" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1415">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="provider" /> and <paramref name="styles" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="02553-1416">這個方法多載會將轉換的日期和時間`s`，並設定<xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值，如下所示：</span><span class="sxs-lookup"><span data-stu-id="02553-1416">This method overload converts the date and time in `s` and sets the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value as follows:</span></span>

|<span data-ttu-id="02553-1417">如果</span><span class="sxs-lookup"><span data-stu-id="02553-1417">If</span></span> |<span data-ttu-id="02553-1418">時區轉換</span><span class="sxs-lookup"><span data-stu-id="02553-1418">Time zone conversion</span></span>|<span data-ttu-id="02553-1419">類型屬性</span><span class="sxs-lookup"><span data-stu-id="02553-1419">Kind property</span></span>|   
|-----|-----|-----|  
|<span data-ttu-id="02553-1420">`s` 不包含時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1420">`s` contains no time zone information.</span></span>|<span data-ttu-id="02553-1421">無。</span><span class="sxs-lookup"><span data-stu-id="02553-1421">None.</span></span>|<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>|
|<span data-ttu-id="02553-1422">`s` 包含時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1422">`s` contains time zone information.</span></span>|<span data-ttu-id="02553-1423">當地時區的時間</span><span class="sxs-lookup"><span data-stu-id="02553-1423">To the time in the local time zone</span></span>|<xref:System.DateTimeKind.Local?displayProperty=nameWithType>|
|<span data-ttu-id="02553-1424">`s` 包含時區資訊和 ' 樣式包含<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="02553-1424">`s` contains time zone information, and \`styles includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag.</span></span>|<span data-ttu-id="02553-1425">為國際標準時間 (UTC)</span><span class="sxs-lookup"><span data-stu-id="02553-1425">To Coordinated Universal Time (UTC)</span></span>|<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>|
|<span data-ttu-id="02553-1426">`s` 包含 Z 或 GMT 的時區指示項，並`styles`包含<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1426">`s` contains the Z or GMT time zone designator, and `styles` includes the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>.</span></span>|<span data-ttu-id="02553-1427">無。</span><span class="sxs-lookup"><span data-stu-id="02553-1427">None.</span></span>|<xref:System.DateTimeKind.Utc>| 

## <a name="example"></a><span data-ttu-id="02553-1428">範例</span><span class="sxs-lookup"><span data-stu-id="02553-1428">Example</span></span>

<span data-ttu-id="02553-1429">下列範例示範<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法，並顯示的值<xref:System.DateTime.Kind%2A>屬性產生<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-1429">The following example demonstrates the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method and displays the value of the <xref:System.DateTime.Kind%2A> property of the resulting <xref:System.DateTime> values.</span></span>  
  
[!code-csharp-interactive[System.DateTime.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Parse/cs/Parse4.cs#4)]
[!code-vb[System.DateTime.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Parse/vb/Parse4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1430"><paramref name="s" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1430"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1431"><paramref name="s" /> 不包含日期與時間的有效字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1431"><paramref name="s" /> does not contain a valid string representation of a date and time.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-1432"><paramref name="styles" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合。</span><span class="sxs-lookup"><span data-stu-id="02553-1432"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="02553-1433">如需範例，請參閱 <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 與 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1433">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <altmember cref="Overload:System.DateTime.TryParse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-1434">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-1434">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1435">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1435">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1436">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1436">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-round-trip-date-and-time-values.md"><span data-ttu-id="02553-1437">如何：反覆存取日期和時間值</span><span class="sxs-lookup"><span data-stu-id="02553-1437">How to: Round-trip Date and Time Values</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-1438">將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1438">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="02553-1439">字串表示的格式必須完全符合指定的格式，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="02553-1439">The format of the string representation must match a specified format exactly or an exception is thrown.</span></span></summary>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1440">字串，包含要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1440">A string that contains a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="02553-1441">格式規範，其定義 <paramref name="s" /> 所需的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1441">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="02553-1442">如需詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="02553-1442">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1443">提供關於 <paramref name="s" /> 之特定文化特性格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1443">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="02553-1444">使用指定的格式以及特定文化特性的格式資訊，將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1444">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format and culture-specific format information.</span></span> <span data-ttu-id="02553-1445">字串表示的格式必須完全符合指定的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1445">The format of the string representation must match the specified format exactly.</span></span></summary>
        <returns><span data-ttu-id="02553-1446">物件，與 <paramref name="s" /> 中包含的日期和時間相等，如 <paramref name="format" /> 和 <paramref name="provider" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1446">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1447"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType>方法會剖析所定義的格式必須是日期的字串表示`format`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-1447">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="02553-1448">它也需要\<日期 > 和\<時間 > 日期和時間的字串表示的項目會出現在所指定的順序`format`，且`s`不有非允許的任何空白字元`format`.</span><span class="sxs-lookup"><span data-stu-id="02553-1448">It also requires that the \<Date> and \<Time> elements of the string representation of a date and time appear in the order specified by `format`, and that `s` have no white space other than that permitted by `format`.</span></span> <span data-ttu-id="02553-1449">如果`format`定義日期使用任何時間元素，而剖析作業成功時，所產生的<xref:System.DateTime>值具有午夜的時間 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="02553-1449">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="02553-1450">如果`format`所定義的時間沒有任何日期項目和剖析作業成功時，產生<xref:System.DateTime>值具有日期`DateTime.Now.Date`。</span><span class="sxs-lookup"><span data-stu-id="02553-1450">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a date of `DateTime.Now.Date`.</span></span>  
  
 <span data-ttu-id="02553-1451">如果`s`不的代表時間以特定的時區和剖析作業成功時，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>的值是<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1451">If `s` does not represent a time in a particular time zone and the parse operation succeeds, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1452">如果`s`確實代表特定時區的時間和`format`可讓要有的時區資訊 (例如，如果`format`等於"o"、"r"或"u"標準格式規範，或如果它包含"z"、"zz"或"zzz"自訂格式規範），<xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>值是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1452">If `s` does represent the time in a particular time zone and `format` allows time zone information to be present (for example, if `format` is equal to the "o", "r", or "u" standard format specifiers, or if it contains the "z", "zz", or "zzz" custom format specifiers), the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="02553-1453">`format`參數是包含單一標準格式規範或一或多個自訂格式規範會定義所需的格式字串`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1453">The `format` parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of `s`.</span></span> <span data-ttu-id="02553-1454">如需有效的格式化程式碼的詳細資訊，請參閱[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)或是[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1454">For details about valid formatting codes, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) or [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1455">如果`format`是不包含日期或時間的分隔符號 （例如 「 yyyyMMddHHmm")，使用的文化特性而異的自訂格式模式`provider`參數和廣泛形式的每個自訂格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1455">If `format` is a custom format pattern that does not include date or time separators (such as "yyyyMMddHHmm"), use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="02553-1456">例如，如果您想要的格式模式中指定的時數，指定更多表單中，"HH"，而非較窄的表單，"H"。</span><span class="sxs-lookup"><span data-stu-id="02553-1456">For example, if you want to specify hours in the format pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="02553-1457">特定日期和時間的符號和字串 （例如在特定的語言中一周天數名稱） 中使用`s`所定義`provider`參數，因為是精確的格式`s`如果`format`是標準格式指定名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1457">The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="02553-1458">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-1458">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-1459">A<xref:System.Globalization.CultureInfo>物件，表示用來解譯的文化特性`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1459">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="02553-1460"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件及其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>屬性定義的符號和格式設定在`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1460">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="02553-1461">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1461">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-1462">自訂<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1462">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-1463">如果`provider`已`null`，則<xref:System.Globalization.CultureInfo>使用對應至目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1463">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1464">下列範例示範<xref:System.DateTime.ParseExact%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1464">The following example demonstrates the <xref:System.DateTime.ParseExact%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/ParseExact1.cs#1)]
 [!code-vb[System.DateTime.ParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/ParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1465"><paramref name="s" /> 或 <paramref name="format" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1465"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1466"><paramref name="s" /> 或 <paramref name="format" /> 為空字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1466"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="02553-1467">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1467">-or-</span></span> 
 <span data-ttu-id="02553-1468"><paramref name="s" /> 不包含與 <paramref name="format" /> 中所指定之模式對應的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1468"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="02553-1469">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1469">-or-</span></span> 
<span data-ttu-id="02553-1470">小時元件和 <paramref name="s" /> 中的 AM/PM 指示項不相符。</span><span class="sxs-lookup"><span data-stu-id="02553-1470">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1471">在  [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，則<see cref="Overload:System.DateTime.ParseExact" />方法會擲回<see cref="T:System.FormatException" />小時元件和 AM/PM 指示項不在協議中，如果包含要剖析的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1471">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="02553-1472">在 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]和舊版本中，AM/PM 指示項會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-1472">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-1473">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-1473">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1474">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1474">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1475">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1475">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style = System.Globalization.DateTimeStyles.None);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, Optional style As DateTimeStyles = System.Globalization.DateTimeStyles.None) As DateTime" />
      <MemberSignature Language="F#" Value="static member ParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, format, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1476">字串，含有要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1476">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="02553-1477">格式規範，其定義 <paramref name="s" /> 所需的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1477">A format specifier that defines the required format of <paramref name="s" />.</span></span> <span data-ttu-id="02553-1478">如需詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="02553-1478">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1479">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1479">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="02553-1480">列舉值的位元組合，提供有關 <paramref name="s" />、可以出現在 <paramref name="s" /> 中的樣式項目，或是從 <paramref name="s" /> 轉換成 <see cref="T:System.DateTime" /> 值的詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1480">A bitwise combination of the enumeration values that provides additional information about <paramref name="s" />, about style elements that may be present in <paramref name="s" />, or about the conversion from <paramref name="s" /> to a <see cref="T:System.DateTime" /> value.</span></span> <span data-ttu-id="02553-1481">一般會指定的值是 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1481">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="02553-1482">使用指定的格式、特定文化特性格式資訊以及樣式，將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1482">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="02553-1483">字串表示的格式必須完全符合指定的格式，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="02553-1483">The format of the string representation must match the specified format exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="02553-1484">物件，與 <paramref name="s" /> 中包含的日期和時間相等，如 <paramref name="format" />、<paramref name="provider" /> 和 <paramref name="style" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1484">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="format" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1485"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法會剖析中所定義的格式必須是日期的字串表示`format`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-1485">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="02553-1486">它也要求中的日期和時間元素`s`出現在所指定的順序`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-1486">It also requires that the date and time elements in `s` appear in the order specified by `format`.</span></span> <span data-ttu-id="02553-1487">如果`s`不符合的模式`format`參數，所定義的任何變化`style`參數，此方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="02553-1487">If `s` does not match the pattern of the `format` parameter, with any variations defined by the `style` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="02553-1488">相反地，<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法會剖析任何一種格式提供者所辨識的格式的日期的字串表示<xref:System.Globalization.DateTimeFormatInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1488">In contrast, the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date in any one of the formats recognized by the format provider's <xref:System.Globalization.DateTimeFormatInfo> object.</span></span> <span data-ttu-id="02553-1489"><xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法也可讓日期和時間的項目中`s`依任何順序出現。</span><span class="sxs-lookup"><span data-stu-id="02553-1489">The <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method also allows the date and time elements in `s` to appear in any order.</span></span>  
  
 <span data-ttu-id="02553-1490">如果`s`參數會包含只有一次，而且沒有日期，目前的日期是除非`style`參數包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>旗標，在此情況下的預設日期 (`DateTime.Date.MinValue`) 使用。</span><span class="sxs-lookup"><span data-stu-id="02553-1490">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="02553-1491">如果`s`參數會包含只有日期任何時間、 午夜 (00: 00:00) 使用。</span><span class="sxs-lookup"><span data-stu-id="02553-1491">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="02553-1492">`style`參數也會決定是否`s`參數可以包含前置字元、 內部或結尾的空白字元。</span><span class="sxs-lookup"><span data-stu-id="02553-1492">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="02553-1493">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1493">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1494">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，就會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>並<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標，以傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1494">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1495">如果`s`包含時區資訊的時間會轉換為當地時間，如有必要，和<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1495">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1496">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>旗標不轉換為當地時間的 Coordinated Universal Time (UTC)，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1496">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02553-1497">`format`參數會定義所需的模式`s`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-1497">The `format` parameter defines the required pattern of the `s` parameter.</span></span> <span data-ttu-id="02553-1498">也可以包含從一或多個自訂格式規範[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)資料表或單一標準格式規範，它會識別預先定義的模式中，從[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)資料表。</span><span class="sxs-lookup"><span data-stu-id="02553-1498">It can consist of either one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="02553-1499">如果您不使用日期或時間分隔符號的自訂格式模式中，使用的文化特性而異`provider`參數和廣泛形式的每個自訂格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1499">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="02553-1500">例如，如果您想要在模式中指定的時數，指定更多表單中，"HH"，而非較窄的表單，"H"。</span><span class="sxs-lookup"><span data-stu-id="02553-1500">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1501">不需要可`s`符合單一格式的剖析作業成功，您可以呼叫<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法並指定多個允許的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1501">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="02553-1502">這可讓剖析作業更容易成功。</span><span class="sxs-lookup"><span data-stu-id="02553-1502">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="02553-1503">`styles`參數包含一個或多個成員<xref:System.Globalization.DateTimeStyles>列舉型別，判斷是否與其中所未定義泛空白字元`format`可以出現在`s`及控制的剖析作業精確的行為。</span><span class="sxs-lookup"><span data-stu-id="02553-1503">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="02553-1504">下表描述每個方式的成員<xref:System.Globalization.DateTimeStyles>列舉型別會影響營運<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1504">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="02553-1505">DateTimeStyles 成員</span><span class="sxs-lookup"><span data-stu-id="02553-1505">DateTimeStyles member</span></span>|<span data-ttu-id="02553-1506">描述</span><span class="sxs-lookup"><span data-stu-id="02553-1506">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="02553-1507">剖析`s`而且，如果有需要，將它轉換成 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1507">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="02553-1508">如果`s`包含時區時差，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，這個方法會剖析字串，呼叫<xref:System.DateTime.ToUniversalTime%2A>轉換傳回<xref:System.DateTime>值為 UTC並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1508">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1509">如果`s`表示它代表 UTC，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>旗標，方法剖析字串，會執行任何時區轉換對傳回<xref:System.DateTime>值，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1509">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1510">在其他情況下，此旗標會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="02553-1510">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="02553-1511">指定未定義的泛空白字元`format`任何個別的日期或時間項目之間可以出現。</span><span class="sxs-lookup"><span data-stu-id="02553-1511">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="02553-1512">指定未定義的泛空白字元`format`可以出現在開頭`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1512">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="02553-1513">指定未定義的泛空白字元`format`可以出現在結尾`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1513">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="02553-1514">指定`s`可能包含前置、 內部和尾端未定義的泛空白字元`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-1514">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="02553-1515">指定當`s`缺少任何時區的資訊，它會假設為代表當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1515">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="02553-1516">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標已存在，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>值設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1516">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="02553-1517">指定當`s`缺少任何時區的資訊，它會假設為代表 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1517">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="02553-1518">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標存在，則方法會將轉換傳回<xref:System.DateTime>值與 UTC 於當地時間和設定其<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1518">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="02553-1519">如果`s`包含時間的日期，傳回的值設定為不含日期資訊`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="02553-1519">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="02553-1520">`s`會剖析參數，使用預設值。</span><span class="sxs-lookup"><span data-stu-id="02553-1520">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="02553-1521">非出示中沒有空白字元`format`允許。</span><span class="sxs-lookup"><span data-stu-id="02553-1521">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="02553-1522">如果`s`缺少傳回之日期的日期元件，<xref:System.DateTime>值設為 1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="02553-1522">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="02553-1523">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1523">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1524">時區資訊是否存在於`s`，時間會轉換為當地時間與<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1524">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="02553-1525">針對包含時區資訊的字串，會嘗試防止轉換成<xref:System.DateTime>值的日期和時間使用其<xref:System.DateTime.Kind%2A>屬性設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1525">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1526">主要，此旗標可避免 UTC 時間的轉換為本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1526">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="02553-1527">特定日期和時間的符號和中使用的字串 （例如在特定的語言中一周天數名稱）`s`所定義`provider`參數，因為是精確的格式`s`如果`format`是標準格式指定名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1527">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="02553-1528">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-1528">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-1529">A<xref:System.Globalization.CultureInfo>物件，表示用來解譯的文化特性`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1529">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="02553-1530"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件及其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>屬性定義的符號和格式設定在`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1530">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="02553-1531">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1531">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-1532">自訂<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1532">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-1533">如果`provider`已`null`，則<xref:System.Globalization.CultureInfo>使用對應至目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1533">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1534">下列範例示範<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1534">The following example demonstrates the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29> method.</span></span> <span data-ttu-id="02553-1535">請注意，字串"2009 年 5 月 01 日上午 8:30"無法成功剖析時`styles`參數等於<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>因為所不允許有前置空格`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-1535">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="02553-1536">此外，字串"2009 年 5 月 01 日 09:00"無法以成功地剖析`format`的"MM/dd/yyyyhh:mm"因為日期字串前面沒有前置的零，月份數字為`format`需要。</span><span class="sxs-lookup"><span data-stu-id="02553-1536">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.ParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact2.cs#2)]
 [!code-vb[System.DateTime.ParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1537"><paramref name="s" /> 或 <paramref name="format" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1537"><paramref name="s" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1538"><paramref name="s" /> 或 <paramref name="format" /> 為空字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1538"><paramref name="s" /> or <paramref name="format" /> is an empty string.</span></span>  
  
<span data-ttu-id="02553-1539">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1539">-or-</span></span> 
 <span data-ttu-id="02553-1540"><paramref name="s" /> 不包含與 <paramref name="format" /> 中所指定之模式對應的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1540"><paramref name="s" /> does not contain a date and time that corresponds to the pattern specified in <paramref name="format" />.</span></span>  
  
<span data-ttu-id="02553-1541">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1541">-or-</span></span> 
<span data-ttu-id="02553-1542">小時元件和 <paramref name="s" /> 中的 AM/PM 指示項不相符。</span><span class="sxs-lookup"><span data-stu-id="02553-1542">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-1543"><paramref name="style" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合。</span><span class="sxs-lookup"><span data-stu-id="02553-1543"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="02553-1544">如需範例，請參閱 <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 與 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1544">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1545">在  [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，則<see cref="Overload:System.DateTime.ParseExact" />方法會擲回<see cref="T:System.FormatException" />小時元件和 AM/PM 指示項不在協議中，如果包含要剖析的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1545">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="02553-1546">在 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]和舊版本中，AM/PM 指示項會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-1546">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-1547">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-1547">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1548">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1548">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1549">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1549">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ParseExact">
      <MemberSignature Language="C#" Value="public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style);" />
      <MemberSignature Language="F#" Value="static member ParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles -&gt; DateTime" Usage="System.DateTime.ParseExact (s, formats, provider, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-1550">字串，包含要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1550">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="02553-1551"><paramref name="s" /> 允許的格式陣列。</span><span class="sxs-lookup"><span data-stu-id="02553-1551">An array of allowable formats of <paramref name="s" />.</span></span> <span data-ttu-id="02553-1552">如需詳細資訊，請參閱＜備註＞一節。</span><span class="sxs-lookup"><span data-stu-id="02553-1552">For more information, see the Remarks section.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1553">提供關於 <paramref name="s" /> 之特定文化特性格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1553">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="02553-1554">列舉值的位元組合，表示 <paramref name="s" /> 所允許的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1554">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="02553-1555">一般會指定的值是 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1555">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <summary><span data-ttu-id="02553-1556">使用指定的格式陣列、特定文化特性格式資訊以及樣式，將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1556">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="02553-1557">字串表示的格式必須至少完全符合其中一個指定的格式，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="02553-1557">The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="02553-1558">物件，與 <paramref name="s" /> 中包含的日期和時間相等，如 <paramref name="formats" />、<paramref name="provider" /> 和 <paramref name="style" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1558">An object that is equivalent to the date and time contained in <paramref name="s" />, as specified by <paramref name="formats" />, <paramref name="provider" />, and <paramref name="style" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1559"><xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法會剖析的日期字串表示符合任何一個模式指派給`formats`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-1559">The <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="02553-1560">如果字串`s`不符合任一這些模式的變化所定義的任何`styles`參數，此方法會擲回<xref:System.FormatException>。</span><span class="sxs-lookup"><span data-stu-id="02553-1560">If the string `s` does not match any one of these patterns with any of the variations defined by the `styles` parameter, the method throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="02553-1561">除了比較`s`到多個格式模式，而非單一的格式模式中，這個多載的行為相同<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1561">Aside from comparing `s` to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="02553-1562">`s`參數包含要剖析的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1562">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="02553-1563">如果`s`參數會包含只有一次，而且沒有日期，目前的日期是除非`style`參數包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>旗標，在此情況下的預設日期 (`DateTime.Date.MinValue`) 使用。</span><span class="sxs-lookup"><span data-stu-id="02553-1563">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="02553-1564">如果`s`參數會包含只有日期任何時間、 午夜 (00: 00:00) 使用。</span><span class="sxs-lookup"><span data-stu-id="02553-1564">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="02553-1565">`style`參數也會決定是否`s`參數可以包含前置字元、 內部或結尾的空白字元以外的其中一個格式字串中允許的字元`formats`。</span><span class="sxs-lookup"><span data-stu-id="02553-1565">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="02553-1566">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1566">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1567">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，就會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>並<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標，以傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1567">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1568">如果`s`包含時區資訊的時間會轉換為當地時間，如有必要，和<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1568">If `s` contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1569">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>無法轉換為當地時間的 Coordinated Universal Time (UTC)，並設定的旗標<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1569">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02553-1570">`formats`參數包含陣列的模式，其中`s`必須完全符合剖析作業會成功。</span><span class="sxs-lookup"><span data-stu-id="02553-1570">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="02553-1571">中的模式`formats`參數是由從一或多個自訂格式規範所組成[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)資料表或從識別為預先定義的模式，單一標準格式規範[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)資料表。</span><span class="sxs-lookup"><span data-stu-id="02553-1571">The patterns in the `formats` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="02553-1572">如果您不使用日期或時間分隔符號的自訂格式模式中，使用的文化特性而異`provider`參數和廣泛形式的每個自訂格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1572">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="02553-1573">例如，如果您想要在模式中指定的時數，指定更多表單中，"HH"，而非較窄的表單，"H"。</span><span class="sxs-lookup"><span data-stu-id="02553-1573">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="02553-1574">`styles`參數包含一個或多個成員<xref:System.Globalization.DateTimeStyles>列舉型別，判斷是否與其中所未定義泛空白字元`format`可以出現在`s`及控制的剖析作業精確的行為。</span><span class="sxs-lookup"><span data-stu-id="02553-1574">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="02553-1575">下表描述每個方式的成員<xref:System.Globalization.DateTimeStyles>列舉型別會影響營運<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1575">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29> method.</span></span>  
  
|<span data-ttu-id="02553-1576">DateTimeStyles 成員</span><span class="sxs-lookup"><span data-stu-id="02553-1576">DateTimeStyles member</span></span>|<span data-ttu-id="02553-1577">說明</span><span class="sxs-lookup"><span data-stu-id="02553-1577">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="02553-1578">剖析`s`而且，如果有需要，將它轉換成 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1578">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="02553-1579">如果`s`包含時區時差，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，這個方法會剖析字串，呼叫<xref:System.DateTime.ToUniversalTime%2A>轉換傳回<xref:System.DateTime>值為 UTC並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1579">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1580">如果`s`表示它代表 UTC，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>旗標，方法剖析字串，會執行任何時區轉換對傳回<xref:System.DateTime>值，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1580">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1581">在其他情況下，此旗標會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="02553-1581">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="02553-1582">指定未定義的泛空白字元`format`任何個別的日期或時間項目之間可以出現。</span><span class="sxs-lookup"><span data-stu-id="02553-1582">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="02553-1583">指定未定義的泛空白字元`format`可以出現在開頭`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1583">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="02553-1584">指定未定義的泛空白字元`format`可以出現在結尾`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1584">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="02553-1585">指定`s`可能包含前置、 內部和尾端未定義的泛空白字元`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-1585">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="02553-1586">指定當`s`缺少任何時區的資訊，它會假設為代表當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1586">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="02553-1587">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標已存在，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>值設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1587">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="02553-1588">指定當`s`缺少任何時區的資訊，它會假設為代表 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1588">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="02553-1589">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標存在，則方法會將轉換傳回<xref:System.DateTime>值與 UTC 於當地時間和設定其<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1589">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="02553-1590">如果`s`包含時間的日期，傳回的值設定為不含日期資訊`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="02553-1590">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="02553-1591">`s`會剖析參數，使用預設值。</span><span class="sxs-lookup"><span data-stu-id="02553-1591">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="02553-1592">非出示中沒有空白字元`format`允許。</span><span class="sxs-lookup"><span data-stu-id="02553-1592">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="02553-1593">如果`s`缺少傳回之日期的日期元件，<xref:System.DateTime>值設為 1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="02553-1593">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="02553-1594">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1594">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1595">時區資訊是否存在於`s`，時間會轉換為當地時間與<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1595">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="02553-1596">針對包含時區資訊的字串，會嘗試將無法轉換成日期和時間使用其<xref:System.DateTime.Kind%2A>屬性設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1596">For strings that contain time zone information, tries to prevent the conversion to a date and time with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1597">主要，此旗標可避免 UTC 時間的轉換為本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1597">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
 <span data-ttu-id="02553-1598">特定日期和時間的符號和中使用的字串 （例如在特定的語言中一周天數名稱）`s`所定義`provider`參數，因為是精確的格式`s`如果`format`是標準格式指定名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1598">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="02553-1599">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-1599">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-1600">A<xref:System.Globalization.CultureInfo>物件，表示用來解譯的文化特性`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1600">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="02553-1601"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件及其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>屬性定義的符號和格式設定在`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-1601">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="02553-1602">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1602">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-1603">自訂<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1603">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-1604">如果`provider`已`null`，則<xref:System.Globalization.CultureInfo>使用對應至目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1604">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1605">下列範例會使用<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法，以確保可成功剖析在幾個可能的格式的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1605">The following example uses the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.ParseExact#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ParseExact/cs/parseexact3.cs#3)]
 [!code-vb[System.Datetime.ParseExact#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ParseExact/vb/parseexact3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1606"><paramref name="s" /> 或 <paramref name="formats" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1606"><paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-1607"><paramref name="s" /> 為空字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1607"><paramref name="s" /> is an empty string.</span></span>  
  
<span data-ttu-id="02553-1608">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1608">-or-</span></span> 
<span data-ttu-id="02553-1609"><paramref name="formats" /> 的項目為空字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1609">an element of <paramref name="formats" /> is an empty string.</span></span>  
  
<span data-ttu-id="02553-1610">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1610">-or-</span></span> 
 <span data-ttu-id="02553-1611"><paramref name="s" /> 不包含對應 <paramref name="formats" /> 任何項目的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1611"><paramref name="s" /> does not contain a date and time that corresponds to any element of <paramref name="formats" />.</span></span>  
  
<span data-ttu-id="02553-1612">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-1612">-or-</span></span> 
<span data-ttu-id="02553-1613">小時元件和 <paramref name="s" /> 中的 AM/PM 指示項不相符。</span><span class="sxs-lookup"><span data-stu-id="02553-1613">The hour component and the AM/PM designator in <paramref name="s" /> do not agree.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-1614"><paramref name="style" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合。</span><span class="sxs-lookup"><span data-stu-id="02553-1614"><paramref name="style" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values.</span></span> <span data-ttu-id="02553-1615">如需範例，請參閱 <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 與 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1615">For example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1616">在  [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，則<see cref="Overload:System.DateTime.ParseExact" />方法會擲回<see cref="T:System.FormatException" />小時元件和 AM/PM 指示項不在協議中，如果包含要剖析的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1616">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.ParseExact" /> method throws a <see cref="T:System.FormatException" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="02553-1617">在 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]和舊版本中，AM/PM 指示項會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-1617">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.TryParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-1618">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-1618">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-1619">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1619">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1620">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1620">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public int Second { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Second" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Second" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Second As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Second { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Second : int" Usage="System.DateTime.Second" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1621">取得這個執行個體所表示日期的秒數元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1621">Gets the seconds component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1622">秒數元件，以 0 到 59 之間的值表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1622">The seconds component, expressed as a value between 0 and 59.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="02553-1623">下列範例示範<xref:System.DateTime.Second%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1623">The following example demonstrates the <xref:System.DateTime.Second%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecifyKind">
      <MemberSignature Language="C#" Value="public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime SpecifyKind(valuetype System.DateTime value, valuetype System.DateTimeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.SpecifyKind(System.DateTime,System.DateTimeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SpecifyKind (value As DateTime, kind As DateTimeKind) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime SpecifyKind(DateTime value, DateTimeKind kind);" />
      <MemberSignature Language="F#" Value="static member SpecifyKind : DateTime * DateTimeKind -&gt; DateTime" Usage="System.DateTime.SpecifyKind (value, kind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="kind" Type="System.DateTimeKind" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-1624">日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1624">A date and time.</span></span></param>
        <param name="kind"><span data-ttu-id="02553-1625">其中一個列舉值，表示新的物件表示本地時間、UTC，或兩者都不是。</span><span class="sxs-lookup"><span data-stu-id="02553-1625">One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</span></span></param>
        <summary><span data-ttu-id="02553-1626">建立新的 <see cref="T:System.DateTime" /> 物件，此物件的刻度數與指定的 <see cref="T:System.DateTime" /> 相同，但依指定的 <see cref="T:System.DateTimeKind" /> 值所示，指定為本地時間、國際標準時間 (Coordinated Universal Time，UTC)，或兩者都不是。</span><span class="sxs-lookup"><span data-stu-id="02553-1626">Creates a new <see cref="T:System.DateTime" /> object that has the same number of ticks as the specified <see cref="T:System.DateTime" />, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <see cref="T:System.DateTimeKind" /> value.</span></span></summary>
        <returns><span data-ttu-id="02553-1627">新物件，這個物件的刻度數與 <paramref name="value" /> 參數代表的物件相同，且具有 <see cref="T:System.DateTimeKind" /> 參數指定的 <paramref name="kind" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-1627">A new object that has the same number of ticks as the object represented by the <paramref name="value" /> parameter and the <see cref="T:System.DateTimeKind" /> value specified by the <paramref name="kind" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1628">A<xref:System.DateTime>物件包含的類型 欄位，指出是否將時間值根據本地時間或國際標準時間 (UTC)，或是兩者皆否，而且包含時間值的刻度欄位以 100 奈秒刻度為單位。</span><span class="sxs-lookup"><span data-stu-id="02553-1628">A <xref:System.DateTime> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.</span></span> <span data-ttu-id="02553-1629"><xref:System.DateTime.SpecifyKind%2A>方法建立新<xref:System.DateTime>物件使用指定`kind`參數與原始的時間值。</span><span class="sxs-lookup"><span data-stu-id="02553-1629">The <xref:System.DateTime.SpecifyKind%2A> method creates a new <xref:System.DateTime> object using the specified `kind` parameter and the original time value.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1630">傳回<xref:System.DateTime>該值不代表相同立即時間`value`參數，和<xref:System.DateTime.SpecifyKind%2A>不是時區轉換方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1630">The returned <xref:System.DateTime> value does not represent the same instant in time as the `value` parameter, and <xref:System.DateTime.SpecifyKind%2A> is not a time zone conversion method.</span></span> <span data-ttu-id="02553-1631">相反地，將會使指定的時間`value`參數保持不變，且會設定<xref:System.DateTime.Kind%2A>屬性設`kind`。</span><span class="sxs-lookup"><span data-stu-id="02553-1631">Instead, it leaves the time specified by the `value` parameter unchanged, and sets the <xref:System.DateTime.Kind%2A> property to `kind`.</span></span> <span data-ttu-id="02553-1632">如需時區轉換的詳細資訊，請參閱 <<c0> [ 各時區間轉換時間](~/docs/standard/datetime/converting-between-time-zones.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1632">For information about time zone conversions, see [Converting Times Between Time Zones](~/docs/standard/datetime/converting-between-time-zones.md).</span></span>  
  
 <span data-ttu-id="02553-1633"><xref:System.DateTime.SpecifyKind%2A>方法會很有用，您在何處接收的互通性案例中<xref:System.DateTime>物件未指定的類型欄位，但您可以判斷獨立表示刻度欄位代表當地時間或 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1633">The <xref:System.DateTime.SpecifyKind%2A> method is useful in interoperability scenarios where you receive a <xref:System.DateTime> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1634">下列範例會使用<xref:System.DateTime.SpecifyKind%2A>方法，示範如何<xref:System.DateTime.Kind%2A>屬性會影響<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>轉換方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1634">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md"><span data-ttu-id="02553-1635">.NET Framework 應用程式中的 COM 互通性 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="02553-1635">COM Interoperability in .NET Framework Applications (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Subtract">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-1636">將這個執行個體減去指定的時間或持續期間。</span><span class="sxs-lookup"><span data-stu-id="02553-1636">Subtracts the specified time or duration from this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public TimeSpan Subtract (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan Subtract(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As DateTime) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan Subtract(DateTime value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : DateTime -&gt; TimeSpan" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-1637">要減去的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1637">The date and time value to subtract.</span></span></param>
        <summary><span data-ttu-id="02553-1638">將這個執行個體減去指定的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1638">Subtracts the specified date and time from this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-1639">時間間隔，等於由此執行個體所表示的日期和時間減去由 <paramref name="value" /> 所表示的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1639">A time interval that is equal to the date and time represented by this instance minus the date and time represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1640"><xref:System.DateTime.Subtract%28System.DateTime%29>方法會判斷兩個日期之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1640">The <xref:System.DateTime.Subtract%28System.DateTime%29> method determines the difference between two dates.</span></span> <span data-ttu-id="02553-1641">要減去的時間間隔，從目前的執行個體，呼叫<xref:System.DateTime.Subtract%28System.TimeSpan%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1641">To subtract a time interval from the current instance, call the <xref:System.DateTime.Subtract%28System.TimeSpan%29> method.</span></span> <span data-ttu-id="02553-1642">要減去的特定時間間隔內，從目前的執行個體，呼叫的方法，將該時間間隔加入至目前的日期，並提供做為方法引數為負數值。</span><span class="sxs-lookup"><span data-stu-id="02553-1642">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="02553-1643">例如，若要減少從目前日期的兩個月，呼叫<xref:System.DateTime.AddMonths%28System.Int32%29>-2 值的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1643">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="02553-1644">如果目前的執行個體的時間與日期是早於`value`，則方法會傳回<xref:System.TimeSpan>物件，表示負的時間範圍。</span><span class="sxs-lookup"><span data-stu-id="02553-1644">If the date and time of the current instance is earlier than `value`, the method returns a <xref:System.TimeSpan> object that represents a negative time span.</span></span> <span data-ttu-id="02553-1645">也就是其所有非零屬性的值 (例如<xref:System.TimeSpan.Days%2A>或<xref:System.TimeSpan.Ticks%2A>) 為負數。</span><span class="sxs-lookup"><span data-stu-id="02553-1645">That is, the value of all of its non-zero properties (such as <xref:System.TimeSpan.Days%2A> or <xref:System.TimeSpan.Ticks%2A>) is negative.</span></span>  
  
 <span data-ttu-id="02553-1646"><xref:System.DateTime.Subtract%28System.DateTime%29>方法不會考慮值<xref:System.DateTime.Kind%2A>兩個屬性<xref:System.DateTime>值時執行減法運算。</span><span class="sxs-lookup"><span data-stu-id="02553-1646">The <xref:System.DateTime.Subtract%28System.DateTime%29> method does not consider the value of the <xref:System.DateTime.Kind%2A> property of the two <xref:System.DateTime> values when performing the subtraction.</span></span> <span data-ttu-id="02553-1647">再減去<xref:System.DateTime>物件，請確定物件是否代表相同的時區中的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1647">Before subtracting <xref:System.DateTime> objects, ensure that the objects represent times in the same time zone.</span></span> <span data-ttu-id="02553-1648">否則，結果將包含時間的時區之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1648">Otherwise, the result will include the difference between time zones.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1649"><xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType>方法會考量執行減法運算時的時區之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1649">The <xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=nameWithType> method does consider the difference between time zones when performing the subtraction.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1650">下列範例示範<xref:System.DateTime.Subtract%2A>方法和減法運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-1650">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1651">這個結果小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1651">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-1652">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-1652">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public DateTime Subtract (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime Subtract(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.Subtract(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Subtract (value As TimeSpan) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime Subtract(TimeSpan value);" />
      <MemberSignature Language="F#" Value="member this.Subtract : TimeSpan -&gt; DateTime" Usage="dateTime.Subtract value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="02553-1653">要減去的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1653">The time interval to subtract.</span></span></param>
        <summary><span data-ttu-id="02553-1654">將這個執行個體減去指定的持續期間。</span><span class="sxs-lookup"><span data-stu-id="02553-1654">Subtracts the specified duration from this instance.</span></span></summary>
        <returns><span data-ttu-id="02553-1655">物件，等於由此執行個體所表示的日期和時間減去由 <paramref name="value" /> 所表示的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1655">An object that is equal to the date and time represented by this instance minus the time interval represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1656"><xref:System.DateTime.Subtract%28System.TimeSpan%29>方法會傳回指定的時間間隔的差異，從目前的執行個體的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1656">The <xref:System.DateTime.Subtract%28System.TimeSpan%29> method returns the date that is a specified time interval difference from the current instance.</span></span> <span data-ttu-id="02553-1657">若要判斷兩個日期之間的時間間隔，請呼叫<xref:System.DateTime.Subtract%28System.DateTime%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1657">To determine the time interval between two dates, call the <xref:System.DateTime.Subtract%28System.DateTime%29> method.</span></span> <span data-ttu-id="02553-1658">要減去的特定時間間隔內，從目前的執行個體，呼叫的方法，將該時間間隔加入至目前的日期，並提供做為方法引數為負數值。</span><span class="sxs-lookup"><span data-stu-id="02553-1658">To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</span></span> <span data-ttu-id="02553-1659">例如，若要減少從目前日期的兩個月，呼叫<xref:System.DateTime.AddMonths%28System.Int32%29>-2 值的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1659">For example, to subtract two months from the current date, call the <xref:System.DateTime.AddMonths%28System.Int32%29> method with a value of -2.</span></span>  
  
 <span data-ttu-id="02553-1660">這個方法不會變更這個值<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-1660">This method does not change the value of this <xref:System.DateTime>.</span></span> <span data-ttu-id="02553-1661">相反地，它會傳回新<xref:System.DateTime>其值是這項作業的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-1661">Instead, it returns a new <xref:System.DateTime> whose value is the result of this operation.</span></span>  
  
 <span data-ttu-id="02553-1662">一般情況下，<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>方法會減去<xref:System.TimeSpan>物件，表示正的時間範圍，並傳回<xref:System.DateTime>早於目前的執行個體的時間與日期的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1662">Ordinarily, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method subtracts a <xref:System.TimeSpan> object that represents a positive time span and returns a <xref:System.DateTime> value that is earlier than the date and time of the current instance.</span></span> <span data-ttu-id="02553-1663">不過，如果<xref:System.TimeSpan>物件所表示的負的時間範圍內，<xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>方法會傳回<xref:System.DateTime>晚的日期和時間之目前執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1663">However, if the <xref:System.TimeSpan> object represents a negative time span, the <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value that is later than the date and time of the current instance.</span></span>  
  
 <span data-ttu-id="02553-1664"><xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType>方法可讓您減少包含多個時間單位的指定的分鐘數 （指定數字的時數） 等的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1664">The <xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=nameWithType> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).</span></span> <span data-ttu-id="02553-1665">要從中減去的時間 （例如年、 月或日） 的單一單位<xref:System.DateTime>執行個體，您可以傳遞負數的數字值做為參數以下列方法之一：</span><span class="sxs-lookup"><span data-stu-id="02553-1665">To subtract a single unit of time (such as years, months, or days) from the <xref:System.DateTime> instance, you can pass a negative numeric value as a parameter to any of the following methods:</span></span>  
  
-   <span data-ttu-id="02553-1666"><xref:System.DateTime.AddYears%2A>要減去特定數目的年份，從目前的日期和時間執行個體。</span><span class="sxs-lookup"><span data-stu-id="02553-1666"><xref:System.DateTime.AddYears%2A>, to subtract a specific number of years from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1667"><xref:System.DateTime.AddMonths%2A>要減去特定數目的幾個月，從目前的日期和時間執行個體。</span><span class="sxs-lookup"><span data-stu-id="02553-1667"><xref:System.DateTime.AddMonths%2A>, to subtract a specific number of months from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1668"><xref:System.DateTime.AddDays%2A>要扣除的天數，從目前的日期和時間執行個體的特定數目。</span><span class="sxs-lookup"><span data-stu-id="02553-1668"><xref:System.DateTime.AddDays%2A>, to subtract a specific number of days from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1669"><xref:System.DateTime.AddHours%2A>要減去的特定時間會從目前的日期和時間執行個體數目。</span><span class="sxs-lookup"><span data-stu-id="02553-1669"><xref:System.DateTime.AddHours%2A>, to subtract a specific number of hours from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1670"><xref:System.DateTime.AddMinutes%2A>要減去特定從目前的日期和時間執行個體的分鐘數。</span><span class="sxs-lookup"><span data-stu-id="02553-1670"><xref:System.DateTime.AddMinutes%2A>, to subtract a specific number of minutes from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1671"><xref:System.DateTime.AddSeconds%2A>要減去特定的從目前的日期和時間執行個體的秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-1671"><xref:System.DateTime.AddSeconds%2A>, to subtract a specific number of seconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1672"><xref:System.DateTime.AddMilliseconds%2A>要在特定的從目前的日期和時間執行個體的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="02553-1672"><xref:System.DateTime.AddMilliseconds%2A>, to subtract a specific number of milliseconds from the current date and time instance.</span></span>  
  
-   <span data-ttu-id="02553-1673"><xref:System.DateTime.AddTicks%2A>要減去特定數目的刻度，從目前的日期和時間執行個體。</span><span class="sxs-lookup"><span data-stu-id="02553-1673"><xref:System.DateTime.AddTicks%2A>, to subtract a specific number of ticks from the current date and time instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1674">下列範例示範<xref:System.DateTime.Subtract%2A>方法和減法運算子。</span><span class="sxs-lookup"><span data-stu-id="02553-1674">The following example demonstrates the <xref:System.DateTime.Subtract%2A> method and the subtraction operator.</span></span>  
  
 [!code-cpp[DateTime.Subtraction#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.Subtraction/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.Subtraction#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Subtraction/CS/class1.cs#1)]
 [!code-vb[DateTime.Subtraction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Subtraction/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1675">這個結果小於 <see cref="F:System.DateTime.MinValue" /> 或大於 <see cref="F:System.DateTime.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1675">The result is less than <see cref="F:System.DateTime.MinValue" /> or greater than <see cref="F:System.DateTime.MaxValue" />.</span></span></exception>
        <altmember cref="T:System.TimeSpan" />
        <related type="Article" href="~/docs/standard/datetime/performing-arithmetic-operations.md"><span data-ttu-id="02553-1676">使用日期和時間執行算術運算</span><span class="sxs-lookup"><span data-stu-id="02553-1676">Performing Arithmetic Operations with Dates and Times</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1677">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1677">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1678">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1678">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1679">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1679">This conversion is not supported.</span></span> <span data-ttu-id="02553-1680">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1680">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1681">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1681">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1682">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1682">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1683">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1683">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1684">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1684">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1685">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1685">This conversion is not supported.</span></span> <span data-ttu-id="02553-1686">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1686">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1687">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1687">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1688">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1688">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1689">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1689">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1690">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1690">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1691">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1691">This conversion is not supported.</span></span> <span data-ttu-id="02553-1692">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1692">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1693">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1693">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1694">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1694">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1695">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1695">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1696">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1696">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1697">傳回目前的 <see cref="T:System.DateTime" />物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1697">Returns the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="02553-1698">目前的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1698">The current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1699">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1699">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1700">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1700">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1701">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1701">This conversion is not supported.</span></span> <span data-ttu-id="02553-1702">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1702">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1703">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1703">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1704">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1704">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1705">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1705">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1706">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1706">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1707">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1707">This conversion is not supported.</span></span> <span data-ttu-id="02553-1708">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1708">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1709">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1709">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1710">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1710">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1711">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1711">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1712">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1712">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1713">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1713">This conversion is not supported.</span></span> <span data-ttu-id="02553-1714">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1714">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1715">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1715">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1716">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1716">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1717">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1717">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1718">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1718">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1719">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1719">This conversion is not supported.</span></span> <span data-ttu-id="02553-1720">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1720">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1721">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1721">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1722">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1722">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1723">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1723">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1724">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1724">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1725">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1725">This conversion is not supported.</span></span> <span data-ttu-id="02553-1726">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1726">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1727">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1727">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1728">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1728">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1729">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1729">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1730">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1730">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1731">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1731">This conversion is not supported.</span></span> <span data-ttu-id="02553-1732">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1732">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1733">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1733">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1734">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1734">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1735">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1735">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1736">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1736">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1737">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1737">This conversion is not supported.</span></span> <span data-ttu-id="02553-1738">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1738">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1739">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1739">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1740">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1740">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="02553-1741">所要的類型。</span><span class="sxs-lookup"><span data-stu-id="02553-1741">The desired type.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-1742">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1742">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1743">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1743">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1744">將目前的 <see cref="T:System.DateTime" /> 物件轉換為指定類型的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1744">Converts the current <see cref="T:System.DateTime" /> object to an object of a specified type.</span></span></summary>
        <returns><span data-ttu-id="02553-1745"><paramref name="type" /> 參數所指定之類型的物件，包含相當於目前 <see cref="T:System.DateTime" /> 物件的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1745">An object of the type specified by the <paramref name="type" /> parameter, with a value equivalent to the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1746"><paramref name="type" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1746"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1747"><see cref="T:System.DateTime" /> 類型不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1747">This conversion is not supported for the <see cref="T:System.DateTime" /> type.</span></span></exception>
        <altmember cref="T:System.Convert" />
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1748">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1748">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1749">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1749">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1750">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1750">This conversion is not supported.</span></span> <span data-ttu-id="02553-1751">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1751">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1752">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1752">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1753">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1753">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1754">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1754">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1755">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1755">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1756">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1756">This conversion is not supported.</span></span> <span data-ttu-id="02553-1757">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1757">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1758">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1758">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1759">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1759">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1760">實作 <see cref="T:System.IFormatProvider" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1760">An object that implements the <see cref="T:System.IFormatProvider" /> interface.</span></span> <span data-ttu-id="02553-1761">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1761">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1762">不支援這個轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1762">This conversion is not supported.</span></span> <span data-ttu-id="02553-1763">嘗試使用這個方法會擲回 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1763">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="02553-1764">不使用此成員的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1764">The return value for this member is not used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="02553-1765">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="02553-1765">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="02553-1766">要填入資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1766">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="02553-1767">這個序列化的目的端。</span><span class="sxs-lookup"><span data-stu-id="02553-1767">The destination for this serialization.</span></span> <span data-ttu-id="02553-1768">(不使用這個參數；請指定 <see langword="null" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-1768">(This parameter is not used; specify <see langword="null" />.)</span></span></param>
        <summary><span data-ttu-id="02553-1769">使用序列化目前 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 物件所需的資料，填入 <see cref="T:System.DateTime" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1769">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the current <see cref="T:System.DateTime" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1770">這個方法會填入`info`參數搭配<xref:System.DateTime.Ticks%2A>和<xref:System.DateTime.Kind%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="02553-1770">This method populates the `info` parameter with the <xref:System.DateTime.Ticks%2A> and <xref:System.DateTime.Kind%2A> property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02553-1771"><paramref name="info" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1771"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="02553-1772">需要完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="02553-1772">requires full trust for the immediate caller.</span></span> <span data-ttu-id="02553-1773">此成員不能由部分信任或不透明的程式碼。</span><span class="sxs-lookup"><span data-stu-id="02553-1773">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Ticks">
      <MemberSignature Language="C#" Value="public long Ticks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Ticks" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Ticks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ticks As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Ticks { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Ticks : int64" Usage="System.DateTime.Ticks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1774">取得表示這個執行個體日期和時間的刻度數目。</span><span class="sxs-lookup"><span data-stu-id="02553-1774">Gets the number of ticks that represent the date and time of this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1775">刻度數目，表示這個執行個體的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1775">The number of ticks that represent the date and time of this instance.</span></span> <span data-ttu-id="02553-1776">值介於 <see langword="DateTime.MinValue.Ticks" /> 和 <see langword="DateTime.MaxValue.Ticks" /> 之間。</span><span class="sxs-lookup"><span data-stu-id="02553-1776">The value is between <see langword="DateTime.MinValue.Ticks" /> and <see langword="DateTime.MaxValue.Ticks" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1777">單一刻度表示 100 奈秒或一的第二個。</span><span class="sxs-lookup"><span data-stu-id="02553-1777">A single tick represents one hundred nanoseconds or one ten-millionth of a second.</span></span> <span data-ttu-id="02553-1778">有 10000 刻度毫秒或 10 萬個刻度在 1 秒。</span><span class="sxs-lookup"><span data-stu-id="02553-1778">There are 10,000 ticks in a millisecond, or 10 million ticks in a second.</span></span>  
  
 <span data-ttu-id="02553-1779">這個屬性的值代表 0001 年 1 月 1 日的 12:00:00 午夜起已經過的 100 奈秒間隔數 (0: 00:00 UTC 年 1 月 1 日 0001，西曆中的)，表示<xref:System.DateTime.MinValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1779">The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <xref:System.DateTime.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1780">它不包含是能歸因於 leap 秒為單位的刻度的數。</span><span class="sxs-lookup"><span data-stu-id="02553-1780">It does not include the number of ticks that are attributable to leap seconds.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1781">下列範例會使用<xref:System.DateTime.Ticks%2A>屬性來顯示開頭二十一世紀以來所經過的刻度數，以及具現化<xref:System.TimeSpan>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1781">The following example uses the <xref:System.DateTime.Ticks%2A> property to display the number of ticks that have elapsed since the beginning of the twenty-first century and to instantiate a <xref:System.TimeSpan> object.</span></span> <span data-ttu-id="02553-1782"><xref:System.TimeSpan>物件會被用來顯示使用數個其他時間間隔已耗用時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1782">The <xref:System.TimeSpan> object is then used to display the elapsed time using several other time intervals.</span></span>  
  
 [!code-csharp[System.DateTime.Ticks#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Ticks/cs/Ticks.cs#1)]
 [!code-vb[System.DateTime.Ticks#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Ticks/vb/Ticks.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfDay">
      <MemberSignature Language="C#" Value="public TimeSpan TimeOfDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeOfDay" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.TimeOfDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfDay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeOfDay { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfDay : TimeSpan" Usage="System.DateTime.TimeOfDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1783">取得這個執行個體的一天時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1783">Gets the time of day for this instance.</span></span></summary>
        <value><span data-ttu-id="02553-1784">時間間隔，表示從午夜以來已經過的當天部分。</span><span class="sxs-lookup"><span data-stu-id="02553-1784">A time interval that represents the fraction of the day that has elapsed since midnight.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1785">不同於<xref:System.DateTime.Date%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1785">Unlike the <xref:System.DateTime.Date%2A> property.</span></span> <span data-ttu-id="02553-1786">它會傳回<xref:System.DateTime>值，表示日期，但時間元件，沒有<xref:System.DateTime.TimeOfDay%2A>屬性會傳回<xref:System.TimeSpan>值，表示<xref:System.DateTime>值的時間元件。</span><span class="sxs-lookup"><span data-stu-id="02553-1786">which returns a <xref:System.DateTime> value that represents a date without its time component, the <xref:System.DateTime.TimeOfDay%2A> property returns a <xref:System.TimeSpan> value that represents a  <xref:System.DateTime> value's time component.</span></span>  
  
 <span data-ttu-id="02553-1787">如果您想要顯示的時間，或擷取的當日時間的字串表示法<xref:System.DateTime>值，您可以改為呼叫的多載<xref:System.DateTime.ToString%2A>具有方法`format`參數或使用[複合格式](~/docs/standard/base-types/composite-formatting.md)與"t"或"T"標準格式字串的功能。</span><span class="sxs-lookup"><span data-stu-id="02553-1787">If you want to display the time of day or retrieve the string representation of the time of day of a <xref:System.DateTime> value, you can instead call an overload of the <xref:System.DateTime.ToString%2A> method that has a `format` parameter or use the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature with the "t" or "T" standard format string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1788">下列範例顯示的值<xref:System.DateTime.TimeOfDay%2A>屬性的陣列<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-1788">The following example displays the value of the <xref:System.DateTime.TimeOfDay%2A> property for an array of <xref:System.DateTime> values.</span></span> <span data-ttu-id="02553-1789">它也會對照所傳回字串"t"標準格式字串，複合格式化作業中的傳回值。</span><span class="sxs-lookup"><span data-stu-id="02553-1789">It also contrasts the return value with the string returned by the "t" standard format string in a composite formatting operation.</span></span>  
  
 [!code-csharp[System.DateTime.TimeOfDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.timeofday/cs/timeofday1.cs#1)]
 [!code-vb[System.DateTime.TimeOfDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.timeofday/vb/timeofday1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="ToBinary">
      <MemberSignature Language="C#" Value="public long ToBinary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToBinary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToBinary" />
      <MemberSignature Language="VB.NET" Value="Public Function ToBinary () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToBinary();" />
      <MemberSignature Language="F#" Value="member this.ToBinary : unit -&gt; int64" Usage="dateTime.ToBinary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1790">將目前的 <see cref="T:System.DateTime" /> 物件序列化成 64 位元的二進位值，之後可以用這個值來重新建立 <see cref="T:System.DateTime" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1790">Serializes the current <see cref="T:System.DateTime" /> object to a 64-bit binary value that subsequently can be used to recreate the <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="02553-1791">64 位元帶正負號的整數，可以編碼 <see cref="P:System.DateTime.Kind" /> 和 <see cref="P:System.DateTime.Ticks" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1791">A 64-bit signed integer that encodes the <see cref="P:System.DateTime.Kind" /> and <see cref="P:System.DateTime.Ticks" /> properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1792">使用<xref:System.DateTime.ToBinary%2A>方法，以將目前值轉換成<xref:System.DateTime>二進位值的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1792">Use the <xref:System.DateTime.ToBinary%2A> method to convert the value of the current <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="02553-1793">接著，使用二進位值和<xref:System.DateTime.FromBinary%2A>方法來重新建立原始<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1793">Subsequently, use the binary value and the <xref:System.DateTime.FromBinary%2A> method to recreate the original <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1794">在某些情況下，<xref:System.DateTime>所傳回的值<xref:System.DateTime.FromBinary%2A>方法並不相同原始<xref:System.DateTime>值提供給<xref:System.DateTime.ToBinary%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1794">In some cases, the <xref:System.DateTime> value returned by the <xref:System.DateTime.FromBinary%2A> method is not identical to the original <xref:System.DateTime> value supplied to the <xref:System.DateTime.ToBinary%2A> method.</span></span> <span data-ttu-id="02553-1795">如需詳細資訊，請參閱下一步 區段中，「 本地時間調整 」。</span><span class="sxs-lookup"><span data-stu-id="02553-1795">For more information, see the next section, "Local Time Adjustment".</span></span>  
  
## <a name="local-time-adjustment"></a><span data-ttu-id="02553-1796">當地時間調整</span><span class="sxs-lookup"><span data-stu-id="02553-1796">Local Time Adjustment</span></span>  
 <span data-ttu-id="02553-1797">當地時間，也就是調整為本地時區的國際標準時間，由<xref:System.DateTime>結構，其<xref:System.DateTime.Kind%2A>屬性具有值<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="02553-1797">A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <xref:System.DateTime> structure whose <xref:System.DateTime.Kind%2A> property has the value <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="02553-1798">還原本機時<xref:System.DateTime>值由所產生的二進位表示法<xref:System.DateTime.ToBinary%2A>方法，<xref:System.DateTime.FromBinary%2A>方法可能會調整重新建立的值，如此就不等於原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-1798">When restoring a local <xref:System.DateTime> value from the binary representation that is produced by the <xref:System.DateTime.ToBinary%2A> method, the <xref:System.DateTime.FromBinary%2A> method may adjust the recreated value so that it is not equal to the original value.</span></span> <span data-ttu-id="02553-1799">在下列狀況下可能會發生這種情形：</span><span class="sxs-lookup"><span data-stu-id="02553-1799">This can occur under the following conditions:</span></span>  
  
-   <span data-ttu-id="02553-1800">如果當地<xref:System.DateTime>物件會序列化中的某個時區<xref:System.DateTime.ToBinary%2A>方法，，然後在不同的時區，藉由還原序列化<xref:System.DateTime.FromBinary%2A>方法，表示所產生的本機時間<xref:System.DateTime>物件會自動調整第二個的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-1800">If a local <xref:System.DateTime> object is serialized in one time zone by the <xref:System.DateTime.ToBinary%2A> method, and then deserialized in a different time zone by the <xref:System.DateTime.FromBinary%2A> method, the local time represented by the resulting <xref:System.DateTime> object is automatically adjusted to the second time zone.</span></span>  
  
     <span data-ttu-id="02553-1801">例如，假設<xref:System.DateTime>代表當地時間下午 3 點的物件</span><span class="sxs-lookup"><span data-stu-id="02553-1801">For example, consider a <xref:System.DateTime> object that represents a local time of 3 P.M.</span></span> <span data-ttu-id="02553-1802">執行位於美國的應用程式使用太平洋時區<xref:System.DateTime.ToBinary%2A>方法，以將其轉換<xref:System.DateTime>二進位值的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1802">An application that is executing in the U.S. Pacific Time zone uses the <xref:System.DateTime.ToBinary%2A> method to convert that <xref:System.DateTime> object to a binary value.</span></span> <span data-ttu-id="02553-1803">執行位於美國的另一個應用程式會使用美國東部時區<xref:System.DateTime.FromBinary%2A>方法，將二進位值轉換到新<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1803">Another application that is executing in the U.S. Eastern Time zone uses the <xref:System.DateTime.FromBinary%2A> method to convert the binary value to a new <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-1804">新值<xref:System.DateTime>物件是下午 6 點，代表相同的點為原始下午 3 點的時間</span><span class="sxs-lookup"><span data-stu-id="02553-1804">The value of the new <xref:System.DateTime> object is 6 P.M., which represents the same point in time as the original 3 P.M.</span></span> <span data-ttu-id="02553-1805">值，但會調整為美國東部時區的當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1805">value, but is adjusted to local time in the Eastern Time zone.</span></span>  
  
-   <span data-ttu-id="02553-1806">如果在本機的二進位表示法<xref:System.DateTime>值表示無效的時間以當地時區的系統上<xref:System.DateTime.FromBinary%2A>是呼叫，時間會調整，讓它是否有效。</span><span class="sxs-lookup"><span data-stu-id="02553-1806">If the binary representation of a local <xref:System.DateTime> value represents an invalid time in the local time zone of the system on which <xref:System.DateTime.FromBinary%2A> is called, the time is adjusted so that it is valid.</span></span>  
  
     <span data-ttu-id="02553-1807">例如，從標準時間轉換到日光節約時間會發生在美國太平洋時間區域，在 2010 年 3 月 14 日到上午 2:00，時間前移一個小時，到凌晨 3:00</span><span class="sxs-lookup"><span data-stu-id="02553-1807">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="02553-1808">這個小時間隔是無效的時間，也就是不存在於這個時區的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1808">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="02553-1809">下列範例顯示時的時間必須落在此範圍會轉換為二進位值所<xref:System.DateTime.ToBinary%2A>方法，然後還原<xref:System.DateTime.FromBinary%2A>成為有效的時間會調整的方法，將原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-1809">The following example shows that when a time that falls within this range is converted to a binary value by the <xref:System.DateTime.ToBinary%2A> method and is then restored by the <xref:System.DateTime.FromBinary%2A> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="02553-1810">您可以判斷是否是特定日期和時間值可能會受到修改傳遞至<xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType>方法，為此範例說明。</span><span class="sxs-lookup"><span data-stu-id="02553-1810">You can determine whether a particular date and time value may be subject to modification by passing it to the <xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=nameWithType> method, as the example illustrates.</span></span>  
  
     [!code-csharp[System.DateTime.FromBinary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)]
     [!code-vb[System.DateTime.FromBinary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)]  
  
## <a name="version-considerations"></a><span data-ttu-id="02553-1811">版本的考量</span><span class="sxs-lookup"><span data-stu-id="02553-1811">Version Considerations</span></span>  
 <span data-ttu-id="02553-1812">從.NET Framework 2.0 版中，開始<xref:System.DateTime>結構包含私用的類型欄位，指出指定的時間值根據本地時間或國際標準時間 (UTC)，或是兩者皆非和私用的 「 刻度 」 欄位，其中包含指定的日期和時間的 100 奈秒刻度數。</span><span class="sxs-lookup"><span data-stu-id="02553-1812">Starting with the .NET Framework version 2.0, a <xref:System.DateTime> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</span></span> <span data-ttu-id="02553-1813">可以使用存取刻度欄位<xref:System.DateTime.Ticks%2A>屬性和類型的欄位可以使用存取<xref:System.DateTime.Kind%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1813">The Ticks field can be accessed with the <xref:System.DateTime.Ticks%2A> property and the Kind field can be accessed with the <xref:System.DateTime.Kind%2A> property.</span></span>  
  
 <span data-ttu-id="02553-1814">在.NET Framework 2.0 中，如果您序列化之前<xref:System.DateTime>物件，以手動方式而非使用序列化介面，例如<xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>，您只需要序列化中的刻度資料<xref:System.DateTime>結構。</span><span class="sxs-lookup"><span data-stu-id="02553-1814">Prior to the .NET Framework 2.0, if you serialized a <xref:System.DateTime> object manually instead of using a serialization interface such as <xref:System.Runtime.Serialization.ISerializable?displayProperty=nameWithType>, you only needed to serialize the Ticks data in the <xref:System.DateTime> structure.</span></span> <span data-ttu-id="02553-1815">從 2.0 版開始，您也必須序列化類型的資料。</span><span class="sxs-lookup"><span data-stu-id="02553-1815">Starting with version 2.0, you must also serialize the Kind data.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DateTime.FromBinary(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Today">
      <MemberSignature Language="C#" Value="public static DateTime Today { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime Today" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Today" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Today As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime Today { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Today : DateTime" Usage="System.DateTime.Today" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-1816">取得目前的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1816">Gets the current date.</span></span></summary>
        <value><span data-ttu-id="02553-1817">物件，設定為今天的日期，且時間元件設定為 00:00:00。</span><span class="sxs-lookup"><span data-stu-id="02553-1817">An object that is set to today's date, with the time component set to 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1818">從.NET Framework 2.0 版開始，傳回值是<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>屬性會傳回<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="02553-1818">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Local>.</span></span>  
  
 <span data-ttu-id="02553-1819">因為它會傳回目前的日期，而目前的時間，不<xref:System.DateTime.Today%2A>屬性是適用於只使用日期的應用程式中使用。</span><span class="sxs-lookup"><span data-stu-id="02553-1819">Because it returns the current date without the current time, the <xref:System.DateTime.Today%2A> property is suitable for use in applications that work with dates only.</span></span> <span data-ttu-id="02553-1820">如需詳細資訊，請參閱 <<c0> [ 選擇 DateTime、 DateTimeOffset、 TimeSpan 和 TimeZoneInfo 之間](~/docs/standard/datetime/choosing-between-datetime.md)。</span><span class="sxs-lookup"><span data-stu-id="02553-1820">For details, see [Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo](~/docs/standard/datetime/choosing-between-datetime.md).</span></span> <span data-ttu-id="02553-1821">相反地，<xref:System.DateTime.TimeOfDay%2A>屬性會傳回目前的時間，而不需要目前的日期，而<xref:System.DateTime.Now%2A>屬性會傳回目前的日期和目前的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1821">In contrast, the <xref:System.DateTime.TimeOfDay%2A> property returns the current time without the current date, and the <xref:System.DateTime.Now%2A> property returns both the current date and the current time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1822">下列範例會使用<xref:System.DateTime.Date%2A>屬性來擷取目前的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1822">The following example uses the <xref:System.DateTime.Date%2A> property to retrieve the current date.</span></span> <span data-ttu-id="02553-1823">它也說明了如何<xref:System.DateTime>值可以使用某些標準日期和時間格式字串格式化。</span><span class="sxs-lookup"><span data-stu-id="02553-1823">It also illustrates how a <xref:System.DateTime> value can be formatted using some of the standard date and time format strings.</span></span> <span data-ttu-id="02553-1824">請注意的第三個呼叫所產生的輸出<xref:System.DateTime.ToString%28System.String%29>方法使用 g 格式規範，以包含時間元件，也就是零。</span><span class="sxs-lookup"><span data-stu-id="02553-1824">Note that the output produced by the third call to the <xref:System.DateTime.ToString%28System.String%29> method uses the g format specifier to include the time component, which is zero.</span></span>  
  
 [!code-csharp[System.DateTime.Today#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Today/cs/Today1.cs#1)]
 [!code-vb[System.DateTime.Today#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Today/vb/Today1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTime.Now" />
        <altmember cref="P:System.DateTime.TimeOfDay" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTime">
      <MemberSignature Language="C#" Value="public long ToFileTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTime();" />
      <MemberSignature Language="F#" Value="member this.ToFileTime : unit -&gt; int64" Usage="dateTime.ToFileTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1825">將目前 <see cref="T:System.DateTime" /> 物件的值轉換成 Windows 檔案時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1825">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="02553-1826">以 Windows 檔案時間表示的目前 <see cref="T:System.DateTime" /> 物件的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1826">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1827">Windows 檔案時間會表示 12:00，年 1 月 1 西元 1601年日午夜起已經過的 100 奈秒間隔數的 64 位元值</span><span class="sxs-lookup"><span data-stu-id="02553-1827">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="02553-1828">(C.E.)國際標準時間 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-1828">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="02553-1829">Windows 會使用檔案的時間，來記錄應用程式建立、 存取，或寫入檔案時。</span><span class="sxs-lookup"><span data-stu-id="02553-1829">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="02553-1830"><xref:System.DateTime.ToFileTime%2A>方法會使用<xref:System.DateTime.Kind%2A>屬性來判斷是否目前<xref:System.DateTime>物件是當地時間、 UTC 時間或未指定的一種會被視為當地時間的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1830">The <xref:System.DateTime.ToFileTime%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1831">下列範例示範<xref:System.DateTime.ToFileTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1831">The following example demonstrates the <xref:System.DateTime.ToFileTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToFileTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToFileTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToFileTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToFileTime/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1832">產生的檔案時間會代表西元 1601 年 1 月 1 日午夜 12:00 之前的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1832">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="02553-1833">UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1833">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1834">一般情況下，<see cref="M:System.DateTime.FromFileTime(System.Int64)" />方法還原<see cref="T:System.DateTime" />所儲存的值<see cref="M:System.DateTime.ToFileTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1834">Ordinarily, the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method restores a <see cref="T:System.DateTime" /> value that was saved by the <see cref="M:System.DateTime.ToFileTime" /> method.</span></span> <span data-ttu-id="02553-1835">不過，在下列情況下的兩個值可能與不同：</span><span class="sxs-lookup"><span data-stu-id="02553-1835">However, the two values may differ under the following conditions:</span></span> 
<span data-ttu-id="02553-1836">-如果序列化和還原序列化<see cref="T:System.DateTime" />值偏高，在不同的時區。</span><span class="sxs-lookup"><span data-stu-id="02553-1836">-   If the serialization and deserialization of the <see cref="T:System.DateTime" /> value occur in different time zones.</span></span> <span data-ttu-id="02553-1837">例如，如果<see cref="T:System.DateTime" />時間為下午 12:30 的值</span><span class="sxs-lookup"><span data-stu-id="02553-1837">For example, if a <see cref="T:System.DateTime" /> value with a time of 12:30 P.M.</span></span> <span data-ttu-id="02553-1838">在美國序列化，並再還原序列化在美國東部時區太平洋時間區域，原始的值為下午 12:30</span><span class="sxs-lookup"><span data-stu-id="02553-1838">in the U.S. Eastern Time zone is serialized, and then deserialized in the U.S. Pacific Time zone, the original value of 12:30 P.M.</span></span> <span data-ttu-id="02553-1839">已調整為上午 9:30</span><span class="sxs-lookup"><span data-stu-id="02553-1839">is adjusted to 9:30 A.M.</span></span> <span data-ttu-id="02553-1840">反映兩個時區之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1840">to reflect the difference between the two time zones.</span></span>  
  
<span data-ttu-id="02553-1841">-如果<see cref="T:System.DateTime" />序列化的值表示無效的時間以當地時區。</span><span class="sxs-lookup"><span data-stu-id="02553-1841">-   If the <see cref="T:System.DateTime" /> value that is serialized represents an invalid time in the local time zone.</span></span> <span data-ttu-id="02553-1842">在此情況下，<see cref="M:System.DateTime.ToFileTime" />方法會調整還原<see cref="T:System.DateTime" />值，使其表示有效的時間以當地時區。</span><span class="sxs-lookup"><span data-stu-id="02553-1842">In this case, the <see cref="M:System.DateTime.ToFileTime" /> method adjusts the restored <see cref="T:System.DateTime" /> value so that it represents a valid time in the local time zone.</span></span>  
  
<span data-ttu-id="02553-1843">例如，從標準時間轉換到日光節約時間會發生在美國太平洋時間區域，在 2010 年 3 月 14 日到上午 2:00，時間前移一個小時，到凌晨 3:00</span><span class="sxs-lookup"><span data-stu-id="02553-1843">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="02553-1844">這個小時間隔是無效的時間，也就是不存在於這個時區的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1844">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="02553-1845">下列範例會顯示該時的時間必須落在這個範圍會會轉換為長整數值<see cref="M:System.DateTime.ToFileTime" />方法，然後還原<see cref="M:System.DateTime.FromFileTime(System.Int64)" />成為有效的時間會調整的方法，將原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-1845">The following example shows that when a time that falls within this range is converted to a long integer value by the <see cref="M:System.DateTime.ToFileTime" /> method and is then restored by the <see cref="M:System.DateTime.FromFileTime(System.Int64)" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="02553-1846">您可以判斷是否是特定日期和時間值可能會受到修改傳遞至<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />方法，為此範例說明。</span><span class="sxs-lookup"><span data-stu-id="02553-1846">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="02553-1847">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="02553-1847">[!code-csharp[System.DateTime.FromFileTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.fromfiletime/cs/fromfiletime1.cs#1)] [!code-vb[System.DateTime.FromFileTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.fromfiletime/vb/fromfiletime1.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTimeUtc" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToFileTimeUtc">
      <MemberSignature Language="C#" Value="public long ToFileTimeUtc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 ToFileTimeUtc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Function ToFileTimeUtc () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long ToFileTimeUtc();" />
      <MemberSignature Language="F#" Value="member this.ToFileTimeUtc : unit -&gt; int64" Usage="dateTime.ToFileTimeUtc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1848">將目前 <see cref="T:System.DateTime" /> 物件的值轉換成 Windows 檔案時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1848">Converts the value of the current <see cref="T:System.DateTime" /> object to a Windows file time.</span></span></summary>
        <returns><span data-ttu-id="02553-1849">以 Windows 檔案時間表示的目前 <see cref="T:System.DateTime" /> 物件的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1849">The value of the current <see cref="T:System.DateTime" /> object expressed as a Windows file time.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1850">Windows 檔案時間會表示 12:00，年 1 月 1 西元 1601年日午夜起已經過的 100 奈秒間隔數的 64 位元值</span><span class="sxs-lookup"><span data-stu-id="02553-1850">A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</span></span> <span data-ttu-id="02553-1851">(C.E.)國際標準時間 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-1851">(C.E.) Coordinated Universal Time (UTC).</span></span> <span data-ttu-id="02553-1852">Windows 會使用檔案的時間，來記錄應用程式建立、 存取，或寫入檔案時。</span><span class="sxs-lookup"><span data-stu-id="02553-1852">Windows uses a file time to record when an application creates, accesses, or writes to a file.</span></span>  
  
 <span data-ttu-id="02553-1853"><xref:System.DateTime.ToFileTimeUtc%2A>方法會使用<xref:System.DateTime.Kind%2A>屬性來判斷是否目前<xref:System.DateTime>物件是當地時間、 UTC 時間或未指定的類型的時間視為 UTC 時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1853">The <xref:System.DateTime.ToFileTimeUtc%2A> method uses the <xref:System.DateTime.Kind%2A> property to determine whether the current <xref:System.DateTime> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.</span></span> <span data-ttu-id="02553-1854">如果是當地時間，它將時間轉換為 UTC 之前執行成 Windows 檔案時間轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1854">If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1855">產生的檔案時間會代表西元 1601 年 1 月 1 日午夜 12:00 之前的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1855">The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</span></span> <span data-ttu-id="02553-1856">UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-1856">UTC.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1857"><see cref="M:System.DateTime.ToFileTimeUtc" />方法有時會使用當地時間轉換為 UTC，並接著還原藉由呼叫<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />方法，後面<see cref="M:System.DateTime.ToLocalTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1857">The <see cref="M:System.DateTime.ToFileTimeUtc" /> method is sometimes used to convert a local time to UTC, and subsequently to restore it by calling the <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method followed by the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span> <span data-ttu-id="02553-1858">不過，如果原始時間代表不正確的時間以當地時區，兩個的當地時間值不會相等。</span><span class="sxs-lookup"><span data-stu-id="02553-1858">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="02553-1859">如需詳細資訊，請參閱<see cref="M:System.DateTime.ToLocalTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1859">For additional information, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span></para></block>
        <altmember cref="M:System.DateTime.ToFileTime" />
        <altmember cref="T:System.Int64" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="ToLocalTime">
      <MemberSignature Language="C#" Value="public DateTime ToLocalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToLocalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLocalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLocalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToLocalTime();" />
      <MemberSignature Language="F#" Value="member this.ToLocalTime : unit -&gt; DateTime" Usage="dateTime.ToLocalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1860">將目前 <see cref="T:System.DateTime" /> 物件的值轉換成本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1860">Converts the value of the current <see cref="T:System.DateTime" /> object to local time.</span></span></summary>
        <returns><span data-ttu-id="02553-1861">物件，其 <see cref="P:System.DateTime.Kind" /> 屬性為 <see cref="F:System.DateTimeKind.Local" />，而其值為與目前 <see cref="T:System.DateTime" /> 物件的值相等的本地時間；如果轉換過的值太大，而無法由 <see cref="F:System.DateTime.MaxValue" /> 物件表示，則為 <see cref="T:System.DateTime" />；如果轉換過的值太小，而無法表示為 <see cref="F:System.DateTime.MinValue" /> 物件，則為 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1861">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Local" />, and whose value is the local time equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1862">本地時間等於 Coordinated Universal Time (UTC) 時間再加上 UTC 時差。</span><span class="sxs-lookup"><span data-stu-id="02553-1862">The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.</span></span> <span data-ttu-id="02553-1863">如需 UTC 時差的詳細資訊，請參閱<xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1863">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1864">轉換也會納入考慮日光節約時間規則套用至目前所表示之時間<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1864">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-1865">在 [!INCLUDE[winxp](~/includes/winxp-md.md)]系統<xref:System.DateTime.ToLocalTime%2A>方法會從 UTC 轉換為當地時間時，會辨識只在目前的調整規則。</span><span class="sxs-lookup"><span data-stu-id="02553-1865">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToLocalTime%2A> method recognizes only the current adjustment rule when converting from UTC to local time.</span></span> <span data-ttu-id="02553-1866">如此一來，轉換為目前的調整規則生效之前的期間，可能不會正確反映 UTC 與當地時間之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-1866">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.</span></span>  
  
 <span data-ttu-id="02553-1867">從.NET Framework 2.0 版中，所傳回的值開始<xref:System.DateTime.ToLocalTime%2A>取決於方法<xref:System.DateTime.Kind%2A>屬性與目前<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1867">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToLocalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-1868">下表說明可能的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-1868">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="02553-1869">類型</span><span class="sxs-lookup"><span data-stu-id="02553-1869">Kind</span></span>|<span data-ttu-id="02553-1870">結果</span><span class="sxs-lookup"><span data-stu-id="02553-1870">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="02553-1871">這個執行個體<xref:System.DateTime>轉換為本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1871">This instance of <xref:System.DateTime> is converted to local time.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="02553-1872">不會執行轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-1872">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="02553-1873">這個執行個體<xref:System.DateTime>假設為 UTC 時間，並執行轉換作業一樣<xref:System.DateTime.Kind%2A>已<xref:System.DateTimeKind.Utc>。</span><span class="sxs-lookup"><span data-stu-id="02553-1873">This instance of <xref:System.DateTime> is assumed to be a UTC time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Utc>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="02553-1874"><xref:System.DateTime.ToLocalTime%2A>方法將<xref:System.DateTime>為當地時間與 utc 之間的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1874">The <xref:System.DateTime.ToLocalTime%2A> method converts a <xref:System.DateTime> value from UTC to local time.</span></span> <span data-ttu-id="02553-1875">若要在任何指定的時區時間轉換為當地時間，使用<xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1875">To convert the time in any designated time zone to local time, use the <xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="02553-1876">轉換所傳回的值是<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>屬性一律會傳回<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="02553-1876">The value returned by the conversion is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property always returns <xref:System.DateTimeKind.Local>.</span></span> <span data-ttu-id="02553-1877">有效的結果傳回的結果，即使<xref:System.DateTime.ToLocalTime%2A>重複套用至相同<xref:System.DateTime>。</span><span class="sxs-lookup"><span data-stu-id="02553-1877">Consequently, a valid result is returned even if <xref:System.DateTime.ToLocalTime%2A> is applied repeatedly to the same <xref:System.DateTime>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1878">下列範例示範<xref:System.DateTime.ToLocalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1878">The following example demonstrates the <xref:System.DateTime.ToLocalTime%2A> method.</span></span> <span data-ttu-id="02553-1879">請注意，確切的輸出取決於目前的文化特性和執行所在系統的當地時區。</span><span class="sxs-lookup"><span data-stu-id="02553-1879">Note that the exact output depends on the current culture and the local time zone of the system on which it is run.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="02553-1880">下列範例會使用<xref:System.DateTime.SpecifyKind%2A>方法，示範如何<xref:System.DateTime.Kind%2A>屬性會影響<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>轉換方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1880">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1881">您可以使用<see cref="M:System.DateTime.ToLocalTime" />方法來還原的本機日期和時間值轉換為 UTC<see cref="M:System.DateTime.ToUniversalTime" />或<see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1881">You can use the <see cref="M:System.DateTime.ToLocalTime" /> method to restore a local date and time value that was converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> or <see cref="M:System.DateTime.FromFileTimeUtc(System.Int64)" /> method.</span></span> <span data-ttu-id="02553-1882">不過，如果原始時間代表不正確的時間以當地時區，它會符合已還原的值。</span><span class="sxs-lookup"><span data-stu-id="02553-1882">However, if the original time represents an invalid time in the local time zone, it will not match the restored value.</span></span> <span data-ttu-id="02553-1883">當<see cref="M:System.DateTime.ToLocalTime" />方法將時間從 UTC 轉換為當地時區，它也在當地時區調整因此也就是有效的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1883">When the <see cref="M:System.DateTime.ToLocalTime" /> method converts a time from UTC to the local time zone, it also adjusts the time so that is valid in the local time zone.</span></span>  
  
<span data-ttu-id="02553-1884">例如，從標準時間轉換到日光節約時間會發生在美國太平洋時間區域，在 2010 年 3 月 14 日到上午 2:00，時間前移一個小時，到凌晨 3:00</span><span class="sxs-lookup"><span data-stu-id="02553-1884">For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</span></span> <span data-ttu-id="02553-1885">這個小時間隔是無效的時間，也就是不存在於這個時區的時間間隔。</span><span class="sxs-lookup"><span data-stu-id="02553-1885">This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</span></span> <span data-ttu-id="02553-1886">下列範例顯示時的時間必須落在這個範圍會轉換為 UTC<see cref="M:System.DateTime.ToUniversalTime" />方法，然後還原<see cref="M:System.DateTime.ToLocalTime" />成為有效的時間會調整的方法，將原始值。</span><span class="sxs-lookup"><span data-stu-id="02553-1886">The following example shows that when a time that falls within this range is converted to UTC by the <see cref="M:System.DateTime.ToUniversalTime" /> method and is then restored by the <see cref="M:System.DateTime.ToLocalTime" /> method, the original value is adjusted to become a valid time.</span></span> <span data-ttu-id="02553-1887">您可以判斷是否是特定日期和時間值可能會受到修改傳遞至<see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" />方法，為此範例說明。</span><span class="sxs-lookup"><span data-stu-id="02553-1887">You can determine whether a particular date and time value may be subject to modification by passing it to the <see cref="M:System.TimeZoneInfo.IsInvalidTime(System.DateTime)" /> method, as the example illustrates.</span></span>  
  
<span data-ttu-id="02553-1888">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="02553-1888">[!code-csharp[System.DateTime.ToLocalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolocaltime/cs/tolocaltime1.cs#1)] [!code-vb[System.DateTime.ToLocalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolocaltime/vb/tolocaltime1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.TimeZone" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
        <altmember cref="M:System.TimeZone.GetDaylightChanges(System.Int32)" />
        <altmember cref="M:System.DateTime.ToUniversalTime" />
      </Docs>
    </Member>
    <Member MemberName="ToLongDateString">
      <MemberSignature Language="C#" Value="public string ToLongDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongDateString();" />
      <MemberSignature Language="F#" Value="member this.ToLongDateString : unit -&gt; string" Usage="dateTime.ToLongDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1889">將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的完整日期 (Long Date) 字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1889">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long date string representation.</span></span></summary>
        <returns><span data-ttu-id="02553-1890">字串，內含目前 <see cref="T:System.DateTime" /> 物件的完整日期字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1890">A string that contains the long date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1891">目前的值<xref:System.DateTime>物件的格式使用所定義的模式<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A>與目前執行緒文化特性相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1891">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A> property associated with the current thread culture.</span></span> <span data-ttu-id="02553-1892">傳回值是藉由指定"D"所傳回的值相同[標準 DateTime 格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)與<xref:System.DateTime.ToString%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1892">The return value is identical to the value returned by specifying the "D" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1893">所傳回的字串<xref:System.DateTime.ToLongDateString%2A>方法會區分文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1893">The string returned by the <xref:System.DateTime.ToLongDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="02553-1894">它會反映目前的文化特性所定義的模式<xref:System.Globalization.DateTimeFormatInfo.LongDatePattern?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1894">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.LongDatePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-1895">例如，EN-US 文化特性，標準的長日期模式通常是"dddd，MMMM dd，yyyy";DE-DE 文化特性，它為"dddd，d。</span><span class="sxs-lookup"><span data-stu-id="02553-1895">For example, for the en-US culture, the standard long date pattern is commonly "dddd, MMMM dd, yyyy"; for the de-DE culture, it is "dddd, d.</span></span> <span data-ttu-id="02553-1896">MMMM yyyy";若為 JA-JP 文化特性中，則是"yyyy '年 AM' 月有 '日' 」。</span><span class="sxs-lookup"><span data-stu-id="02553-1896">MMMM yyyy"; for the ja-JP culture, it is "yyyy'年'M'月'd'日'".</span></span> <span data-ttu-id="02553-1897">請注意，它的值而異的.NET 實作和其版本、 作業系統和其版本，以及使用者自訂。</span><span class="sxs-lookup"><span data-stu-id="02553-1897">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]
  
## Examples

<span data-ttu-id="02553-1898">下列範例示範<xref:System.DateTime.ToLongDateString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1898">The following example demonstrates the <xref:System.DateTime.ToLongDateString%2A> method.</span></span>  
  
[!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
[!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="02553-1899">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="02553-1899">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1900">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1900">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToLongTimeString">
      <MemberSignature Language="C#" Value="public string ToLongTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLongTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToLongTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLongTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLongTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToLongTimeString : unit -&gt; string" Usage="dateTime.ToLongTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1901">將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的完整時間 (Long Time) 字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1901">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent long time string representation.</span></span></summary>
        <returns><span data-ttu-id="02553-1902">字串，內含目前 <see cref="T:System.DateTime" /> 物件的完整時間字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1902">A string that contains the long time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="02553-1903">目前的值<xref:System.DateTime>物件的格式使用所定義的模式<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>與目前執行緒文化特性相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1903">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="02553-1904">傳回值是藉由指定"T"傳回的值相同[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)與<xref:System.DateTime.ToString%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1904">The return value is identical to the value returned by specifying the "T" [standard date and time format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1905">所傳回的字串<xref:System.DateTime.ToLongTimeString%2A>方法會區分文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1905">The string returned by the <xref:System.DateTime.ToLongTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="02553-1906">它會反映目前的文化特性所定義的模式<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1906">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-1907">例如，EN-US 文化特性，標準的長日期模式是"h:mm: ss tt";DE-DE 文化特性，它是"Hh: mm:;"若為 JA-JP 文化特性，它是 「 h:mm: ss"。</span><span class="sxs-lookup"><span data-stu-id="02553-1907">For example, for the en-US culture, the standard long time pattern is "h:mm:ss tt"; for the de-DE culture, it is "HH:mm:ss"; for the ja-JP culture, it is "H:mm:ss".</span></span> <span data-ttu-id="02553-1908">請注意，它的值而異的.NET 實作和其版本、 作業系統和其版本，以及使用者自訂。</span><span class="sxs-lookup"><span data-stu-id="02553-1908">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive-formatting](~/includes/thread-formatting.md)]
  
## Examples  
 <span data-ttu-id="02553-1909">下列範例示範<xref:System.DateTime.ToLongTimeString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1909">The following example demonstrates the <xref:System.DateTime.ToLongTimeString%2A> method.</span></span>  
  
 [!code-csharp[System.DateTime.ToLongTimeString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tolongtimestring/cs/sls.cs#1)]
 [!code-vb[System.DateTime.ToLongTimeString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tolongtimestring/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="02553-1910">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="02553-1910">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1911">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1911">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToOADate">
      <MemberSignature Language="C#" Value="public double ToOADate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 ToOADate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToOADate" />
      <MemberSignature Language="VB.NET" Value="Public Function ToOADate () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double ToOADate();" />
      <MemberSignature Language="F#" Value="member this.ToOADate : unit -&gt; double" Usage="dateTime.ToOADate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1912">將這個執行個體的值轉換為相等的 OLE Automation 日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1912">Converts the value of this instance to the equivalent OLE Automation date.</span></span></summary>
        <returns><span data-ttu-id="02553-1913">雙精確度浮點數，含有等於這個執行個體值的 OLE Automation 日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1913">A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1914">OLE Automation 日期會實作為浮點數，其不可或缺的元件是之前或之後午夜，30 1899 年 12 月的天數，而其小數部分代表在除以 24 那一天的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1914">An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.</span></span> <span data-ttu-id="02553-1915">例如，日午夜 31 年 12 月 1899年表示 1.0;上午 6 點 2.25; 表示 1 年 1 月 1900午夜-1.0; 表示 29 的 12 月 1899而且早上 6 點-1.25 表示 29 的 12 月 1899年。</span><span class="sxs-lookup"><span data-stu-id="02553-1915">For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</span></span>  
  
 <span data-ttu-id="02553-1916">基底 OLE Automation 日期是午夜，30 年 12 月 1899年。</span><span class="sxs-lookup"><span data-stu-id="02553-1916">The base OLE Automation Date is midnight, 30 December 1899.</span></span> <span data-ttu-id="02553-1917">OLE Automation 日期的下限是 1 年 1 月 0100 年午夜。</span><span class="sxs-lookup"><span data-stu-id="02553-1917">The minimum OLE Automation date is midnight, 1 January 0100.</span></span> <span data-ttu-id="02553-1918">最大 OLE Automation 日期等同於<xref:System.DateTime.MaxValue?displayProperty=nameWithType>、 31 年 12 月的最後一刻 9999。</span><span class="sxs-lookup"><span data-stu-id="02553-1918">The maximum OLE Automation Date is the same as <xref:System.DateTime.MaxValue?displayProperty=nameWithType>, the last moment of 31 December 9999.</span></span>  
  
 <span data-ttu-id="02553-1919"><xref:System.DateTime.ToOADate%2A>方法會擲回<xref:System.OverflowException>如果目前的執行個體代表日期晚於<xref:System.DateTime.MaxValue>及更早的版本比 0100 January1，在午夜。</span><span class="sxs-lookup"><span data-stu-id="02553-1919">The <xref:System.DateTime.ToOADate%2A> method throws an <xref:System.OverflowException> if the current instance represents a date that is later than <xref:System.DateTime.MaxValue> and earlier than midnight on January1, 0100.</span></span> <span data-ttu-id="02553-1920">不過，如果目前的執行個體的值為<xref:System.DateTime.MinValue>，此方法會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="02553-1920">However, if the value of the current instance is <xref:System.DateTime.MinValue>, the method returns 0.</span></span>  
  
 <span data-ttu-id="02553-1921">如需有關 OLE Automation 的詳細資訊，請參閱[MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118)。</span><span class="sxs-lookup"><span data-stu-id="02553-1921">For more information about OLE Automation, see the [MSDN Library](https://go.microsoft.com/fwlink/?linkid=37118).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="02553-1922">這個執行個體的值無法表示為 OLE Automation 日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1922">The value of this instance cannot be represented as an OLE Automation Date.</span></span></exception>
        <altmember cref="T:System.Double" />
        <altmember cref="M:System.DateTime.FromOADate(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ToShortDateString">
      <MemberSignature Language="C#" Value="public string ToShortDateString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortDateString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortDateString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortDateString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortDateString();" />
      <MemberSignature Language="F#" Value="member this.ToShortDateString : unit -&gt; string" Usage="dateTime.ToShortDateString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1923">將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的簡短日期 (Short Date) 字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1923">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short date string representation.</span></span></summary>
        <returns><span data-ttu-id="02553-1924">字串，內含目前 <see cref="T:System.DateTime" /> 物件的簡短日期字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1924">A string that contains the short date string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1925">目前的值<xref:System.DateTime>物件的格式使用所定義的模式<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType>與目前執行緒文化特性相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1925">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="02553-1926">傳回值是藉由指定"d"所傳回的值相同[標準 DateTime 格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)與<xref:System.DateTime.ToString%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1926">The return value is identical to the value returned by specifying the "d" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1927">所傳回的字串<xref:System.DateTime.ToShortDateString%2A>方法會區分文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1927">The string returned by the <xref:System.DateTime.ToShortDateString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="02553-1928">它會反映目前的文化特性所定義的模式<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1928">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-1929">例如，EN-US 文化特性，標準的簡短日期模式是"yyyy/m /";DE-DE 文化特性，它會是"dd。MM.yyyy";若為 JA-JP 文化特性，它可以是"yyyy/MM/dd"。</span><span class="sxs-lookup"><span data-stu-id="02553-1929">For example, for the en-US culture, the standard short date pattern is "M/d/yyyy"; for the de-DE culture, it is "dd.MM.yyyy"; for the ja-JP culture, it is "yyyy/MM/dd".</span></span> <span data-ttu-id="02553-1930">請注意，它的值而異的.NET 實作和其版本、 作業系統和其版本，以及使用者自訂。</span><span class="sxs-lookup"><span data-stu-id="02553-1930">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span>

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]

## Examples  
 <span data-ttu-id="02553-1931">下列範例示範<xref:System.DateTime.ToShortDateString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1931">The following example demonstrates the <xref:System.DateTime.ToShortDateString%2A> method.</span></span> <span data-ttu-id="02553-1932">它也會顯示所呼叫的結果<xref:System.DateTime.ToShortDateString%2A>方法等同於呼叫<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>使用"d"作為 format 參數的方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1932">It also shows that the result of calling the <xref:System.DateTime.ToShortDateString%2A> method is identical to calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method with "d" as the format parameter.</span></span>  
  
 [!code-csharp[System.DateTime.ToShortDateString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/cs/ToShortDateString.cs#1)]
 [!code-vb[System.DateTime.ToShortDateString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToShortDateString/vb/ToShortDateString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="02553-1933">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="02553-1933">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1934">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1934">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToShortTimeString">
      <MemberSignature Language="C#" Value="public string ToShortTimeString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToShortTimeString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToShortTimeString" />
      <MemberSignature Language="VB.NET" Value="Public Function ToShortTimeString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToShortTimeString();" />
      <MemberSignature Language="F#" Value="member this.ToShortTimeString : unit -&gt; string" Usage="dateTime.ToShortTimeString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1935">將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的簡短時間 (Short Time) 字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1935">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent short time string representation.</span></span></summary>
        <returns><span data-ttu-id="02553-1936">字串，內含目前 <see cref="T:System.DateTime" /> 物件的簡短時間字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1936">A string that contains the short time string representation of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="02553-1937">目前的值<xref:System.DateTime>物件的格式使用所定義的模式<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType>與目前執行緒文化特性相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1937">The value of the current <xref:System.DateTime> object is formatted using the pattern defined by the <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=nameWithType> property associated with the current thread culture.</span></span> <span data-ttu-id="02553-1938">傳回值是藉由指定"t"傳回的值相同[標準 DateTime 格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)與<xref:System.DateTime.ToString%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1938">The return value is identical to the value returned by specifying the "t" [standard DateTime format string](~/docs/standard/base-types/standard-date-and-time-format-strings.md) with the <xref:System.DateTime.ToString%28System.String%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-1939">所傳回的字串<xref:System.DateTime.ToShortTimeString%2A>方法會區分文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1939">The string returned by the <xref:System.DateTime.ToShortTimeString%2A> method is culture-sensitive.</span></span> <span data-ttu-id="02553-1940">它會反映目前的文化特性所定義的模式<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1940">It reflects the pattern defined by the current culture's <xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-1941">例如，EN-US 文化特性，標準的簡短時間模式是"h:mm tt";DE-DE 文化特性，它為"Hh: mm";若為 JA-JP 文化特性，它是"H:mm"。</span><span class="sxs-lookup"><span data-stu-id="02553-1941">For example, for the en-US culture, the standard short time pattern is "h:mm tt"; for the de-DE culture, it is "HH:mm"; for the ja-JP culture, it is "H:mm".</span></span> <span data-ttu-id="02553-1942">請注意，它的值而異的.NET 實作和其版本、 作業系統和其版本，以及使用者自訂。</span><span class="sxs-lookup"><span data-stu-id="02553-1942">Note that its value can vary depending on the .NET implementation and its version, the operating system and its version, and user customization.</span></span> 

[!INCLUDE[culture-sensitive formatting](~/includes/thread-formatting.md)]

## Examples  
 <span data-ttu-id="02553-1943">下列範例示範<xref:System.DateTime.ToShortTimeString%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1943">The following example demonstrates the <xref:System.DateTime.ToShortTimeString%2A> method.</span></span>  
  
 [!code-csharp[DateTime.ToShortLongString#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToShortLongString/cs/sls.cs#1)]
 [!code-vb[DateTime.ToShortLongString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToShortLongString/vb/sls.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.DateTimeFormat" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="M:System.DateTime.ToString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="02553-1944">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="02553-1944">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-1945">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-1945">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-1946">將目前 <see cref="T:System.DateTime" /> 物件的值，轉換為其相等的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1946">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="dateTime.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-1947">使用目前文化特性的格式化慣例，將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1947">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="02553-1948">目前 <see cref="T:System.DateTime" /> 物件值的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1948">A string representation of the value of the current <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1949">目前的值<xref:System.DateTime>物件的格式會使用一般的日期和時間格式規範 ('G')。</span><span class="sxs-lookup"><span data-stu-id="02553-1949">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G').</span></span> <span data-ttu-id="02553-1950">若要設定格式使用特定的日期和時間格式規範，請呼叫<xref:System.DateTime.ToString%28System.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1950">To format it using a specific date and time format specifier, call the <xref:System.DateTime.ToString%28System.String%29> method.</span></span> <span data-ttu-id="02553-1951">若要設定它使用一般的日期和時間格式規範 ('G') 的特定文化特性的格式，請呼叫<xref:System.DateTime.ToString%28System.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1951">To format it using the general date and time format specifier ('G') for a specific culture, call the <xref:System.DateTime.ToString%28System.IFormatProvider%29> method.</span></span> <span data-ttu-id="02553-1952">若要格式化使用特定的日期和時間格式規範和特定文化特性的慣例，呼叫<xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-1952">To format it using a specific date and time format specifier and the conventions of a specific culture, call the <xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="02553-1953">這個方法會使用衍生自目前的文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1953">This method uses formatting information derived from the current culture.</span></span> <span data-ttu-id="02553-1954">特別是，它結合了所傳回的自訂格式字串<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>並<xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A>的屬性<xref:System.Globalization.DateTimeFormatInfo>所傳回的物件`Thread.CurrentThread.CurrentCulture.DateTimeFormat`屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1954">In particular, it combines the custom format strings returned by the <xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A> and <xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A> properties of the <xref:System.Globalization.DateTimeFormatInfo> object returned by the `Thread.CurrentThread.CurrentCulture.DateTimeFormat` property.</span></span> <span data-ttu-id="02553-1955">如需詳細資訊，請參閱<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1955">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-1956">其他多載<xref:System.DateTime.ToString%2A>方法可讓您指定的文化特性的格式化，若要使用，並定義輸出的模式<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-1956">Other overloads of the <xref:System.DateTime.ToString%2A> method enable you to specify the culture whose formatting to use and to define the output pattern of the <xref:System.DateTime> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1957">下列範例說明如何的字串表示法<xref:System.DateTime>所傳回的值<xref:System.DateTime.ToString>方法取決於目前執行緒的文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1957">The following example illustrates how the string representation of a <xref:System.DateTime> value returned by the <xref:System.DateTime.ToString> method depends on the thread current culture.</span></span> <span data-ttu-id="02553-1958">從英文變更目前執行緒文化特性時，它為 FR-FR 為 JA-JP。</span><span class="sxs-lookup"><span data-stu-id="02553-1958">It changes the current thread culture from en-US to fr-FR to ja-JP.</span></span> <span data-ttu-id="02553-1959">並在每個情況下呼叫<xref:System.DateTime.ToString>方法，以傳回使用該文化特性的日期和時間值的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1959">and in each case calls the <xref:System.DateTime.ToString> method to return the string representation of a date and time value using that culture.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.DateTime.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1960">日期和時間超出目前文化特性使用之曆法所支援的日期範圍。</span><span class="sxs-lookup"><span data-stu-id="02553-1960">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1961"><see cref="M:System.DateTime.ToString" />方法會傳回在目前的文化特性所使用的行事曆中的日期和時間的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1961">The <see cref="M:System.DateTime.ToString" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="02553-1962">如果目前的值<see cref="T:System.DateTime" />執行個體是早於<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或更晚<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，此方法會擲回<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1962">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="02553-1963">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="02553-1963">The following example provides an illustration.</span></span> <span data-ttu-id="02553-1964">它會嘗試將超出範圍的日期格式<see cref="T:System.Globalization.HijriCalendar" />類別，在目前的文化特性為阿拉伯文 （敘利亞）。</span><span class="sxs-lookup"><span data-stu-id="02553-1964">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HijriCalendar" /> class when the current culture is Arabic (Syria).</span></span>  
  
<span data-ttu-id="02553-1965">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="02553-1965">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception2.cs#2)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception2.vb#2)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="dateTime.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="02553-1966">物件，提供特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-1966">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="02553-1967">使用指定的特定文化特性格式資訊，將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1967">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="02553-1968">目前 <see cref="T:System.DateTime" /> 物件值的字串表示，如 <paramref name="provider" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1968">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1969">目前的值<xref:System.DateTime>物件的格式會使用一般的日期和時間格式規範 ('G') 的格式化輸出使用簡短日期模式和完整時間模式。</span><span class="sxs-lookup"><span data-stu-id="02553-1969">The value of the current <xref:System.DateTime> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.</span></span>  
  
 <span data-ttu-id="02553-1970">簡短日期和完整時間模式的格式由所定義`provider`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-1970">The format of the short date and long time pattern is defined by the `provider` parameter.</span></span> <span data-ttu-id="02553-1971">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-1971">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-1972">A<xref:System.Globalization.CultureInfo>物件，表示要在傳回的字串會反映其格式設定慣例的文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-1972">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="02553-1973"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>屬性會定義傳回之字串的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1973">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="02553-1974">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1974">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-1975">自訂物件實作<xref:System.IFormatProvider>介面。</span><span class="sxs-lookup"><span data-stu-id="02553-1975">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="02553-1976">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1976">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-1977">如果`provider`已`null`，則<xref:System.Globalization.DateTimeFormatInfo>會使用目前文化特性相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1977">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> object associated with the current culture is used.</span></span> <span data-ttu-id="02553-1978">如需詳細資訊，請參閱<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1978">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-1979">下列範例會顯示日期和時間使用的字串表示<xref:System.Globalization.CultureInfo>代表五個不同的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-1979">The following example displays the string representation of a date and time using <xref:System.Globalization.CultureInfo> objects that represent five different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString4.cs#3)]
 [!code-vb[System.DateTime.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString4.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-1980">日期和時間超出 <paramref name="provider" /> 使用之曆法所支援的日期範圍。</span><span class="sxs-lookup"><span data-stu-id="02553-1980">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-1981"><see cref="M:System.DateTime.ToString(System.IFormatProvider)" />方法會傳回日期和時間的字串表示中所代表之文化特性所使用的曆法<paramref name="provider" />參數。</span><span class="sxs-lookup"><span data-stu-id="02553-1981">The <see cref="M:System.DateTime.ToString(System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the culture represented by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="02553-1982">其行事曆由定義<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-1982">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="02553-1983">如果目前的值<see cref="T:System.DateTime" />執行個體是早於<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或更晚<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，此方法會擲回<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-1983">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="02553-1984">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="02553-1984">The following example provides an illustration.</span></span> <span data-ttu-id="02553-1985">它會嘗試將超出範圍的日期格式<see cref="T:System.Globalization.JapaneseCalendar" />類別。</span><span class="sxs-lookup"><span data-stu-id="02553-1985">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.JapaneseCalendar" /> class.</span></span>  
  
<span data-ttu-id="02553-1986">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="02553-1986">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception1.cs#1)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception1.vb#1)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="dateTime.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="02553-1987">標準或自訂的日期和時間格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1987">A standard or custom date and time format string.</span></span></param>
        <summary><span data-ttu-id="02553-1988">使用指定的格式和目前文化特性的格式化慣例，將目前 <see cref="T:System.DateTime" /> 物件的值轉換為其相等的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-1988">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</span></span></summary>
        <returns><span data-ttu-id="02553-1989">目前 <see cref="T:System.DateTime" /> 物件值的字串表示，如 <paramref name="format" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-1989">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-1990"><xref:System.DateTime.ToString%28System.String%29>方法會傳回使用目前文化特性; 如需詳細資訊的格式化慣例的特定格式的日期和時間值的字串表示，請參閱<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-1990">The <xref:System.DateTime.ToString%28System.String%29> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02553-1991">`format`參數應該包含單一格式規範字元 (請參閱 <<c2> [ 標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) 或自訂格式模式 (請參閱[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md))，定義傳回之字串的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-1991">The `format` parameter should contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)) that defines the format of the returned string.</span></span> <span data-ttu-id="02553-1992">如果`format`是`null`或是空字串，一般格式規範，而 'G'，會使用。</span><span class="sxs-lookup"><span data-stu-id="02553-1992">If `format` is `null` or an empty string, the general format specifier, 'G', is used.</span></span>  
  
 <span data-ttu-id="02553-1993">這個方法的部分用法包括：</span><span class="sxs-lookup"><span data-stu-id="02553-1993">Some uses of this method include:</span></span>  
  
-   <span data-ttu-id="02553-1994">取得字串中目前的文化特性的簡短日期和時間格式顯示日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-1994">Getting a string that displays the date and time in the current culture's short date and time format.</span></span> <span data-ttu-id="02553-1995">若要這樣做，您可以使用"G"格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-1995">To do this, you use the "G" format specifier.</span></span>  
  
-   <span data-ttu-id="02553-1996">取得字串，包含只在月份和年份。</span><span class="sxs-lookup"><span data-stu-id="02553-1996">Getting a string that contains only the month and year.</span></span> <span data-ttu-id="02553-1997">若要這樣做，您可以使用"MM/yyyy"格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-1997">To do this, you use the "MM/yyyy" format string.</span></span> <span data-ttu-id="02553-1998">格式字串會使用目前文化特性的日期分隔符號。</span><span class="sxs-lookup"><span data-stu-id="02553-1998">The format string uses the current culture's date separator.</span></span>  
  
-   <span data-ttu-id="02553-1999">取得字串，包含以特定格式的時間與日期。</span><span class="sxs-lookup"><span data-stu-id="02553-1999">Getting a string that contains the date and time in a specific format.</span></span> <span data-ttu-id="02553-2000">比方說，「 MM/dd/yyyyHH:mm"格式字串會顯示日期和時間字串的固定格式如"19 / 03 / / 2013年 18:06"。</span><span class="sxs-lookup"><span data-stu-id="02553-2000">For example, the "MM/dd/yyyyHH:mm" format string displays the date and time string in a fixed format such as "19//03//2013 18:06".</span></span> <span data-ttu-id="02553-2001">格式字串會使用"/"做為固定的日期分隔符號，不論特定文化特性設定為何。</span><span class="sxs-lookup"><span data-stu-id="02553-2001">The format string uses "/" as a fixed date separator regardless of culture-specific settings.</span></span>  
  
-   <span data-ttu-id="02553-2002">取得壓縮格式的日期，可用於序列化的日期字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2002">Getting a date in a condensed format that could be used for serializing a date string.</span></span> <span data-ttu-id="02553-2003">例如，"yyyyMMdd"格式字串會顯示且沒有日期分隔符號後面兩位數月份和兩位數天數的四位數年份。</span><span class="sxs-lookup"><span data-stu-id="02553-2003">For example, the "yyyyMMdd" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.</span></span>  
  
 <span data-ttu-id="02553-2004">下列範例會使用這三個格式字串來顯示日期和時間值所使用之 EN-US 和 FR-FR 文化特性的慣例。</span><span class="sxs-lookup"><span data-stu-id="02553-2004">The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)]
 [!code-vb[System.DateTime.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="02553-2005">下列範例使用每個標準日期和時間格式字串和選取的自訂日期和時間格式字串來顯示的字串表示<xref:System.DateTime>值。</span><span class="sxs-lookup"><span data-stu-id="02553-2005">The following example uses each of the standard date and time format strings and a selection of custom date and time format strings to display the string representation of a <xref:System.DateTime> value.</span></span> <span data-ttu-id="02553-2006">此範例的執行緒目前文化特性是 EN-US。</span><span class="sxs-lookup"><span data-stu-id="02553-2006">The thread current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/ToString2.cs#2)]
 [!code-vb[System.DateTime.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/ToString2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-2007"><paramref name="format" /> 長度為 1，而且不屬於針對 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 定義的格式規範字元。</span><span class="sxs-lookup"><span data-stu-id="02553-2007">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="02553-2008">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-2008">-or-</span></span> 
 <span data-ttu-id="02553-2009"><paramref name="format" /> 不包含有效的自訂格式模式。</span><span class="sxs-lookup"><span data-stu-id="02553-2009"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-2010">日期和時間超出目前文化特性使用之曆法所支援的日期範圍。</span><span class="sxs-lookup"><span data-stu-id="02553-2010">The date and time is outside the range of dates supported by the calendar used by the current culture.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2011"><see cref="M:System.DateTime.ToString(System.String)" />方法會傳回在目前的文化特性所使用的行事曆中的日期和時間的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-2011">The <see cref="M:System.DateTime.ToString(System.String)" /> method returns the string representation of the date and time in the calendar used by the current culture.</span></span> <span data-ttu-id="02553-2012">如果目前的值<see cref="T:System.DateTime" />執行個體是早於<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或更晚<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，此方法會擲回<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2012">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="02553-2013">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="02553-2013">The following example provides an illustration.</span></span> <span data-ttu-id="02553-2014">它會嘗試將超出範圍的日期格式<see cref="T:System.Globalization.HebrewCalendar" />類別，在目前的文化特性是希伯來文 （以色列）。</span><span class="sxs-lookup"><span data-stu-id="02553-2014">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.HebrewCalendar" /> class when the current culture is Hebrew (Israel).</span></span>  
  
<span data-ttu-id="02553-2015">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="02553-2015">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception3.cs#3)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception3.vb#3)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="02553-2016">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="02553-2016">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-2017">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2017">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-2018">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2018">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="dateTime.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="02553-2019">標準或自訂的日期和時間格式字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2019">A standard or custom date and time format string.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-2020">物件，提供特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-2020">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="02553-2021">使用指定的格式和特定文化特性的格式資訊，將目前 <see cref="T:System.DateTime" /> 物件的值，轉換為其相等的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-2021">Converts the value of the current <see cref="T:System.DateTime" /> object to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="02553-2022">目前 <see cref="T:System.DateTime" /> 物件值的字串表示，如 <paramref name="format" /> 及 <paramref name="provider" />所指定。</span><span class="sxs-lookup"><span data-stu-id="02553-2022">A string representation of value of the current <see cref="T:System.DateTime" /> object as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2023">`format`參數可以包含單一格式規範字元 (請參閱 <<c2> [ 標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) 或自訂格式模式 (請參閱[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md))。</span><span class="sxs-lookup"><span data-stu-id="02553-2023">The `format` parameter can contain either a single format specifier character (see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)) or a custom format pattern (see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)).</span></span> <span data-ttu-id="02553-2024">如果`format`是`null`或空字串 ("")，會使用的標準格式規範，"G"、。</span><span class="sxs-lookup"><span data-stu-id="02553-2024">If `format` is `null` or an empty string (""), the standard format specifier, "G", is used.</span></span>  
  
 <span data-ttu-id="02553-2025">`provider`參數定義的模式，對應至標準格式規範，以及符號和日期和時間元件的名稱。</span><span class="sxs-lookup"><span data-stu-id="02553-2025">The `provider` parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.</span></span> <span data-ttu-id="02553-2026">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-2026">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-2027">A<xref:System.Globalization.CultureInfo>物件，表示要在傳回的字串會反映其格式設定慣例的文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-2027">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting conventions are to be reflected in the returned string.</span></span> <span data-ttu-id="02553-2028"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>屬性會定義傳回之字串的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2028">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting of the returned string.</span></span>  
  
-   <span data-ttu-id="02553-2029">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2029">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-2030">自訂物件實作<xref:System.IFormatProvider>介面。</span><span class="sxs-lookup"><span data-stu-id="02553-2030">A custom object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="02553-2031">其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2031">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-2032">如果`provider`已`null`，則<xref:System.Globalization.DateTimeFormatInfo>聯目前會使用文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-2032">If `provider` is `null`, the <xref:System.Globalization.DateTimeFormatInfo> associated with the current culture is used.</span></span> <span data-ttu-id="02553-2033">如需詳細資訊，請參閱<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2033">For more information, see <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-2034">下列範例會使用每個標準日期時間格式字串來顯示日期和時間的四個不同的文化特性的字串表示。</span><span class="sxs-lookup"><span data-stu-id="02553-2034">The following example uses each of the standard date time format strings to display the string representation of a date and time for four different cultures.</span></span>  
  
 [!code-csharp[System.DateTime.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring3.cs#4)]
 [!code-vb[System.DateTime.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring3.vb#4)]  
  
 <span data-ttu-id="02553-2035">下列範例會示範不同方式來格式化<xref:System.DateTime>值使用恆定性<xref:System.Globalization.DateTimeFormatInfo>。</span><span class="sxs-lookup"><span data-stu-id="02553-2035">The following example demonstrates different ways of formatting a <xref:System.DateTime> value using the invariant <xref:System.Globalization.DateTimeFormatInfo>.</span></span>  
  
 [!code-cpp[Classic DateTime.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DateTime.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic DateTime.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DateTime.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="02553-2036"><paramref name="format" /> 長度為 1，而且不屬於針對 <see cref="T:System.Globalization.DateTimeFormatInfo" /> 定義的格式規範字元。</span><span class="sxs-lookup"><span data-stu-id="02553-2036">The length of <paramref name="format" /> is 1, and it is not one of the format specifier characters defined for <see cref="T:System.Globalization.DateTimeFormatInfo" />.</span></span>  
  
<span data-ttu-id="02553-2037">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-2037">-or-</span></span> 
 <span data-ttu-id="02553-2038"><paramref name="format" /> 不包含有效的自訂格式模式。</span><span class="sxs-lookup"><span data-stu-id="02553-2038"><paramref name="format" /> does not contain a valid custom format pattern.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="02553-2039">日期和時間超出 <paramref name="provider" /> 使用之曆法所支援的日期範圍。</span><span class="sxs-lookup"><span data-stu-id="02553-2039">The date and time is outside the range of dates supported by the calendar used by <paramref name="provider" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2040"><see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" />方法會傳回日期和時間的字串表示中所使用的行事曆<paramref name="provider" />參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2040">The <see cref="M:System.DateTime.ToString(System.String,System.IFormatProvider)" /> method returns the string representation of the date and time in the calendar used by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="02553-2041">其行事曆由定義<see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" />屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-2041">Its calendar is defined by the <see cref="P:System.Globalization.DateTimeFormatInfo.Calendar" /> property.</span></span> <span data-ttu-id="02553-2042">如果目前的值<see cref="T:System.DateTime" />執行個體是早於<see cref="P:System.Globalization.Calendar.MinSupportedDateTime" />或更晚<see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />，此方法會擲回<see cref="T:System.ArgumentOutOfRangeException" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2042">If the value of the current <see cref="T:System.DateTime" /> instance is earlier than <see cref="P:System.Globalization.Calendar.MinSupportedDateTime" /> or later than <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime" />, the method throws an <see cref="T:System.ArgumentOutOfRangeException" />.</span></span> <span data-ttu-id="02553-2043">下列範例提供一個實例。</span><span class="sxs-lookup"><span data-stu-id="02553-2043">The following example provides an illustration.</span></span> <span data-ttu-id="02553-2044">它會嘗試將超出範圍的日期格式<see cref="T:System.Globalization.UmAlQuraCalendar" />類別。</span><span class="sxs-lookup"><span data-stu-id="02553-2044">It attempts to format a date that is outside the range of the <see cref="T:System.Globalization.UmAlQuraCalendar" /> class.</span></span>  
  
<span data-ttu-id="02553-2045">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span><span class="sxs-lookup"><span data-stu-id="02553-2045">[!code-csharp[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/cs/datetime.tostring.argumentoutofrangeexception4.cs#4)] [!code-vb[System.DateTime.ToString.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.tostring.argumentoutofrangeexception/vb/datetime.tostring.argumentoutofrangeexception4.vb#4)]</span></span></para></block>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="02553-2046">在 .NET 中將類型格式化</span><span class="sxs-lookup"><span data-stu-id="02553-2046">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-2047">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2047">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-2048">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2048">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="02553-2049">範例：.NET Framework 4 格式化公用程式</span><span class="sxs-lookup"><span data-stu-id="02553-2049">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToUniversalTime">
      <MemberSignature Language="C#" Value="public DateTime ToUniversalTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime ToUniversalTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.ToUniversalTime" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUniversalTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime ToUniversalTime();" />
      <MemberSignature Language="F#" Value="member this.ToUniversalTime : unit -&gt; DateTime" Usage="dateTime.ToUniversalTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02553-2050">將目前 <see cref="T:System.DateTime" /> 物件的值轉換成國際標準時間 (UTC)。</span><span class="sxs-lookup"><span data-stu-id="02553-2050">Converts the value of the current <see cref="T:System.DateTime" /> object to Coordinated Universal Time (UTC).</span></span></summary>
        <returns><span data-ttu-id="02553-2051">物件，其 <see cref="P:System.DateTime.Kind" /> 屬性為 <see cref="F:System.DateTimeKind.Utc" />，而其值為與目前 <see cref="T:System.DateTime" /> 物件的值相等的 UTC 時間；如果轉換過的值太大，而無法由 <see cref="F:System.DateTime.MaxValue" /> 物件表示，則為 <see cref="T:System.DateTime" />；如果轉換過的值太小，而無法表示為 <see cref="F:System.DateTime.MinValue" /> 物件，則為 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2051">An object whose <see cref="P:System.DateTime.Kind" /> property is <see cref="F:System.DateTimeKind.Utc" />, and whose value is the UTC equivalent to the value of the current <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MaxValue" /> if the converted value is too large to be represented by a <see cref="T:System.DateTime" /> object, or <see cref="F:System.DateTime.MinValue" /> if the converted value is too small to be represented by a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2052">Coordinated Universal Time (UTC) 是相等的當地時間減去 UTC 時差。</span><span class="sxs-lookup"><span data-stu-id="02553-2052">The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.</span></span> <span data-ttu-id="02553-2053">如需 UTC 時差的詳細資訊，請參閱<xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2053">For more information about the UTC offset, see <xref:System.TimeZone.GetUtcOffset%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2054">轉換也會納入考慮日光節約時間規則套用至目前所表示之時間<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2054">The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <xref:System.DateTime> object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="02553-2055">在 [!INCLUDE[winxp](~/includes/winxp-md.md)]系統<xref:System.DateTime.ToUniversalTime%2A>方法會從當地時間轉換為 UTC 時，會辨識只在目前的調整規則。</span><span class="sxs-lookup"><span data-stu-id="02553-2055">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <xref:System.DateTime.ToUniversalTime%2A> method recognizes only the current adjustment rule when converting from local time to UTC.</span></span> <span data-ttu-id="02553-2056">如此一來，轉換為目前的調整規則生效之前的期間，可能不會正確反映當地時間與 UTC 之間的差異。</span><span class="sxs-lookup"><span data-stu-id="02553-2056">As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.</span></span>  
  
 <span data-ttu-id="02553-2057">從.NET Framework 2.0 版中，所傳回的值開始<xref:System.DateTime.ToUniversalTime%2A>取決於方法<xref:System.DateTime.Kind%2A>屬性與目前<xref:System.DateTime>物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2057">Starting with the .NET Framework version 2.0, the value returned by the <xref:System.DateTime.ToUniversalTime%2A> method is determined by the <xref:System.DateTime.Kind%2A> property of the current <xref:System.DateTime> object.</span></span> <span data-ttu-id="02553-2058">下表說明可能的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-2058">The following table describes the possible results.</span></span>  
  
|<span data-ttu-id="02553-2059">類型</span><span class="sxs-lookup"><span data-stu-id="02553-2059">Kind</span></span>|<span data-ttu-id="02553-2060">結果</span><span class="sxs-lookup"><span data-stu-id="02553-2060">Results</span></span>|  
|----------|-------------|  
|<xref:System.DateTimeKind.Utc>|<span data-ttu-id="02553-2061">不會執行轉換。</span><span class="sxs-lookup"><span data-stu-id="02553-2061">No conversion is performed.</span></span>|  
|<xref:System.DateTimeKind.Local>|<span data-ttu-id="02553-2062">目前<xref:System.DateTime>物件轉換為 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2062">The current <xref:System.DateTime> object is converted to UTC.</span></span>|  
|<xref:System.DateTimeKind.Unspecified>|<span data-ttu-id="02553-2063">目前<xref:System.DateTime>物件會被假設為本地時間，並執行轉換作業一樣<xref:System.DateTime.Kind%2A>已<xref:System.DateTimeKind.Local>。</span><span class="sxs-lookup"><span data-stu-id="02553-2063">The current <xref:System.DateTime> object is assumed to be a local time, and the conversion is performed as if <xref:System.DateTime.Kind%2A> were <xref:System.DateTimeKind.Local>.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="02553-2064"><xref:System.DateTime.ToUniversalTime%2A>方法將<xref:System.DateTime>UTC 到本地時間的值。</span><span class="sxs-lookup"><span data-stu-id="02553-2064">The <xref:System.DateTime.ToUniversalTime%2A> method converts a <xref:System.DateTime> value from local time to UTC.</span></span> <span data-ttu-id="02553-2065">若要在非當地時區與 UTC 轉換時，使用<xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2065">To convert the time in a non-local time zone to UTC, use the <xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-2066">若要轉換其與 UTC 的位移已知的時間，使用<xref:System.DateTimeOffset.ToUniversalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2066">To convert a time whose offset from UTC is known, use the <xref:System.DateTimeOffset.ToUniversalTime%2A> method.</span></span>  
  
 <span data-ttu-id="02553-2067">如果日期和時間的執行個體值是模稜兩可的時間，此方法會假設它是標準時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2067">If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.</span></span> <span data-ttu-id="02553-2068">（模稜兩可的時間會是一個可對應至標準時間或以當地時區的日光節約時間）如果日期和時間的執行個體值是無效的時間，這個方法只會減去當地時間，以傳回 UTC 位移的當地時區的 utc。</span><span class="sxs-lookup"><span data-stu-id="02553-2068">(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.</span></span> <span data-ttu-id="02553-2069">（無效的時間是其中一個因日光節約時間調整規則的應用程式而不存在）。</span><span class="sxs-lookup"><span data-stu-id="02553-2069">(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-2070">下列範例示範<xref:System.DateTime.ToUniversalTime%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2070">The following example demonstrates the <xref:System.DateTime.ToUniversalTime%2A> method.</span></span>  
  
 [!code-cpp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/cpp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CPP/class1.cpp#1)]
 [!code-csharp[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/CS/class1.cs#1)]
 [!code-vb[DateTime.ToLocalTime ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.ToLocalTime ToUniversalTime/VB/class1.vb#1)]  
  
 <span data-ttu-id="02553-2071">下列範例會使用<xref:System.DateTime.SpecifyKind%2A>方法，示範如何<xref:System.DateTime.Kind%2A>屬性會影響<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>轉換方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2071">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2072"><see cref="M:System.DateTime.ToUniversalTime" />方法有時候用來將當地時間轉換成 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2072">The <see cref="M:System.DateTime.ToUniversalTime" /> method is sometimes used to convert a local time to UTC.</span></span> <span data-ttu-id="02553-2073"><see cref="M:System.DateTime.ToLocalTime" />還原原始的本機時間，然後呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2073">The <see cref="M:System.DateTime.ToLocalTime" /> method is then called to restore the original local time.</span></span> <span data-ttu-id="02553-2074">不過，如果原始時間代表不正確的時間以當地時區，兩個的當地時間值不會相等。</span><span class="sxs-lookup"><span data-stu-id="02553-2074">However, if the original time represents an invalid time in the local time zone, the two local time values will not be equal.</span></span> <span data-ttu-id="02553-2075">如需詳細資訊和範例，請參閱<see cref="M:System.DateTime.ToLocalTime" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2075">For additional information and an example, see the <see cref="M:System.DateTime.ToLocalTime" /> method.</span></span>  
  
<span data-ttu-id="02553-2076">在 [!INCLUDE[winxp](~/includes/winxp-md.md)]系統<see cref="M:System.DateTime.ToUniversalTime" />方法能夠辨識只有目前的調整規則當地時區，它只適用於所有的日期，包括舊版日期 （也就是日期早於目前的調整的開始日期規則）。</span><span class="sxs-lookup"><span data-stu-id="02553-2076">On [!INCLUDE[winxp](~/includes/winxp-md.md)] systems, the <see cref="M:System.DateTime.ToUniversalTime" /> method recognizes only the current adjustment rule for the local time zone, which it applies to all dates, including down-level dates (that is, dates that are earlier than the starting date of the current adjustment rule).</span></span> <span data-ttu-id="02553-2077">在上執行的應用程式[!INCLUDE[winxp](~/includes/winxp-md.md)]，您需要在過去精確的本地日期和時間計算時，必須暫時解決此問題上，使用<see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" />方法來擷取<see cref="T:System.TimeZoneInfo" />物件，其對應於當地時區，並呼叫其<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2077">Applications running on [!INCLUDE[winxp](~/includes/winxp-md.md)] that require historically accurate local date and time calculations must work around this behavior by using the <see cref="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)" /> method to retrieve a <see cref="T:System.TimeZoneInfo" /> object that corresponds to the local time zone and calling its <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> method.</span></span>  
  
<span data-ttu-id="02553-2078">下列範例說明之間的差異<see cref="M:System.DateTime.ToUniversalTime" />並<see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" />上的方法[!INCLUDE[winxp](~/includes/winxp-md.md)]美國太平洋時間</span><span class="sxs-lookup"><span data-stu-id="02553-2078">The following example illustrates the difference between the <see cref="M:System.DateTime.ToUniversalTime" /> and <see cref="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)" /> methods on a [!INCLUDE[winxp](~/includes/winxp-md.md)] system in the U.S. Pacific Time zone.</span></span> <span data-ttu-id="02553-2079">第一次的兩個方法呼叫為 2006 年的日期套用目前的時區調整規則 （這已生效，2007）。</span><span class="sxs-lookup"><span data-stu-id="02553-2079">The first two method calls apply the current time zone adjustment rule (which went into effect in 2007) to a date in 2006.</span></span> <span data-ttu-id="02553-2080">目前的調整規則提供轉換到日光節約時間的年 3 月; 第二個星期日上一個規則，已在作用中，在 2006 中，供轉換到日光節約時間於 4 月的第一個星期日發生。</span><span class="sxs-lookup"><span data-stu-id="02553-2080">The current adjustment rule provides for the transition to daylight saving time on the second Sunday of March; the previous rule, which was in effect in 2006, provided for the transition to daylight saving time to occur on the first Sunday of April.</span></span> <span data-ttu-id="02553-2081">此歷程記錄的日期和時間轉換，準確地會執行第三個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="02553-2081">Only the third method call accurately performs this historical date and time conversion.</span></span>  
  
<span data-ttu-id="02553-2082">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="02553-2082">[!code-csharp[System.DateTime.ToUniversalTime#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.touniversaltime/cs/touniversaltime.cs#1)] [!code-vb[System.DateTime.ToUniversalTime#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.touniversaltime/vb/touniversaltime.vb#1)]</span></span></para></block>
        <altmember cref="M:System.DateTime.ToLocalTime" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="dateTime.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-2083">將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />，並傳回一個值表示轉換是否成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2083">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="Overload:System.DateTime.Parse" />
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.DateTime.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-2084">字串，含有要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2084">A string containing a date and time to convert.</span></span></param>
        <param name="result"><span data-ttu-id="02553-2085">如果轉換成功，這個方法會傳回包含與 <see cref="T:System.DateTime" /> 中內含之日期與時間相等的 <paramref name="s" /> 值；如果轉換失敗，則為 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2085">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="02553-2086">如果 <paramref name="s" /> 參數為 <see langword="null" />、為空字串 ("") 或者不包含日期和時間的有效字串表示，則轉換會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2086">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="02553-2087">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="02553-2087">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="02553-2088">將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />，並傳回一個值表示轉換是否成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2088">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="02553-2089">如果 <see langword="true" /> 參數轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2089"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2090"><xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法是類似<xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType>方法，不同之處在於<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29>方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2090">The <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method is similar to the <xref:System.DateTime.Parse%28System.String%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="02553-2091">字串`s`剖析目前使用之格式資訊<xref:System.Globalization.DateTimeFormatInfo>由目前執行緒文化特性隱含提供的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2091">The string `s` is parsed using formatting information in the current <xref:System.Globalization.DateTimeFormatInfo> object, which is supplied implicitly by the current thread culture.</span></span>  
  
 <span data-ttu-id="02553-2092">可能的話，這個方法會嘗試將忽略無法辨識的資料，並填入遺漏的月、 日和年資訊使用目前的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-2092">This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.</span></span> <span data-ttu-id="02553-2093">如果`s`包含只有日期而沒有時間中，此方法會假設時間為午夜 12:00。</span><span class="sxs-lookup"><span data-stu-id="02553-2093">If `s` contains only a date and no time, this method assumes the time is 12:00 midnight.</span></span> <span data-ttu-id="02553-2094">如果`s`包含的日期元件含有兩位數年份，則會轉換成目前的文化特性的現行曆法的值中之年<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-2094">If `s` includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-2095">前置、 內部或結尾中的空白字元`s`會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-2095">Any leading, inner, or trailing white space character in `s` is ignored.</span></span> <span data-ttu-id="02553-2096">日期和時間可以是一組的開頭和尾端數字符號字元 （' #'，U + 0023），而且必須尾隨一或多個 NULL 字元 (U + 0000)。</span><span class="sxs-lookup"><span data-stu-id="02553-2096">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="02553-2097">因為<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法會嘗試剖析日期字串表示，而且使用目前的文化特性，並嘗試將特定的字串剖析跨不同的文化特性的格式化規則的時間可能會失敗或傳回不同的結果。</span><span class="sxs-lookup"><span data-stu-id="02553-2097">Because the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.</span></span> <span data-ttu-id="02553-2098">如果會剖析特定日期和時間格式，在不同的地區設定，使用<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法或其中一個多載<xref:System.DateTime.TryParseExact%2A>方法，並提供格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-2098">If a specific date and time format will be parsed across different locales, use the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method or one of the overloads of the <xref:System.DateTime.TryParseExact%2A> method and provide a format specifier.</span></span>  
  
 <span data-ttu-id="02553-2099">如果`s`閏年中為閏日，在現行曆法，也就是方法剖析的字串表示法`s`成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2099">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="02553-2100">如果`s`在目前文化特性的現行曆法為閏日在非-閏年的字串表示法，剖析作業失敗，而且此方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="02553-2100">If `s` is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="02553-2101">如果`s`不包含時區資訊，`result`包含<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>方法傳回時。</span><span class="sxs-lookup"><span data-stu-id="02553-2101">If `s` contains no time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> when the method returns.</span></span> <span data-ttu-id="02553-2102">如果要剖析的字串包含時區資訊，請`result`包含<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>方法傳回時。</span><span class="sxs-lookup"><span data-stu-id="02553-2102">If the string to be parsed contains time zone information, `result` contains a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType> when the method returns.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-2103">下列範例會將傳遞的日期和時間字串數目<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2103">The following example passes a number of date and time strings to the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-cpp[System.DateTime.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.TryParse/cpp/datetime.tryparse1.cpp#1)]
 [!code-csharp[System.DateTime.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.DateTime.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/TryParse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2104">格式會受到目前的屬性<see cref="T:System.Globalization.DateTimeFormatInfo" />物件，其預設值衍生自**地區及語言選項**控制台 中的項目。</span><span class="sxs-lookup"><span data-stu-id="02553-2104">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which by default are derived from the **Regional and Language Options** item in Control Panel.</span></span> <span data-ttu-id="02553-2105"><see cref="Overload:System.DateTime.TryParse" />方法可以意外失敗，並傳回<see langword="False" />如果目前<see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />和<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />屬性會設為相同的值。</span><span class="sxs-lookup"><span data-stu-id="02553-2105">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-2106">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-2106">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-2107">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2107">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-2108">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2108">Custom Date and Time Format Strings</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="02553-2109">範例：.NET Framework 4 格式化公用程式</span><span class="sxs-lookup"><span data-stu-id="02553-2109">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="styles">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles styles, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, provider As IFormatProvider, styles As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, IFormatProvider ^ provider, System::Globalization::DateTimeStyles styles, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParse (s, provider, styles, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="styles" Type="System.Globalization.DateTimeStyles" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-2110">字串，含有要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2110">A string containing a date and time to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-2111">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-2111">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="styles"><span data-ttu-id="02553-2112">列舉值的位元組合，這個組合會定義如何根據目前時區或目前日期解譯已剖析的日期。</span><span class="sxs-lookup"><span data-stu-id="02553-2112">A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</span></span> <span data-ttu-id="02553-2113">一般會指定的值是 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2113">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="02553-2114">如果轉換成功，這個方法會傳回包含與 <see cref="T:System.DateTime" /> 中內含之日期與時間相等的 <paramref name="s" /> 值；如果轉換失敗，則為 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2114">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="02553-2115">如果 <paramref name="s" /> 參數為 <see langword="null" />、為空字串 ("") 或者不包含日期和時間的有效字串表示，則轉換會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2115">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" />, is an empty string (""), or does not contain a valid string representation of a date and time.</span></span> <span data-ttu-id="02553-2116">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="02553-2116">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="02553-2117">使用指定的特定文化特性格式資訊和格式樣式，將日期和時間的指定字串表示轉換為其相等的 <see cref="T:System.DateTime" />，並傳回值，這個值表示轉換是否成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2117">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="02553-2118">如果 <see langword="true" /> 參數轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2118"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2119"><xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法剖析字串可包含日期、 時間和時區資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-2119">The <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses a string that can contain date, time, and time zone information.</span></span> <span data-ttu-id="02553-2120">類似於<xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法，不同之處在於<xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2120">It is similar to the <xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=nameWithType> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="02553-2121">這個方法會嘗試將忽略無法辨識的資料，以及剖析`s`完全。</span><span class="sxs-lookup"><span data-stu-id="02553-2121">This method attempts to ignore unrecognized data and parse `s` completely.</span></span> <span data-ttu-id="02553-2122">如果`s`包含一次，但不含日期，則該方法的預設值取代目前的日期或，如果`styles`包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>旗標，它會替代`DateTime.Date.MinValue`。</span><span class="sxs-lookup"><span data-stu-id="02553-2122">If `s` contains a time but no date, the method by default substitutes the current date or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault> flag, it substitutes `DateTime.Date.MinValue`.</span></span> <span data-ttu-id="02553-2123">如果`s`包含日期，但沒有時間，12:00 午夜做為預設的時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2123">If `s` contains a date but no time, 12:00 midnight is used as the default time.</span></span> <span data-ttu-id="02553-2124">如果日期存在，但是它的年份元件只有兩位數所組成，它會轉換成中之年`provider`參數的現行曆法為基礎的值<xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-2124">If a date is present but its year component consists of only two digits, it is converted to a year in the `provider` parameter's current calendar based on the value of the <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="02553-2125">前置、 內部或結尾中的空白字元`s`都會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-2125">Any leading, inner, or trailing white space characters in `s` are ignored.</span></span> <span data-ttu-id="02553-2126">日期和時間可以是一組的開頭和尾端數字符號字元 （' #'，U + 0023），而且必須尾隨一或多個 NULL 字元 (U + 0000)。</span><span class="sxs-lookup"><span data-stu-id="02553-2126">The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</span></span>  
  
 <span data-ttu-id="02553-2127">藉由定義特定的有效格式的日期和時間項目，以及名稱以及在日期和時間、 使用符號`provider`參數，它可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-2127">Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the `provider` parameter, which can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-2128">A<xref:System.Globalization.CultureInfo>物件，表示其格式設定中使用的文化特性`s`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2128">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting is used in the `s` parameter.</span></span> <span data-ttu-id="02553-2129"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType>屬性會定義所使用的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2129">The <xref:System.Globalization.DateTimeFormatInfo> object returned by the <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=nameWithType> property defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="02553-2130">A<xref:System.Globalization.DateTimeFormatInfo>物件，定義所使用的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2130">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
-   <span data-ttu-id="02553-2131">自訂 <xref:System.IFormatProvider> 實作。</span><span class="sxs-lookup"><span data-stu-id="02553-2131">A custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="02553-2132">其<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>方法會傳回<xref:System.Globalization.DateTimeFormatInfo>物件，定義所使用的格式`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2132">Its <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method returns a <xref:System.Globalization.DateTimeFormatInfo> object that defines the formatting used in `s`.</span></span>  
  
 <span data-ttu-id="02553-2133">如果 `provider` 是 `null`，則會使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="02553-2133">If `provider` is `null`, the current culture is used.</span></span>  
  
 <span data-ttu-id="02553-2134">如果`s`閏年中為閏日，在現行曆法，也就是方法剖析的字串表示法`s`成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2134">If `s` is the string representation of a leap day in a leap year in the current calendar, the method parses `s` successfully.</span></span> <span data-ttu-id="02553-2135">如果`s`中的現行曆法為閏日在非-閏年的字串表示法`provider`剖析作業失敗，則方法會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="02553-2135">If `s` is the string representation of a leap day in a non-leap year in the current calendar of `provider`, the parse operation fails and the method returns `false`.</span></span>  
  
 <span data-ttu-id="02553-2136">`styles`參數會定義精確的解譯剖析的字串和剖析作業應該如何處理它。</span><span class="sxs-lookup"><span data-stu-id="02553-2136">The `styles` parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.</span></span> <span data-ttu-id="02553-2137">它可以是一個或多個成員<xref:System.Globalization.DateTimeStyles>列舉型別下, 表中所述。</span><span class="sxs-lookup"><span data-stu-id="02553-2137">It can be one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration, as described in the following table.</span></span>  
  
|<span data-ttu-id="02553-2138">DateTimeStyles 成員</span><span class="sxs-lookup"><span data-stu-id="02553-2138">DateTimeStyles member</span></span>|<span data-ttu-id="02553-2139">描述</span><span class="sxs-lookup"><span data-stu-id="02553-2139">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="02553-2140">剖析`s`而且，如果有需要，將它轉換成 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2140">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="02553-2141">如果`s`包含時區時差，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，這個方法會剖析字串，呼叫<xref:System.DateTime.ToUniversalTime%2A>轉換傳回<xref:System.DateTime>值為 UTC並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2141">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2142">如果`s`表示它代表 UTC，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>旗標，方法剖析字串，會執行任何時區轉換對傳回<xref:System.DateTime>值，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2142">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2143">在其他情況下，此旗標會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="02553-2143">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="02553-2144">雖然有效，但會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="02553-2144">Although valid, this value is ignored.</span></span> <span data-ttu-id="02553-2145">中的日期和時間項目可以使用內部空白字元`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2145">Inner white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="02553-2146">雖然有效，但會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="02553-2146">Although valid, this value is ignored.</span></span> <span data-ttu-id="02553-2147">中的日期和時間項目可以使用前置空白字元`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2147">Leading white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="02553-2148">雖然有效，但會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="02553-2148">Although valid, this value is ignored.</span></span> <span data-ttu-id="02553-2149">尾端空白字元的日期和時間項目中允許`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2149">Trailing white space is permitted in the date and time elements of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="02553-2150">指定`s`可能包含前置、 內部和尾端空白字元。</span><span class="sxs-lookup"><span data-stu-id="02553-2150">Specifies that `s` may contain leading, inner, and trailing white spaces.</span></span> <span data-ttu-id="02553-2151">這是預設行為。</span><span class="sxs-lookup"><span data-stu-id="02553-2151">This is the default behavior.</span></span> <span data-ttu-id="02553-2152">它不能覆寫透過提供更具限制性<xref:System.Globalization.DateTimeStyles>列舉值，例如<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2152">It cannot be overridden by supplying a more restrictive <xref:System.Globalization.DateTimeStyles> enumeration value such as <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="02553-2153">指定當`s`缺少任何時區的資訊，它會假設為代表當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2153">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="02553-2154">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標已存在，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>值設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2154">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="02553-2155">指定當`s`缺少任何時區的資訊，它會假設為代表 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2155">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="02553-2156">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標存在，則方法會將轉換傳回<xref:System.DateTime>值與 UTC 於當地時間和設定其<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2156">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="02553-2157">雖然有效，但會忽略此值。</span><span class="sxs-lookup"><span data-stu-id="02553-2157">Although valid, this value is ignored.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="02553-2158">針對包含時區資訊的字串，會嘗試防止日期和時間字串轉換成<xref:System.DateTime>具有值及其<xref:System.DateTime.Kind%2A>屬性設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2158">For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2159">一般而言，這類字串由呼叫<xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType>方法使用"o"、"r"或"u"標準格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-2159">Typically, such a string is created by calling the <xref:System.DateTime.ToString%28System.String%29?displayProperty=nameWithType> method using either the "o", "r", or "u" standard format specifiers.</span></span>|  
  
 <span data-ttu-id="02553-2160">如果`s`不包含時區資訊，<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>除非`styles`旗標表示其他。</span><span class="sxs-lookup"><span data-stu-id="02553-2160">If `s` contains no time zone information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType> unless a `styles` flag indicates otherwise.</span></span> <span data-ttu-id="02553-2161">如果`s`時區位移的資訊，包括<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法會執行任何所需的時間轉換，並傳回下列其中之一：</span><span class="sxs-lookup"><span data-stu-id="02553-2161">If `s` includes time zone or time zone offset information, the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method performs any necessary time conversion and returns one of the following:</span></span>  
  
-   <span data-ttu-id="02553-2162">A<xref:System.DateTime>值的日期和時間會反映當地時間，且其<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2162">A <xref:System.DateTime> value whose date and time reflect the local time and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="02553-2163">或者，如果`styles`包含<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>旗標<xref:System.DateTime>值的日期和時間會反映 UTC，且其<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2163">Or, if `styles` includes the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal> flag, a <xref:System.DateTime> value whose date and time reflect UTC and whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02553-2164">使用覆寫這個行為<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="02553-2164">This behavior can be overridden by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag.</span></span>  
  
## <a name="parsing-custom-cultures"></a><span data-ttu-id="02553-2165">剖析的自訂文化特性</span><span class="sxs-lookup"><span data-stu-id="02553-2165">Parsing Custom Cultures</span></span>  
 <span data-ttu-id="02553-2166">如果您剖析產生自訂的文化特性的日期和時間字串，使用<xref:System.DateTime.TryParseExact%2A>方法，而非<xref:System.DateTime.TryParse%2A>方法，以改善剖析作業會成功的機率。</span><span class="sxs-lookup"><span data-stu-id="02553-2166">If you parse a date and time string generated for a custom culture, use the <xref:System.DateTime.TryParseExact%2A> method instead of the <xref:System.DateTime.TryParse%2A> method to improve the probability that the parse operation will succeed.</span></span> <span data-ttu-id="02553-2167">自訂文化特性的日期和時間字串可以是複雜且很難剖析。</span><span class="sxs-lookup"><span data-stu-id="02553-2167">A custom culture date and time string can be complicated and difficult to parse.</span></span> <span data-ttu-id="02553-2168"><xref:System.DateTime.TryParse%2A>方法會嘗試剖析的字串與數個隱含的剖析模式，其中都可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2168">The <xref:System.DateTime.TryParse%2A> method attempts to parse a string with several implicit parse patterns, all of which might fail.</span></span> <span data-ttu-id="02553-2169">相反地，<xref:System.DateTime.TryParseExact%2A>方法需要您明確地指定一或多個實際的剖析模式可能會成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2169">In contrast, the <xref:System.DateTime.TryParseExact%2A> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</span></span>  
  
 <span data-ttu-id="02553-2170">如需有關自訂文化特性的詳細資訊，請參閱<xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="02553-2170">For more information about custom cultures, see the <xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=nameWithType> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02553-2171">下列範例說明<xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2171">The following example illustrates the <xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span>  
  
 [!code-csharp[System.DateTime.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParse/cs/tryparse2.cs#2)]
 [!code-vb[System.DateTime.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-2172"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-2172"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="02553-2173">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-2173">-or-</span></span> 
 <span data-ttu-id="02553-2174"><paramref name="styles" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合 (例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-2174"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="02553-2175"><paramref name="provider" /> 是中性文化特性，不能用在剖析作業。</span><span class="sxs-lookup"><span data-stu-id="02553-2175"><paramref name="provider" /> is a neutral culture and cannot be used in a parsing operation.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2176">格式會受到目前的屬性<see cref="T:System.Globalization.DateTimeFormatInfo" />物件，它由提供<paramref name="provider" />參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2176">Formatting is influenced by properties of the current <see cref="T:System.Globalization.DateTimeFormatInfo" /> object, which is supplied by the <paramref name="provider" /> parameter.</span></span> <span data-ttu-id="02553-2177"><see cref="Overload:System.DateTime.TryParse" />方法可以意外失敗，並傳回<see langword="False" />如果目前<see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" />和<see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" />屬性會設為相同的值。</span><span class="sxs-lookup"><span data-stu-id="02553-2177">The <see cref="Overload:System.DateTime.TryParse" /> method can unexpectedly fail and return <see langword="False" /> if the current <see cref="P:System.Globalization.DateTimeFormatInfo.DateSeparator" /> and <see cref="P:System.Globalization.DateTimeFormatInfo.TimeSeparator" /> properties are set to the same value.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.Parse" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-2178">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-2178">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-2179">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2179">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-2180">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2180">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParseExact">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02553-2181">將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2181">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent.</span></span> <span data-ttu-id="02553-2182">字串表示的格式必須完全符合指定的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2182">The format of the string representation must match a specified format exactly.</span></span> <span data-ttu-id="02553-2183">此方法會傳回值，這個值表示轉換是否成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2183">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

[!INCLUDE[japanese-era-note](~/includes/calendar-era.md)]

         ]]></format>
        </remarks>
        <altmember cref="Overload:System.DateTime.ParseExact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.ReadOnlySpan{System.Char},System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), format As ReadOnlySpan(Of Char), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, ReadOnlySpan&lt;char&gt; format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * ReadOnlySpan&lt;char&gt; * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (ReadOnlySpan&lt;char&gt; s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(valuetype System.ReadOnlySpan`1&lt;char&gt; s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.ReadOnlySpan{System.Char},System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As ReadOnlySpan(Of Char), formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(ReadOnlySpan&lt;char&gt; s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : ReadOnlySpan&lt;char&gt; * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="formats">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="style">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string format, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, format As String, provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, System::String ^ format, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, format, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-2184">字串，含有要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2184">A string containing a date and time to convert.</span></span></param>
        <param name="format"><span data-ttu-id="02553-2185"><paramref name="s" /> 的必要格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2185">The required format of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-2186">物件，提供關於 <paramref name="s" /> 的特定文化特性格式資訊。</span><span class="sxs-lookup"><span data-stu-id="02553-2186">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="02553-2187">一個或多個列舉值的位元組合，表示 <paramref name="s" /> 的允許格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2187">A bitwise combination of one or more enumeration values that indicate the permitted format of <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="02553-2188">如果轉換成功，這個方法會傳回包含與 <see cref="T:System.DateTime" /> 中內含之日期與時間相等的 <paramref name="s" /> 值；如果轉換失敗，則為 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2188">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="02553-2189">如果 <paramref name="s" /> 或 <paramref name="format" /> 參數為 <see langword="null" />、空字串，或不包含與 <paramref name="format" /> 中指定之模式相對應的日期和時間，則此轉換作業會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2189">The conversion fails if either the <paramref name="s" /> or <paramref name="format" /> parameter is <see langword="null" />, is an empty string, or does not contain a date and time that correspond to the pattern specified in <paramref name="format" />.</span></span> <span data-ttu-id="02553-2190">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="02553-2190">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="02553-2191">使用指定的格式、特定文化特性格式資訊以及樣式，將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2191">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified format, culture-specific format information, and style.</span></span> <span data-ttu-id="02553-2192">字串表示的格式必須完全符合指定的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2192">The format of the string representation must match the specified format exactly.</span></span> <span data-ttu-id="02553-2193">此方法會傳回值，這個值表示轉換是否成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2193">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="02553-2194">如果 <see langword="true" /> 轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2194"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2195"><xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法會剖析所定義的格式必須是日期的字串表示`format`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2195">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date, which must be in the format defined by the `format` parameter.</span></span> <span data-ttu-id="02553-2196">類似於<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法，不同之處在於<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2196">It is similar to the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except that the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="02553-2197">`s`參數包含要剖析的日期和時間，而且所定義的格式必須是`format`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2197">The `s` parameter contains the date and time to parse and must be in a format defined by the `format` parameter.</span></span> <span data-ttu-id="02553-2198">如果日期、 時間和時區元素存在於`s`，也必須在所指定的順序出現`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-2198">If date, time, and time zone elements are present in `s`, they must also appear in the order specified by `format`.</span></span> <span data-ttu-id="02553-2199">如果`format`定義日期使用任何時間元素，而剖析作業成功時，所產生的<xref:System.DateTime>值具有午夜的時間 (00: 00:00)。</span><span class="sxs-lookup"><span data-stu-id="02553-2199">If `format` defines a date with no time element and the parse operation succeeds, the resulting <xref:System.DateTime> value has a time of midnight (00:00:00).</span></span> <span data-ttu-id="02553-2200">如果`format`所定義的時間與沒有任何日期項目，而剖析作業成功時，所產生的<xref:System.DateTime>預設值具有的日期`DateTime.Now.Date`，或它有日期`DateTime.MinValue.Date`如果`styles`包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>旗標。</span><span class="sxs-lookup"><span data-stu-id="02553-2200">If `format` defines a time with no date element and the parse operation succeeds, the resulting <xref:System.DateTime> value by default has a date of `DateTime.Now.Date`, or it has a date of `DateTime.MinValue.Date` if `styles` includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="02553-2201">`style`參數會決定是否`s`參數可以包含前置字元、 內部或結尾的空白字元。</span><span class="sxs-lookup"><span data-stu-id="02553-2201">The `style` parameter determines whether the `s` parameter can contain leading, inner, or trailing white space characters.</span></span>  
  
 <span data-ttu-id="02553-2202">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2202">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2203">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，就會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>並<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標，以傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2203">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2204">如有必要，如果 s 包含時區資訊，將時間會轉換為當地時間，而<xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2204">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2205">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>無法轉換為當地時間的 Coordinated Universal Time (UTC)，並設定的旗標<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2205">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02553-2206">`format`參數會包含對應至預期的格式模式`s`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2206">The `format` parameter contains a pattern that corresponds to the expected format of the `s` parameter.</span></span> <span data-ttu-id="02553-2207">中的模式`format`參數是由從一或多個自訂格式規範所組成[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)資料表或從識別為預先定義的模式，單一標準格式規範[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)資料表。</span><span class="sxs-lookup"><span data-stu-id="02553-2207">The pattern in the `format` parameter consists of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="02553-2208">如果您不使用日期或時間分隔符號的自訂格式模式中，使用的文化特性而異`provider`參數和廣泛形式的每個自訂格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-2208">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="02553-2209">例如，如果您想要在模式中指定的時數，指定更多表單中，"HH"，而非較窄的表單，"H"。</span><span class="sxs-lookup"><span data-stu-id="02553-2209">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02553-2210">不需要可`s`符合單一格式的剖析作業成功，您可以呼叫<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法並指定多個允許的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2210">Rather than requiring that `s` conform to a single format for the parse operation to succeed, you can call the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method and specify multiple permitted formats.</span></span> <span data-ttu-id="02553-2211">這可讓剖析作業更容易成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2211">This makes the parse operation more likely to succeed.</span></span>  
  
 <span data-ttu-id="02553-2212">特定日期和時間的符號和中使用的字串 （例如在特定的語言中一周天數名稱）`s`所定義`provider`參數，因為是精確的格式`s`如果`format`是標準格式指定名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2212">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="02553-2213">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-2213">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-2214">A<xref:System.Globalization.CultureInfo>物件，表示用來解譯的文化特性`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2214">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="02553-2215"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件及其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>屬性定義的符號和格式設定在`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2215">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="02553-2216">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2216">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-2217">自訂<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2217">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-2218">如果`provider`已`null`，則<xref:System.Globalization.CultureInfo>使用對應至目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2218">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="02553-2219">`styles`參數包含一個或多個成員<xref:System.Globalization.DateTimeStyles>列舉型別，判斷是否與其中所未定義泛空白字元`format`可以出現在`s`及控制的剖析作業精確的行為。</span><span class="sxs-lookup"><span data-stu-id="02553-2219">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="02553-2220">下表描述每個方式的成員<xref:System.Globalization.DateTimeStyles>列舉型別會影響營運<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2220">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="02553-2221">DateTimeStyles 成員</span><span class="sxs-lookup"><span data-stu-id="02553-2221">DateTimeStyles member</span></span>|<span data-ttu-id="02553-2222">描述</span><span class="sxs-lookup"><span data-stu-id="02553-2222">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="02553-2223">剖析`s`而且，如果有需要，將它轉換成 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2223">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="02553-2224">如果`s`包含時區時差，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，這個方法會剖析字串，呼叫<xref:System.DateTime.ToUniversalTime%2A>轉換傳回<xref:System.DateTime>值為 UTC並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2224">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2225">如果`s`表示它代表 UTC，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>旗標，方法剖析字串，會執行任何時區轉換對傳回<xref:System.DateTime>值，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2225">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2226">在其他情況下，此旗標會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="02553-2226">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="02553-2227">指定未定義的泛空白字元`format`任何個別的日期或時間項目之間可以出現。</span><span class="sxs-lookup"><span data-stu-id="02553-2227">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="02553-2228">指定未定義的泛空白字元`format`可以出現在開頭`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2228">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="02553-2229">指定未定義的泛空白字元`format`可以出現在結尾`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2229">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="02553-2230">指定`s`可能包含前置、 內部和尾端未定義的泛空白字元`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-2230">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="02553-2231">指定當`s`缺少任何時區的資訊，它會假設為代表當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2231">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="02553-2232">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標已存在，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>值設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2232">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="02553-2233">指定當`s`缺少任何時區的資訊，它會假設為代表 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2233">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="02553-2234">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標存在，則方法會將轉換傳回<xref:System.DateTime>值與 UTC 於當地時間和設定其<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2234">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="02553-2235">如果`s`包含時間的日期，傳回的值設定為不含日期資訊`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="02553-2235">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="02553-2236">`s`會剖析參數，使用預設值。</span><span class="sxs-lookup"><span data-stu-id="02553-2236">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="02553-2237">非出示中沒有空白字元`format`允許。</span><span class="sxs-lookup"><span data-stu-id="02553-2237">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="02553-2238">如果`s`缺少傳回之日期的日期元件，<xref:System.DateTime>值設為 1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="02553-2238">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="02553-2239">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2239">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2240">時區資訊是否存在於`s`，時間會轉換為當地時間與<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2240">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="02553-2241">針對包含時區資訊的字串，會嘗試防止轉換成<xref:System.DateTime>具有值及其<xref:System.DateTime.Kind%2A>屬性設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2241">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2242">主要，此旗標可避免 UTC 時間的轉換為本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2242">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="02553-2243">下列範例示範<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2243">The following example demonstrates the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="02553-2244">請注意，字串"2009 年 5 月 01 日上午 8:30"無法成功剖析時`styles`參數等於<xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType>因為所不允許有前置空格`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-2244">Note that the string " 5/01/2009 8:30 AM" cannot be parsed successfully when the `styles` parameter equals <xref:System.Globalization.DateTimeStyles.None?displayProperty=nameWithType> because leading spaces are not allowed by `format`.</span></span> <span data-ttu-id="02553-2245">此外，字串"2009 年 5 月 01 日 09:00"無法以成功地剖析`format`的"MM/dd/yyyyhh:mm"因為日期字串前面沒有前置的零，月份數字為`format`需要。</span><span class="sxs-lookup"><span data-stu-id="02553-2245">Additionally, the string "5/01/2009 09:00" cannot be parsed successfully with a `format` of "MM/dd/yyyyhh:mm" because the date string does not precede the month number with a leading zero, as `format` requires.</span></span>  
  
 [!code-csharp[System.DateTime.TryParseExact#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact1.cs#1)]
 [!code-vb[System.DateTime.TryParseExact#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-2246"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-2246"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="02553-2247">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-2247">-or-</span></span> 
 <span data-ttu-id="02553-2248"><paramref name="styles" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合 (例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-2248"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2249">在  [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，則<see cref="Overload:System.DateTime.TryParseExact" />方法會傳回<see langword="false" />小時元件和 AM/PM 指示項不在協議中，如果包含要剖析的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2249">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="02553-2250">在 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]和舊版本中，AM/PM 指示項會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-2250">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-2251">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-2251">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-2252">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2252">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-2253">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2253">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseExact">
      <MemberSignature Language="C#" Value="public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseExact(string s, string[] formats, class System.IFormatProvider provider, valuetype System.Globalization.DateTimeStyles style, [out] valuetype System.DateTime&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DateTime.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTime@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseExact (s As String, formats As String(), provider As IFormatProvider, style As DateTimeStyles, ByRef result As DateTime) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseExact(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats, IFormatProvider ^ provider, System::Globalization::DateTimeStyles style, [Runtime::InteropServices::Out] DateTime % result);" />
      <MemberSignature Language="F#" Value="static member TryParseExact : string * string[] * IFormatProvider * System.Globalization.DateTimeStyles *  -&gt; bool" Usage="System.DateTime.TryParseExact (s, formats, provider, style, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="formats" Type="System.String[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.DateTimeStyles" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.DateTime" RefType="out" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="02553-2254">字串，包含要轉換的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2254">A string that contains a date and time to convert.</span></span></param>
        <param name="formats"><span data-ttu-id="02553-2255"><paramref name="s" /> 允許的格式陣列。</span><span class="sxs-lookup"><span data-stu-id="02553-2255">An array of allowable formats of <paramref name="s" />.</span></span></param>
        <param name="provider"><span data-ttu-id="02553-2256">提供關於 <paramref name="s" /> 之特定文化特性格式資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2256">An object that supplies culture-specific format information about <paramref name="s" />.</span></span></param>
        <param name="style"><span data-ttu-id="02553-2257">列舉值的位元組合，表示 <paramref name="s" /> 所允許的格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2257">A bitwise combination of enumeration values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="02553-2258">一般會指定的值是 <see cref="F:System.Globalization.DateTimeStyles.None" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2258">A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None" />.</span></span></param>
        <param name="result"><span data-ttu-id="02553-2259">如果轉換成功，這個方法會傳回包含與 <see cref="T:System.DateTime" /> 中內含之日期與時間相等的 <paramref name="s" /> 值；如果轉換失敗，則為 <see cref="F:System.DateTime.MinValue" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2259">When this method returns, contains the <see cref="T:System.DateTime" /> value equivalent to the date and time contained in <paramref name="s" />, if the conversion succeeded, or <see cref="F:System.DateTime.MinValue" /> if the conversion failed.</span></span> <span data-ttu-id="02553-2260">如果 <paramref name="s" /> 或 <paramref name="formats" /> 為 <see langword="null" />、<paramref name="s" /> 或 <paramref name="formats" /> 的一個項目為空字串，或是 <paramref name="s" /> 的格式沒有與 <paramref name="formats" /> 中的至少一個格式模式所指定的內容完全相同，則此轉換作業會失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2260">The conversion fails if <paramref name="s" /> or <paramref name="formats" /> is <see langword="null" />, <paramref name="s" /> or an element of <paramref name="formats" /> is an empty string, or the format of <paramref name="s" /> is not exactly as specified by at least one of the format patterns in <paramref name="formats" />.</span></span> <span data-ttu-id="02553-2261">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="02553-2261">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="02553-2262">使用指定的格式陣列、特定文化特性格式資訊以及樣式，將日期和時間的指定字串表示，轉換為其相等的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2262">Converts the specified string representation of a date and time to its <see cref="T:System.DateTime" /> equivalent using the specified array of formats, culture-specific format information, and style.</span></span> <span data-ttu-id="02553-2263">字串表示的格式必須至少完全符合其中一個指定格式。</span><span class="sxs-lookup"><span data-stu-id="02553-2263">The format of the string representation must match at least one of the specified formats exactly.</span></span> <span data-ttu-id="02553-2264">此方法會傳回值，這個值表示轉換是否成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2264">The method returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="02553-2265">如果 <see langword="true" /> 參數轉換成功，則為 <paramref name="s" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="02553-2265"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2266"><xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法會剖析的日期字串表示符合任何一個模式指派給`formats`參數。</span><span class="sxs-lookup"><span data-stu-id="02553-2266">The <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method parses the string representation of a date that matches any one of the patterns assigned to the `formats` parameter.</span></span> <span data-ttu-id="02553-2267">就像<xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType>方法，除了<xref:System.DateTime.TryParseExact%2A>方法不會擲回例外狀況如果轉換失敗。</span><span class="sxs-lookup"><span data-stu-id="02553-2267">It is like the <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> method, except the <xref:System.DateTime.TryParseExact%2A> method does not throw an exception if the conversion fails.</span></span>  
  
 <span data-ttu-id="02553-2268">`s`參數包含要剖析的日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2268">The `s` parameter contains the date and time to parse.</span></span> <span data-ttu-id="02553-2269">如果`s`參數會包含只有一次，而且沒有日期，目前的日期是除非`style`參數包含<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType>旗標，在此情況下的預設日期 (`DateTime.Date.MinValue`) 使用。</span><span class="sxs-lookup"><span data-stu-id="02553-2269">If the `s` parameter contains only a time and no date, the current date is used unless the `style` parameter includes the <xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault?displayProperty=nameWithType> flag, in which case the default date (`DateTime.Date.MinValue`) is used.</span></span> <span data-ttu-id="02553-2270">如果`s`參數會包含只有日期任何時間、 午夜 (00: 00:00) 使用。</span><span class="sxs-lookup"><span data-stu-id="02553-2270">If the `s` parameter contains only a date and no time, midnight (00:00:00) is used.</span></span> <span data-ttu-id="02553-2271">`style`參數也會決定是否`s`參數可以包含前置字元、 內部或結尾的空白字元以外的其中一個格式字串中允許的字元`formats`。</span><span class="sxs-lookup"><span data-stu-id="02553-2271">The `style` parameter also determines whether the `s` parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in `formats`.</span></span>  
  
 <span data-ttu-id="02553-2272">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2272">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2273">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，就會傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Local?displayProperty=nameWithType>，或使用<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>並<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標，以傳回<xref:System.DateTime>值<xref:System.DateTime.Kind%2A>屬性是<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2273">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Local?displayProperty=nameWithType>, or by using the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> and <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flags, which returns a <xref:System.DateTime> value whose <xref:System.DateTime.Kind%2A> property is <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2274">如有必要，如果 s 包含時區資訊，將時間會轉換為當地時間，而<xref:System.DateTime.Kind%2A>屬性傳回之<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2274">If s contains time zone information, the time is converted to local time, if necessary, and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2275">使用也可以變更此行為<xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType>無法轉換為當地時間的 Coordinated Universal Time (UTC)，並設定的旗標<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2275">This behavior can be changed by using the <xref:System.Globalization.DateTimeStyles.RoundtripKind?displayProperty=nameWithType> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="02553-2276">`formats`參數包含陣列的模式，其中`s`必須完全符合剖析作業會成功。</span><span class="sxs-lookup"><span data-stu-id="02553-2276">The `formats` parameter contains an array of patterns, one of which `s` must match exactly if the parse operation is to succeed.</span></span> <span data-ttu-id="02553-2277">中的模式`formats`參數所組成的一或多個自訂格式規範[自訂日期和時間格式字串](~/docs/standard/base-types/custom-date-and-time-format-strings.md)資料表或從識別為預先定義的模式，單一標準格式規範[標準日期和時間格式字串](~/docs/standard/base-types/standard-date-and-time-format-strings.md)資料表。</span><span class="sxs-lookup"><span data-stu-id="02553-2277">The patterns in the `formats` parameter consist of one or more custom format specifiers from the [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md) table, or a single standard format specifier, which identifies a predefined pattern, from the [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) table.</span></span>  
  
 <span data-ttu-id="02553-2278">如果您不使用日期或時間分隔符號的自訂格式模式中，使用的文化特性而異`provider`參數和廣泛形式的每個自訂格式規範。</span><span class="sxs-lookup"><span data-stu-id="02553-2278">If you do not use date or time separators in a custom format pattern, use the invariant culture for the `provider` parameter and the widest form of each custom format specifier.</span></span> <span data-ttu-id="02553-2279">例如，如果您想要在模式中指定的時數，指定更多表單中，"HH"，而非較窄的表單，"H"。</span><span class="sxs-lookup"><span data-stu-id="02553-2279">For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</span></span>  
  
 <span data-ttu-id="02553-2280">特定日期和時間的符號和中使用的字串 （例如在特定的語言中一周天數名稱）`s`所定義`provider`參數，因為是精確的格式`s`如果`format`是標準格式指定名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2280">The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in `s` are defined by the `provider` parameter, as is the precise format of `s` if `format` is a standard format specifier string.</span></span> <span data-ttu-id="02553-2281">`provider`參數可以是下列任一項：</span><span class="sxs-lookup"><span data-stu-id="02553-2281">The `provider` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="02553-2282">A<xref:System.Globalization.CultureInfo>物件，表示用來解譯的文化特性`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2282">A <xref:System.Globalization.CultureInfo> object that represents the culture used to interpret `s`.</span></span> <span data-ttu-id="02553-2283"><xref:System.Globalization.DateTimeFormatInfo>所傳回的物件及其<xref:System.Globalization.CultureInfo.DateTimeFormat%2A>屬性定義的符號和格式設定在`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2283">The <xref:System.Globalization.DateTimeFormatInfo> object returned by its <xref:System.Globalization.CultureInfo.DateTimeFormat%2A> property defines the symbols and formatting in `s`.</span></span>  
  
-   <span data-ttu-id="02553-2284">A<xref:System.Globalization.DateTimeFormatInfo>定義格式的日期和時間資料的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2284">A <xref:System.Globalization.DateTimeFormatInfo> object that defines the format of date and time data.</span></span>  
  
-   <span data-ttu-id="02553-2285">自訂<xref:System.IFormatProvider>實作其<xref:System.IFormatProvider.GetFormat%2A>方法會傳回<xref:System.Globalization.CultureInfo>物件或<xref:System.Globalization.DateTimeFormatInfo>提供格式設定資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2285">A custom <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns either the <xref:System.Globalization.CultureInfo> object or the <xref:System.Globalization.DateTimeFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="02553-2286">如果`provider`已`null`，則<xref:System.Globalization.CultureInfo>使用對應至目前的文化特性的物件。</span><span class="sxs-lookup"><span data-stu-id="02553-2286">If `provider` is `null`, the <xref:System.Globalization.CultureInfo> object that corresponds to the current culture is used.</span></span>  
  
 <span data-ttu-id="02553-2287">`styles`參數包含一個或多個成員<xref:System.Globalization.DateTimeStyles>列舉型別，判斷是否與其中所未定義泛空白字元`format`可以出現在`s`及控制的剖析作業精確的行為。</span><span class="sxs-lookup"><span data-stu-id="02553-2287">The `styles` parameter includes one or more members of the <xref:System.Globalization.DateTimeStyles> enumeration that determine whether and where white space not defined by `format` can appear in `s` and that control the precise behavior of the parse operation.</span></span> <span data-ttu-id="02553-2288">下表描述每個方式的成員<xref:System.Globalization.DateTimeStyles>列舉型別會影響營運<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29>方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2288">The following table describes how each member of the <xref:System.Globalization.DateTimeStyles> enumeration affects the operation of the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29> method.</span></span>  
  
|<span data-ttu-id="02553-2289">DateTimeStyles 成員</span><span class="sxs-lookup"><span data-stu-id="02553-2289">DateTimeStyles member</span></span>|<span data-ttu-id="02553-2290">描述</span><span class="sxs-lookup"><span data-stu-id="02553-2290">Description</span></span>|  
|---------------------------|-----------------|  
|<xref:System.Globalization.DateTimeStyles.AdjustToUniversal>|<span data-ttu-id="02553-2291">剖析`s`而且，如果有需要，將它轉換成 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2291">Parses `s` and, if necessary, converts it to UTC.</span></span> <span data-ttu-id="02553-2292">如果`s`包含時區時差，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType>旗標，這個方法會剖析字串，呼叫<xref:System.DateTime.ToUniversalTime%2A>轉換傳回<xref:System.DateTime>值為 UTC並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2292">If `s` includes a time zone offset, or if `s` contains no time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeLocal?displayProperty=nameWithType> flag, the method parses the string, calls <xref:System.DateTime.ToUniversalTime%2A> to convert the returned <xref:System.DateTime> value to UTC, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2293">如果`s`表示它代表 UTC，或者如果`s`不包含時區資訊，但`styles`包括<xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType>旗標，方法剖析字串，會執行任何時區轉換對傳回<xref:System.DateTime>值，並設定<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2293">If `s` indicates that it represents UTC, or if `s` does not contain time zone information but `styles` includes the <xref:System.Globalization.DateTimeStyles.AssumeUniversal?displayProperty=nameWithType> flag, the method parses the string, performs no time zone conversion on the returned <xref:System.DateTime> value, and sets the <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2294">在其他情況下，此旗標會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="02553-2294">In all other cases, the flag has no effect.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowInnerWhite>|<span data-ttu-id="02553-2295">指定未定義的泛空白字元`format`任何個別的日期或時間項目之間可以出現。</span><span class="sxs-lookup"><span data-stu-id="02553-2295">Specifies that white space not defined by `format` can appear between any individual date or time element.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowLeadingWhite>|<span data-ttu-id="02553-2296">指定未定義的泛空白字元`format`可以出現在開頭`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2296">Specifies that white space not defined by `format` can appear at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowTrailingWhite>|<span data-ttu-id="02553-2297">指定未定義的泛空白字元`format`可以出現在結尾`s`。</span><span class="sxs-lookup"><span data-stu-id="02553-2297">Specifies that white space not defined by `format` can appear at the end of `s`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AllowWhiteSpaces>|<span data-ttu-id="02553-2298">指定`s`可能包含前置、 內部和尾端未定義的泛空白字元`format`。</span><span class="sxs-lookup"><span data-stu-id="02553-2298">Specifies that `s` may contain leading, inner, and trailing white spaces not defined by `format`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeLocal>|<span data-ttu-id="02553-2299">指定當`s`缺少任何時區的資訊，它會假設為代表當地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2299">Specifies that if `s` lacks any time zone information, it is assumed to represent a local time.</span></span> <span data-ttu-id="02553-2300">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標已存在，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>值設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2300">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.AssumeUniversal>|<span data-ttu-id="02553-2301">指定當`s`缺少任何時區的資訊，它會假設為代表 UTC。</span><span class="sxs-lookup"><span data-stu-id="02553-2301">Specifies that if `s` lacks any time zone information, it is assumed to represent UTC.</span></span> <span data-ttu-id="02553-2302">除非<xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType>旗標存在，則方法會將轉換傳回<xref:System.DateTime>值與 UTC 於當地時間和設定其<xref:System.DateTime.Kind%2A>屬性設<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2302">Unless the <xref:System.Globalization.DateTimeStyles.AdjustToUniversal?displayProperty=nameWithType> flag is present, the method converts the returned <xref:System.DateTime> value from UTC to local time and sets its <xref:System.DateTime.Kind%2A> property to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault>|<span data-ttu-id="02553-2303">如果`s`包含時間的日期，傳回的值設定為不含日期資訊`DateTime.MinValue.Date`。</span><span class="sxs-lookup"><span data-stu-id="02553-2303">If `s` contains time without date information, the date of the return value is set to `DateTime.MinValue.Date`.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.None>|<span data-ttu-id="02553-2304">`s`會剖析參數，使用預設值。</span><span class="sxs-lookup"><span data-stu-id="02553-2304">The `s` parameter is parsed using default values.</span></span> <span data-ttu-id="02553-2305">非出示中沒有空白字元`format`允許。</span><span class="sxs-lookup"><span data-stu-id="02553-2305">No white space other than that present in `format` is allowed.</span></span> <span data-ttu-id="02553-2306">如果`s`缺少傳回之日期的日期元件，<xref:System.DateTime>值設為 1/1/0001。</span><span class="sxs-lookup"><span data-stu-id="02553-2306">If `s` lacks a date component, the date of the returned <xref:System.DateTime> value is set to 1/1/0001.</span></span> <span data-ttu-id="02553-2307">如果`s`不包含時區資訊，<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2307">If `s` contains no time zone information, the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2308">時區資訊是否存在於`s`，時間會轉換為當地時間與<xref:System.DateTime.Kind%2A>屬性傳回的<xref:System.DateTime>物件設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2308">If time zone information is present in `s`, the time is converted to local time and the <xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> object is set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span>|  
|<xref:System.Globalization.DateTimeStyles.RoundtripKind>|<span data-ttu-id="02553-2309">針對包含時區資訊的字串，會嘗試防止轉換成<xref:System.DateTime>具有值及其<xref:System.DateTime.Kind%2A>屬性設定為<xref:System.DateTimeKind.Local?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2309">For strings that contain time zone information, tries to prevent the conversion to a <xref:System.DateTime> value with its <xref:System.DateTime.Kind%2A> property set to <xref:System.DateTimeKind.Local?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2310">主要，此旗標可避免 UTC 時間的轉換為本地時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2310">This flag primarily prevents the conversion of UTC times to local times.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="02553-2311">下列範例會使用<xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType>方法，以確保可成功剖析在幾個可能的格式的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2311">The following example uses the <xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=nameWithType> method to ensure that a string in a number of possible formats can be successfully parsed .</span></span>  
  
 [!code-csharp[System.Datetime.TryParseExact#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.TryParseExact/cs/TryParseExact2.cs#2)]
 [!code-vb[System.Datetime.TryParseExact#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.TryParseExact/vb/TryParseExact2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02553-2312"><paramref name="styles" /> 不是有效的 <see cref="T:System.Globalization.DateTimeStyles" /> 值。</span><span class="sxs-lookup"><span data-stu-id="02553-2312"><paramref name="styles" /> is not a valid <see cref="T:System.Globalization.DateTimeStyles" /> value.</span></span>  
  
<span data-ttu-id="02553-2313">-或-</span><span class="sxs-lookup"><span data-stu-id="02553-2313">-or-</span></span> 
 <span data-ttu-id="02553-2314"><paramref name="styles" /> 包含 <see cref="T:System.Globalization.DateTimeStyles" /> 值的無效組合 (例如，<see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> 和 <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />)。</span><span class="sxs-lookup"><span data-stu-id="02553-2314"><paramref name="styles" /> contains an invalid combination of <see cref="T:System.Globalization.DateTimeStyles" /> values (for example, both <see cref="F:System.Globalization.DateTimeStyles.AssumeLocal" /> and <see cref="F:System.Globalization.DateTimeStyles.AssumeUniversal" />).</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="02553-2315">在  [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，則<see cref="Overload:System.DateTime.TryParseExact" />方法會傳回<see langword="false" />小時元件和 AM/PM 指示項不在協議中，如果包含要剖析的字串。</span><span class="sxs-lookup"><span data-stu-id="02553-2315">In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the <see cref="Overload:System.DateTime.TryParseExact" /> method returns <see langword="false" /> if the string to be parsed contains an hour component and an AM/PM designator that are not in agreement.</span></span> <span data-ttu-id="02553-2316">在 [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]和舊版本中，AM/PM 指示項會被忽略。</span><span class="sxs-lookup"><span data-stu-id="02553-2316">In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, the AM/PM designator is ignored.</span></span></para></block>
        <altmember cref="Overload:System.DateTime.ParseExact" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <related type="Article" href="~/docs/standard/base-types/parsing-datetime.md"><span data-ttu-id="02553-2317">在 .NET Framework 中剖析日期和時間字串</span><span class="sxs-lookup"><span data-stu-id="02553-2317">Parsing Date and Time Strings in the .NET Framework</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="02553-2318">標準日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2318">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="02553-2319">自訂日期和時間格式字串</span><span class="sxs-lookup"><span data-stu-id="02553-2319">Custom Date and Time Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnixEpoch">
      <MemberSignature Language="C#" Value="public static readonly DateTime UnixEpoch;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTime UnixEpoch" />
      <MemberSignature Language="DocId" Value="F:System.DateTime.UnixEpoch" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnixEpoch As DateTime " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTime UnixEpoch;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnixEpoch : DateTime" Usage="System.DateTime.UnixEpoch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UtcNow">
      <MemberSignature Language="C#" Value="public static DateTime UtcNow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.DateTime UtcNow" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.UtcNow" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UtcNow As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property DateTime UtcNow { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.UtcNow : DateTime" Usage="System.DateTime.UtcNow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-2320">取得 <see cref="T:System.DateTime" /> 物件，此物件會設定為這部電腦上目前的日期和時間，以國際標準時間 (UTC) 表示。</span><span class="sxs-lookup"><span data-stu-id="02553-2320">Gets a <see cref="T:System.DateTime" /> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</span></span></summary>
        <value><span data-ttu-id="02553-2321">物件，其值為目前的 UTC 日期和時間。</span><span class="sxs-lookup"><span data-stu-id="02553-2321">An object whose value is the current UTC date and time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2322">這個屬性的解析取決於系統計時器，這取決於基礎作業系統。</span><span class="sxs-lookup"><span data-stu-id="02553-2322">The resolution of this property depends on the system timer, which depends on the underlying operating system.</span></span> <span data-ttu-id="02553-2323">它通常是介於 0.5 至 15 毫秒。</span><span class="sxs-lookup"><span data-stu-id="02553-2323">It tends to be between 0.5 and 15 milliseconds.</span></span>

 <span data-ttu-id="02553-2324">從.NET Framework 2.0 版開始，傳回值是<xref:System.DateTime>其<xref:System.DateTime.Kind%2A>屬性會傳回<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2324">Starting with the .NET Framework version 2.0, the return value is a <xref:System.DateTime> whose <xref:System.DateTime.Kind%2A> property returns <xref:System.DateTimeKind.Utc?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="02553-2325">使用替代<xref:System.DateTime.UtcNow%2A>是<xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="02553-2325">An alternative to using <xref:System.DateTime.UtcNow%2A> is <xref:System.DateTimeOffset.UtcNow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="02553-2326">雖然先前表示的日期和時間值，指派為 Coordinated Universal Time (UTC)<xref:System.DateTimeKind.Utc?displayProperty=nameWithType>至其<xref:System.DateTime.Kind%2A>屬性，後者會將指派日期和時間值的 UTC 時間的時差 (等於<xref:System.TimeSpan.Zero?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="02553-2326">While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <xref:System.DateTimeKind.Utc?displayProperty=nameWithType> to its <xref:System.DateTime.Kind%2A> property, the latter assigns the date and time value the UTC time's offset (equal to <xref:System.TimeSpan.Zero?displayProperty=nameWithType>).</span></span>
  
## Examples  
 <span data-ttu-id="02553-2327">下列範例會使用<xref:System.DateTime.SpecifyKind%2A>方法，示範如何<xref:System.DateTime.Kind%2A>屬性會影響<xref:System.DateTime.ToLocalTime%2A>和<xref:System.DateTime.ToUniversalTime%2A>轉換方法。</span><span class="sxs-lookup"><span data-stu-id="02553-2327">The following example uses the <xref:System.DateTime.SpecifyKind%2A> method to demonstrate how the <xref:System.DateTime.Kind%2A> property influences the <xref:System.DateTime.ToLocalTime%2A> and <xref:System.DateTime.ToUniversalTime%2A> conversion methods.</span></span>  
  
 [!code-csharp[DateTime.Kind_Suite#1](~/samples/snippets/csharp/VS_Snippets_CLR/DateTime.Kind_Suite/cs/ks.cs#1)]
 [!code-vb[DateTime.Kind_Suite#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DateTime.Kind_Suite/vb/ks.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.DateTimeOffset.UtcNow" />
        <altmember cref="M:System.TimeZone.GetUtcOffset(System.DateTime)" />
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public int Year { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Year" />
      <MemberSignature Language="DocId" Value="P:System.DateTime.Year" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Year As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Year { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Year : int" Usage="System.DateTime.Year" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02553-2328">取得這個執行個體所表示日期的年份元件。</span><span class="sxs-lookup"><span data-stu-id="02553-2328">Gets the year component of the date represented by this instance.</span></span></summary>
        <value><span data-ttu-id="02553-2329">年份，在 1 和 9999 之間。</span><span class="sxs-lookup"><span data-stu-id="02553-2329">The year, between 1 and 9999.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02553-2330"><xref:System.DateTime.Year%2A>屬性會傳回西曆中的目前執行個體的年份。</span><span class="sxs-lookup"><span data-stu-id="02553-2330">The <xref:System.DateTime.Year%2A> property returns the year of the current instance in the Gregorian calendar.</span></span> <span data-ttu-id="02553-2331">它不會傳回使用目前的文化特性的預設曆法的年份。</span><span class="sxs-lookup"><span data-stu-id="02553-2331">It does not return the year using the default calendar of the current culture.</span></span> <span data-ttu-id="02553-2332">若要擷取使用特定曆法的年份，您可以呼叫該行事曆`GetYear`方法，如下列程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="02553-2332">To retrieve the year using a particular calendar, you can call that calendar's `GetYear` method, as the following code shows.</span></span>  
  
 [!code-csharp[System.DateTime.Year#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)]
 [!code-vb[System.DateTime.Year#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="02553-2333">下列範例示範<xref:System.DateTime.Year%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="02553-2333">The following example demonstrates the <xref:System.DateTime.Year%2A> property.</span></span>  
  
 [!code-cpp[System.DateTime.Minute etc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CPP/class1.cpp#1)]
 [!code-csharp[System.DateTime.Minute etc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Minute etc/CS/class1.cs#1)]
 [!code-vb[System.DateTime.Minute etc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Minute etc/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.Calendar" />
      </Docs>
    </Member>
  </Members>
</Type>
