<Type Name="DataServiceCollection&lt;T&gt;" FullName="System.Data.Services.Client.DataServiceCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="313df6084daa06c14eefb8a2a969eb9f7a570ce8" /><Meta Name="ms.sourcegitcommit" Value="75eca440f8f4d595506405f48961f38649e160d7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="06/01/2019" /><Meta Name="ms.locfileid" Value="66457987" /></Metadata><TypeSignature Language="C#" Value="public class DataServiceCollection&lt;T&gt; : System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataServiceCollection`1&lt;T&gt; extends System.Collections.ObjectModel.ObservableCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.Client.DataServiceCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class DataServiceCollection(Of T)&#xA;Inherits ObservableCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class DataServiceCollection : System::Collections::ObjectModel::ObservableCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type DataServiceCollection&lt;'T&gt; = class&#xA;    inherit ObservableCollection&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services.Client</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ObservableCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">任何實體類型。</typeparam>
    <summary>表示動態實體集合，此集合會在項目加入或移除時或清單重新整理時提供告知。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)] 提供<xref:System.Data.Services.Client.DataServiceCollection%601>類別，以在用戶端應用程式中支援資料繫結至控制項。 這個類別繼承自<xref:System.Collections.ObjectModel.ObservableCollection%601>類別，它會實作<xref:System.Collections.Specialized.INotifyCollectionChanged>介面，並且是 Windows Presentation Foundation (WPF) 和 Silverlight 為基礎的應用程式的主要資料繫結機制。  
  
 您可以透過使用實作 <xref:System.Collections.ObjectModel.ObservableCollection%601> 介面的任何集合來載入 <xref:System.Collections.Generic.IEnumerable%601> 繫結集合。 載入到繫結集合的項目必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 介面。 如需詳細資訊，請參閱 <<c0> [ 將資料繫結至控制項](~/docs/framework/data/wcf/binding-data-to-controls-wcf-data-services.md)。  
  
   
  
## Examples  
 下列範例取自用於定義 WPF 中 `SalesOrders` 視窗之可延伸應用程式標記語言 (XAML) 頁面的程式碼後置頁面。 載入視窗時，<xref:System.Data.Services.Client.DataServiceCollection%601>會根據傳回客戶及相關的物件，由國家/地區篩選查詢的結果建立。 此結果繫結至 <xref:System.Windows.FrameworkElement.DataContext%2A> (WPF 視窗的根配置控制項) 的 <xref:System.Windows.Controls.StackPanel> 屬性。  
  
 [!code-csharp[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf.xaml.cs#wpfdatabinding)]
 [!code-vb[Astoria Northwind Client#WpfDataBinding](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml.vb#wpfdatabinding)]  
  
 以下是上一個範例中用於定義 WPF 中 `SalesOrders` 視窗的 XAML。  
  
 [!code-xaml[Astoria Northwind Client#WpfDataBindingXaml](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf.xaml#wpfdatabindingxaml)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">將資料繫結至控制項 (WCF 資料服務)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 當您使用建構函式提供 <xref:System.Data.Services.Client.DataServiceCollection%601> 值給 <xref:System.Data.Services.Client.TrackingMode.None> 來建立執行個體時，您可以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.TrackingMode> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 項目載入到集合之後，就會開始自動變更追蹤。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; items" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查詢，這個查詢會傳回當初始化集合時所用物件的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <summary>根據查詢執行，建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 提供給 <xref:System.Collections.Generic.IEnumerable%601> 的物件 `items` 集合通常是傳回集合中之項目的查詢。 但是，也可以提供正確型別的任何 <xref:System.Collections.Generic.IEnumerable%601> 集合。  
  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 當您使用建構函式提供 <xref:System.Data.Services.Client.DataServiceCollection%601> 值給 <xref:System.Data.Services.Client.TrackingMode.None> 來建立執行個體時，您可以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.TrackingMode> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" />，用於追蹤集合中物件的變更。</param>
        <summary>建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體，這個執行個體使用指定的 <see cref="T:System.Data.Services.Client.DataServiceContext" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此建構函式建立空白 <xref:System.Data.Services.Client.DataServiceCollection%601>，在不對服務執行查詢或沒有可用 <xref:System.Collections.Generic.IEnumerable%601> 的情況下加入實體物件。  
  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 當您使用建構函式提供 <xref:System.Data.Services.Client.DataServiceCollection%601> 值給 <xref:System.Data.Services.Client.TrackingMode.None> 來建立執行個體時，您可以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.TrackingMode> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查詢，可傳回用來初始化集合之物件的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> 值，指出是否要自動追蹤對集合中的項目所做的變更。</param>
        <summary>根據查詢執行以及指定的追蹤模式，建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 使用此類別建構函式並提供 <xref:System.Data.Services.Client.TrackingMode.None> 值給 `trackingMode`，以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.DataServiceCollection%601> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 提供給 <xref:System.Collections.Generic.IEnumerable%601> 的物件 `items` 集合通常是傳回集合中之項目的查詢。 但是，也可以提供正確型別的任何 <xref:System.Collections.Generic.IEnumerable%601> 集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As DataServiceContext, entitySetName As String, entityChangedCallback As Func(Of EntityChangedParams, Boolean), collectionChangedCallback As Func(Of EntityCollectionChangedParams, Boolean))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" />，用於追蹤集合中的項目。</param>
        <param name="entitySetName">集合中物件的實體集。</param>
        <param name="entityChangedCallback">委派，會封裝當實體變更時所呼叫的方法。</param>
        <param name="collectionChangedCallback">委派，會封裝當實體集合變更時所呼叫的方法。</param>
        <summary>建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體，這個執行個體具有所提供的變更方法委派，並使用指定的 <see cref="T:System.Data.Services.Client.DataServiceContext" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此建構函式建立空白 <xref:System.Data.Services.Client.DataServiceCollection%601>，在不對服務執行查詢或沒有可用 <xref:System.Collections.Generic.IEnumerable%601> 的情況下加入實體物件。  
  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 當您使用建構函式提供 <xref:System.Data.Services.Client.DataServiceCollection%601> 值給 <xref:System.Data.Services.Client.TrackingMode.None> 來建立執行個體時，您可以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.TrackingMode> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查詢，可傳回用來初始化集合之物件的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> 值，指出是否要自動追蹤對集合中的項目所做的變更。</param>
        <param name="entitySetName">集合中物件的實體集。</param>
        <param name="entityChangedCallback">委派，會封裝當實體變更時所呼叫的方法。</param>
        <param name="collectionChangedCallback">委派，會封裝當實體集合變更時所呼叫的方法。</param>
        <summary>建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體，這個執行個體以查詢執行為根據，並且具有所提供的變更方法委派。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entityChanged` 和 `collectionChanged` 函數分別是由 <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> 事件叫用。 `entityChanged` 方法接受 <xref:System.Data.Services.Client.EntityCollectionChangedParams> 值，而 `collectionChanged` 方法則接受 <xref:System.Data.Services.Client.EntityChangedParams> 值。 這兩種方法都必須傳回布林值，指出函數是否已處理事件。 此方法傳回時`true`，預設行為仍然會發生。  
  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 當您使用建構函式提供 <xref:System.Data.Services.Client.DataServiceCollection%601> 值給 <xref:System.Data.Services.Client.TrackingMode.None> 來建立執行個體時，您可以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.TrackingMode> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataServiceCollection (System.Data.Services.Client.DataServiceContext context, System.Collections.Generic.IEnumerable&lt;T&gt; items, System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, Func&lt;System.Data.Services.Client.EntityChangedParams,bool&gt; entityChangedCallback, Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,bool&gt; collectionChangedCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Services.Client.DataServiceContext context, class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items, valuetype System.Data.Services.Client.TrackingMode trackingMode, string entitySetName, class System.Func`2&lt;class System.Data.Services.Client.EntityChangedParams, bool&gt; entityChangedCallback, class System.Func`2&lt;class System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; collectionChangedCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataServiceCollection(System::Data::Services::Client::DataServiceContext ^ context, System::Collections::Generic::IEnumerable&lt;T&gt; ^ items, System::Data::Services::Client::TrackingMode trackingMode, System::String ^ entitySetName, Func&lt;System::Data::Services::Client::EntityChangedParams ^, bool&gt; ^ entityChangedCallback, Func&lt;System::Data::Services::Client::EntityCollectionChangedParams ^, bool&gt; ^ collectionChangedCallback);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; : System.Data.Services.Client.DataServiceContext * seq&lt;'T&gt; * System.Data.Services.Client.TrackingMode * string * Func&lt;System.Data.Services.Client.EntityChangedParams, bool&gt; * Func&lt;System.Data.Services.Client.EntityCollectionChangedParams, bool&gt; -&gt; System.Data.Services.Client.DataServiceCollection&lt;'T&gt;" Usage="new System.Data.Services.Client.DataServiceCollection&lt;'T&gt; (context, items, trackingMode, entitySetName, entityChangedCallback, collectionChangedCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Data.Services.Client.DataServiceContext" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
        <Parameter Name="trackingMode" Type="System.Data.Services.Client.TrackingMode" />
        <Parameter Name="entitySetName" Type="System.String" />
        <Parameter Name="entityChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityChangedParams,System.Boolean&gt;" />
        <Parameter Name="collectionChangedCallback" Type="System.Func&lt;System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><see cref="T:System.Data.Services.Client.DataServiceContext" />，用於追蹤集合中的項目。</param>
        <param name="items"><see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> 或 LINQ 查詢，可傳回用來初始化集合之物件的 <see cref="T:System.Collections.Generic.IEnumerable`1" /> 集合。</param>
        <param name="trackingMode"><see cref="T:System.Data.Services.Client.TrackingMode" /> 值，指出是否要自動追蹤對集合中的項目所做的變更。</param>
        <param name="entitySetName">集合中物件的實體集。</param>
        <param name="entityChangedCallback">委派，會封裝當實體變更時所呼叫的方法。</param>
        <param name="collectionChangedCallback">委派，會封裝當實體集合變更時所呼叫的方法。</param>
        <summary>建立 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 類別的新執行個體，這個執行個體以查詢執行為根據、具有所提供的變更方法委派，並且使用所提供的 <see cref="T:System.Data.Services.Client.DataServiceContext" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Data.Services.Client.DataServiceCollection%601> 已啟用自動變更追蹤。 使用此類別建構函式提供 <xref:System.Data.Services.Client.TrackingMode.None> 值給 `trackingMode`，以建立使用手動變更追蹤的 <xref:System.Data.Services.Client.DataServiceCollection%601> 執行個體。 當您使用手動追蹤時，您必須實作 <xref:System.ComponentModel.INotifyPropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged> 並處理引發事件，向 <xref:System.Data.Services.Client.DataServiceContext> 手動回報變更。  
  
 當 <xref:System.Data.Services.Client.DataServiceContext> 不是具有 `items` 執行個體參考的 <xref:System.Data.Services.Client.DataServiceQuery%601> 或 <xref:System.Data.Services.Client.QueryOperationResponse%601> 時，必須提供 <xref:System.Data.Services.Client.DataServiceContext>。  
  
 `entityChanged` 和 `collectionChanged` 函數分別是由 <xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged> 和 <xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged> 事件叫用。 `entityChanged` 方法接受 <xref:System.Data.Services.Client.EntityCollectionChangedParams> 值，而 `collectionChanged` 方法則接受 <xref:System.Data.Services.Client.EntityChangedParams> 值。 這兩種方法都必須傳回布林值，指出函數是否已處理事件。 此方法傳回時`true`，還是會發生預設行為。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (bool stopTracking);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(bool stopTracking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear (stopTracking As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(bool stopTracking);" />
      <MemberSignature Language="F#" Value="override this.Clear : bool -&gt; unit" Usage="dataServiceCollection.Clear stopTracking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stopTracking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stopTracking">如果為 <see langword="true" />，則會從 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中斷所有項目的連結。</param>
        <summary>從集合中移除所有項目，並且選擇性地從 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 中斷所有項目的連結。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當項目卸離時，資料圖形中的所有相關物件也會從 <xref:System.Data.Services.Client.DataServiceContext> 卸離。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Continuation">
      <MemberSignature Language="C#" Value="public System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt; Continuation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Services.Client.DataServiceQueryContinuation`1&lt;!T&gt; Continuation" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.Client.DataServiceCollection`1.Continuation" />
      <MemberSignature Language="VB.NET" Value="Public Property Continuation As DataServiceQueryContinuation(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ Continuation { System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ get(); void set(System::Data::Services::Client::DataServiceQueryContinuation&lt;T&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Continuation : System.Data.Services.Client.DataServiceQueryContinuation&lt;'T&gt; with get, set" Usage="System.Data.Services.Client.DataServiceCollection&lt;'T&gt;.Continuation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Services.Client.DataServiceQueryContinuation&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於傳回下一組分頁式結果的接續物件。</summary>
        <value><see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> 物件，其中包含用於傳回下一組分頁式結果的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當資料服務中啟用分頁時，<xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> 屬性會傳回用於存取下一組分頁式結果的連結。 如需詳細資訊，請參閱 <<c0> [ 設定資料服務](~/docs/framework/data/wcf/configuring-the-data-service-wcf-data-services.md)。  
  
 將分頁式結果載入到 <xref:System.Data.Services.Client.DataServiceCollection%601> 時，您必須透過呼叫  <xref:System.Data.Services.Client.DataServiceCollection%601.Load%28System.Collections.Generic.IEnumerable%7B%600%7D%29> 上的 <xref:System.Data.Services.Client.DataServiceCollection%601> 方法，傳遞從  <xref:System.Data.Services.Client.DataServiceCollection%601.Continuation%2A> 屬性取得的 URI 執行結果，明確載入頁面。  
  
   
  
## Examples  
 下列範例取自用於定義 WPF 中 `SalesOrders` 視窗之可延伸應用程式標記語言 (XAML) 頁面的程式碼後置頁面。 載入視窗時，<xref:System.Data.Services.Client.DataServiceCollection%601>會根據傳回客戶，依國家 （地區） 篩選查詢的結果建立。 此分頁結果的所有頁面都會載入 (包含相關的訂單)，並且會繫結至 <xref:System.Windows.FrameworkElement.DataContext%2A> (WPF 視窗的根配置控制項) 的 <xref:System.Windows.Controls.StackPanel> 屬性。 如需詳細資訊，請參閱[如何：將資料繫結至 Windows Presentation Foundation 項目](~/docs/framework/data/wcf/bind-data-to-wpf-elements-wcf-data-services.md)。  
  
 [!code-csharp[Astoria Northwind Client#BindPagedData](~/samples/snippets/csharp/VS_Snippets_Misc/astoria_northwind_client/cs/customerorderswpf3.xaml.cs#bindpageddata)]
 [!code-vb[Astoria Northwind Client#BindPagedData](~/samples/snippets/visualbasic/VS_Snippets_Misc/astoria_northwind_client/vb/customerorderswpf3.xaml.vb#bindpageddata)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/32f9b588-c832-44c4-a7e0-fcce635df59a">載入延後內容 (WCF 資料服務)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b32e1d49-c214-4cb1-867e-88fbb3d08c8d">將資料繫結至控制項 (WCF 資料服務)</related>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="public void Detach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Detach() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Detach" />
      <MemberSignature Language="VB.NET" Value="Public Sub Detach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Detach();" />
      <MemberSignature Language="F#" Value="member this.Detach : unit -&gt; unit" Usage="dataServiceCollection.Detach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>停用集合中所有項目的 <see cref="T:System.Data.Services.Client.DataServiceContext" /> 追蹤。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 只有在 <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> 是根集合時才能呼叫 <xref:System.Data.Services.Client.DataServiceCollection%601>方法。  
  
 在根集合上呼叫 <xref:System.Data.Services.Client.DataServiceCollection%601.Detach%2A> 方法時，也會停止追蹤資料圖形中的所有相關物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, T item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, !T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As T)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, T item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * 'T -&gt; unit" Usage="dataServiceCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">要加入項目的索引。</param>
        <param name="item">要新增的項目。</param>
        <summary>將指定的項目加入至集合中的指定索引處。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您手動追蹤集合變更時，您必須覆寫 <xref:System.Data.Services.Client.DataServiceCollection%601.InsertItem%2A> 方法以防止項目自動加入到集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將實體載入至集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Collections.Generic.IEnumerable&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (items As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Collections::Generic::IEnumerable&lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.Load : seq&lt;'T&gt; -&gt; unit" Usage="dataServiceCollection.Load items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="items">要加入至 <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> 的實體物件集合。</param>
        <summary>將實體物件的集合載入至集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法會附加集合中的所有物件 (如果這些物件還沒有附加到與 <xref:System.Data.Services.Client.DataServiceContext> 相關聯的 <xref:System.Data.Services.Client.DataServiceCollection%601>)。  
  
 透過使用 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法附加物件時，也會附加所有相關物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(T item);" />
      <MemberSignature Language="F#" Value="member this.Load : 'T -&gt; unit" Usage="dataServiceCollection.Load item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services.Client</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">要加入的實體物件。</param>
        <summary>將單一實體物件載入至集合中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法會附加此物件 (如果此物件還沒有附加到與 <xref:System.Data.Services.Client.DataServiceContext> 相關聯的 <xref:System.Data.Services.Client.DataServiceCollection%601>)。  
  
 透過使用 <xref:System.Data.Services.Client.DataServiceCollection%601.Load%2A> 方法附加物件時，也會附加所有相關物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>